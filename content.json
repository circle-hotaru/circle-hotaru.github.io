{"meta":{"title":"circlehotarux's blog","subtitle":"有花堪折直须折，莫待无花空折枝","description":"","author":"circlehotarux","url":"http://circlehotarux.me","root":"/"},"pages":[{"title":"About me","date":"2020-07-18T01:10:45.000Z","updated":"2020-08-02T07:49:32.641Z","comments":true,"path":"about/index.html","permalink":"http://circlehotarux.me/about/index.html","excerpt":"","text":"Hey 👋, I’m circlehotarux! Hi, I’m circlehotarux, a Front-end Web Developer 🚀 from China, currently, I’m a junior student in Huizhou University. Beside’s programming, I enjoy photograph. Talking about Personal Stuffs: 👨🏽‍💻 I’m currently looking for a front-end development job; 🌱 I’m currently learning -Vue.js; 💬 Ask me about anything, I am happy to help; 📫 How to reach me: mightyherox@gmail.com;"}],"posts":[{"title":"对惯性思维的生活观察","slug":"对惯性思维的生活观察","date":"2020-08-18T07:22:04.000Z","updated":"2020-08-18T07:24:13.033Z","comments":true,"path":"2020/08/18/对惯性思维的生活观察/","link":"","permalink":"http://circlehotarux.me/2020/08/18/%E5%AF%B9%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4%E7%9A%84%E7%94%9F%E6%B4%BB%E8%A7%82%E5%AF%9F/","excerpt":"","text":"昨天家里一楼电视坏了，今天把二楼的电视搬下去给爷爷奶奶看。 一楼的电视平时都是爷爷奶奶在看，看的是有线数字电视。二楼的电视平时不怎么看，所以就搬下去一楼顶着先。爷爷奶奶让我播珠江台，但是我不会设置有线数字电视的信源，就让爷爷奶奶先看网络连接的电视剧好了。 按理来讲，网络电视的电视资源更丰富，而且我也播了爷爷奶奶喜欢看的抗日剧给他们了。但是他们看了没一会儿就关了。后来我成功设置了有线数字电视的信源后电视就一直在播放了。我推测原因是因为爷爷奶奶不适应网络电视的操作。有线数字电视使用遥控器选择频道就能播放了，但是网络电视是用遥控器控制菜单，对老人家确实有一定的难度。其次他们已经习惯了根据卫视的时间表跳台，XX台XX时间段播XX剧就跳转过去；但是网络电视却不是这种模式，你想看什么就看什么（但是播放前要先观看广告，这也会让老人家好感下降）。 前段日子我换了家里的路由器，WIFI也跟着换了，信号质量和速度都比以前好很多。但是没过几天我爸就让我换回原来的WIFI，因为家里的监控摄像头连接的是原来的WIFI。我说摄像头换个WIFI就好了，然后我爸又说这WIFI没用，一到卫生间就没信号（因为我帮他连接的是5G频道，速度快但是范围小，后面改成连接2.4G省事算了）。我爸把这些责任都推到新换的WIFI身上，新WIFI带来的改变是他难以接受的。 上述两个例子都反映出我家人对改变的抗拒，或者说是惯性思维。关于惯性思维，维基百科是如下介绍的： 惯性思维指人习惯性地因循以前的思路思考问题，仿佛物体运动的惯性。惯性思维常会造成思考事情时有些盲点，且缺少创新或改变的可能性。 未完待续……","categories":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/tags/%E7%94%9F%E6%B4%BB/"},{"name":"惯性思维","slug":"惯性思维","permalink":"http://circlehotarux.me/tags/%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4/"}]},{"title":"融入社会以及一些新发现","slug":"融入社会以及一些新发现","date":"2020-08-10T06:58:39.000Z","updated":"2020-08-10T08:52:20.998Z","comments":true,"path":"2020/08/10/融入社会以及一些新发现/","link":"","permalink":"http://circlehotarux.me/2020/08/10/%E8%9E%8D%E5%85%A5%E7%A4%BE%E4%BC%9A%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E6%96%B0%E5%8F%91%E7%8E%B0/","excerpt":"","text":"王者荣耀我从高中开始就很少接触网游、手游，甚至上了大学后也仅限玩一些单机游戏。为什么会这样呢？应该是家庭环境影响了我。小时候家所在的地方比较偏僻，而且周围没什么同龄人。所以当小朋友们在网吧一起打拳皇、CF、地下城的时候，我甚至连电脑是什么样子的都不知道。一直到高中我的社交圈都很狭窄，因为我跟同龄人都没什么共同话题。 高考结束后我曾下载过王者荣耀，但是很快就删掉了。因为那个时候王者荣耀已经很火了，玩的人都已经很熟练了，我一个新手经常挂掉，导致经常被队友嘲讽。于是卸载了，毕竟很没有面子而且很没有成就感。上大学的时候王者荣耀就更火了，不止男生，连女生都开始玩。记得有一次出去聚餐，几个人打开了王者，当时暗恋的女生，感觉挺文静的，没想到也会打王者。让旁边的男生带她打排位。那时吃醋的心情…… 最近在家太无聊了，也学不下去，在舍友怂恿下下载了王者。玩了几天感觉还可以，毕竟有舍友带躺。而且认识的几个学妹（没怎么聊过天）看见我在玩，就问我怎么开始打王者了，还说要带我。 游戏这玩意，不能说它一定是坏的。有个学霸舍友经常在图书馆学习，回来宿舍后打两把地下城就休息。游戏可以给我们降低沟通成本，提供好友之间的话题。不能因为容易沉迷就一味地抗拒它。 抖音我妈在家吃完晚饭后习惯刷抖音，有段时间我经常听到同一BGM的声音，听起来像电视剧的片尾曲（别问我为什么听得出来）。然后我就问我妈是不是在看电视剧，她说是的。跟她说不要用手机屏幕看电视剧，对眼睛不好，用电视看。结果她看了几天后又开始在抖音上看了。 当时也没在意，前几天自己下载抖音后发现原来抖音还真能看电视剧，而且很容易沉迷用抖音看电视剧。 它是怎么做的呢？一些用户把一集电视剧里的精彩部分/重要部分剪辑成短视频。这个短视频虽然是缩水的，但是剧情上没太大影响，而且都是精彩片段，很容易吸引人。在看完一个后很想继续看下去。有时候用户没有剪辑完全部剧集，没关系，抖音的推荐算法会在你下一次打开抖音，而且刚好用户剪辑了新的短视频的时候推送给你。把你留在抖音。 这个操作我是真没想到，但是它却很有用。在这个快消时代，看一集电视剧可能要二十多分钟；在抖音，两三分钟就看完，并且不影响你对剧情的理解。这个过程就有点像它把吃过的东西吐出来给你吃，你还吃得很香。 另外抖音上有个叫川久保玲球的用户，她上传的视频都是和一些普通老百姓的合照，比如小卖铺老板、环卫工人等。她是做什么的？我看到她有在卖衣服，但是与常人不一样的是，她选择跟身边的普通人合照，也没有特意去拍衣服，仅仅只是合照。但是与常人不同，就代表她成功了一半了。如果她坚持下来，那她也离成功不远了。事实上，现在她的粉丝数和获赞数就已经很高了。 总结以前我有个误区，一直觉得在抖音、微博或者其他社交平台在做广告的用户都是不好的，在恰烂钱。但是前几天看当下频道出的一个讲小红书博主的视频的时候，被她的一个观点点醒了。她认为，自己做广告的同时是在降低观众获取新知识的门槛。可能一个五分钟的视频是她花费一个星期去策划，去提炼内容，让观众可以更容易地接受。同时做一条广告后要出四个无广告视频来维持用户粘性，这会要求她投入更多的精力去做好一个博主。 回到王者和抖音上，传统观点认为游戏或者社交平台会毁了我们的生活。主要原因是它们容易让我们沉迷，脱离现实生活。但是，对个人而言，你没有那么伟大。如果你改变不了时代发展的潮流，那你就去适应它。尤其是游戏和社交正慢慢变成“现实”。 油管上有关注一个用户GaryVee，他有做过一些视频，大意是讲年轻人应该去适应生活，要抓住机遇，不要视TikTok或者Instagram为洪水猛兽，要利用它们赚钱。我个人觉得这个想法是对的，不能抱着旧观念不放。而且我出来社会，我不赚钱，我出来干什么？一些视频可能会跟你说不忘初心，不要老想着钱。但是如果你连维持自己的生活需要都做不到，还谈什么改变世界。并且有钱后才能有更大的能力去做你想做的事情。","categories":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"王者荣耀","slug":"王者荣耀","permalink":"http://circlehotarux.me/tags/%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/"},{"name":"抖音","slug":"抖音","permalink":"http://circlehotarux.me/tags/%E6%8A%96%E9%9F%B3/"},{"name":"社交","slug":"社交","permalink":"http://circlehotarux.me/tags/%E7%A4%BE%E4%BA%A4/"}]},{"title":"height: 100%无效？","slug":"height-100-无效？","date":"2020-07-21T08:15:57.000Z","updated":"2020-07-21T08:38:19.368Z","comments":true,"path":"2020/07/21/height-100-无效？/","link":"","permalink":"http://circlehotarux.me/2020/07/21/height-100-%E6%97%A0%E6%95%88%EF%BC%9F/","excerpt":"","text":"昨晚在做一个小demo时想要实现水平垂直都居中的效果，使用flex布局，CSS样式如下： 123456.container &#123; display: flex; flex-wrap: wrap; justify-content: center; align-items: center;&#125; 效果如下： 可以看到水平居中生效了，但垂直方向上并没有居中。google一番后发现可能是没有指定高度，遂加上height: 100%，结果还是不行。试着给出具体值，如height: 600px，发现确实有居中。因此一定是height: 100%有问题。 F12右键检查，发现父元素的高度跟container一样高，因此原因很可能是出在父元素身上。 google一番后发现原来浏览器默认的body和html高度是auto。因此需要使用如下代码进行指定： 123html, body &#123; height: 100%;&#125; 另外块元素的高度也需要设置或者由内容的高度来决定。 说起来，这个问题好像在大二刚接触前端的时候也有搜索过，看来不会的还是要多多记录下来，以后还可以回过头来看看自己踩过的坑","categories":[{"name":"编程","slug":"编程","permalink":"http://circlehotarux.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://circlehotarux.me/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"http://circlehotarux.me/tags/HTML/"}]},{"title":"JavaScript、ES6、TypeScript之间的关系","slug":"JavaScript、ES6、TypeScript之间的关系","date":"2020-07-15T13:16:39.000Z","updated":"2020-07-15T13:52:02.247Z","comments":true,"path":"2020/07/15/JavaScript、ES6、TypeScript之间的关系/","link":"","permalink":"http://circlehotarux.me/2020/07/15/JavaScript%E3%80%81ES6%E3%80%81TypeScript%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/","excerpt":"","text":"今天复习前端三剑客之JavaScript。 JavaScript和ES6JavaScript看了也挺多遍了，在学习过程中经常遇到ES6和TypeScript这些字眼。以前因为没接触过，所以不自觉地就觉得它们高深莫测，好像很难的样子。今天不知道看什么资料复习，找到了以前经常看的小马技术频道，里面刚好有讲ES6，遂把这个系列视频看了一遍。视频不算多，一共就23个视频，每个视频大概五六分钟时长。看完后发现ES6的一些语法其实我之前也有接触过、使用过，只不过当时并不知道而已。 那么ES6和JavaScript之间到底有什么关系呢？根据个人理解，ES6是一个规范，而JavaScript是具体实现。当然除了ES6还有其他版本ES，只不过目前ES6较为流行和普适。 JavaScript和TypeScript那么TypeScript又是什么呢？小马技术频道里也有一个TypeScript的系列视频，不过目前还没看完。根据维基百科的介绍： TypeScript是一种开源的编程语言，该语言项目由微软进行维护和管理。TypeScript不仅包含JavaScript的语法，而且还提供了静态类型检查以及使用看起来像基于类的面向对象编程语法操作Prototype。 大众说法说，TypeScript是JavaScript的超集。简单理解就是语法上合法的JavaScript，一定是合法的TypeScript。 如何使用TypeScript呢？在win10操作系统下，您可以通过npm install -g typescript进行安装，安装完成后使用tsc -v进行检查，若出现版本号则表示安装成功。 编写一个以ts为后缀的文件，接着使用tsc ${fileName}.ts进行编译，编译成功后就可以看到多出来一个${fileName}.js文件，直接运行node ${fileName}.js即可。 另外，学习JavaScript过程中也经常遇到Babel这个名词，通俗理解，Babel解决并不是所有浏览器都支持高版本JavaScript的问题。它可以将高版本JavaScript转变为低版本。","categories":[{"name":"编程","slug":"编程","permalink":"http://circlehotarux.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://circlehotarux.me/tags/JavaScript/"},{"name":"ES6","slug":"ES6","permalink":"http://circlehotarux.me/tags/ES6/"},{"name":"TypeScript","slug":"TypeScript","permalink":"http://circlehotarux.me/tags/TypeScript/"},{"name":"Babel","slug":"Babel","permalink":"http://circlehotarux.me/tags/Babel/"}]},{"title":"人生苦短，及时行乐","slug":"人生苦短，及时行乐","date":"2020-07-13T06:15:26.000Z","updated":"2020-07-13T06:40:14.487Z","comments":true,"path":"2020/07/13/人生苦短，及时行乐/","link":"","permalink":"http://circlehotarux.me/2020/07/13/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD%EF%BC%8C%E5%8F%8A%E6%97%B6%E8%A1%8C%E4%B9%90/","excerpt":"","text":"最近情绪不太稳定，有时候是积极的，有时候是消极的。还经常回忆过去，想着当时应该怎么怎么做才对。可惜呀~人生苦短，过去的事情无法改变了。而未来，似乎也没剩下多少时间。随着年龄的增长越来越觉得时间短暂了。也因为如此时常变得焦虑，总觉得要做的事情有很多，但是又不想去做，就这么拖着。 不应该这样吧？我应该变成一个积极乐观向上的人才对。 也可能是因为我所接触的人都没什么朝气？应该是有这部分影响的。昨天看油管上看了一个台湾油管主的视频感觉特别有活力啊。其实上学期教我们软件工程课程的台湾老师也很有活力，虽然看上去有50左右了吧，心态却跟20岁差不多。国外看到的很多视频主都很有活力，国内看到的大部分都很拘谨，虽然也有笑容，但看不出他们有活力，感觉被什么东西压着。 一直觉得互联网应该让人们变得更开放、更包容。但是国内互联网却把人极端化、偏见化，非黑即白。虽然生活中大部分人都是灰色的，但是一到网上，大家就不自觉地开始站队，要么支持这个，要么支持那个。 对了，傍晚约了个师妹拍照。好久没拍照了，拍照应该是我在大学做的最开心的事情了，可以预见许多人，可以收到许多人的赞美，可以改变自己的生活，这是一件正确而快乐的事情。 我要成为什么样的人呢？成为多度橙吧，做很多快乐的事情。","categories":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/tags/%E7%94%9F%E6%B4%BB/"},{"name":"碎碎念","slug":"碎碎念","permalink":"http://circlehotarux.me/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"Bilibili评论转图片神器开发日志-CSS Variables使用","slug":"Bilibili评论转图片神器开发日志-CSS-Variables使用","date":"2020-07-12T02:43:09.000Z","updated":"2020-07-12T03:00:41.093Z","comments":true,"path":"2020/07/12/Bilibili评论转图片神器开发日志-CSS-Variables使用/","link":"","permalink":"http://circlehotarux.me/2020/07/12/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-CSS-Variables%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 在开发评论模块过程中想要实现按键切换修改评论背景和文字颜色的功能，代码如下： 1234567891011&lt;div class=\"d-flex flex-wrap align-items-start justify-content-center\"&gt; &lt;div class=\"comment\" v-for=\"item in comments\" ref=\"comment\" :class=\"&#123; 'comment-dark': darkTheme &#125;\" :style=\"&#123; 'border-radius': borderRadius + 'px' &#125;\"&gt; &lt;img class=\"author-thumbnail\" :src=\"item.member.avatar\" alt=\"\" /&gt; &lt;div class=\"comment-main\"&gt; &lt;div class=\"user-name\"&gt;&#123;&#123; item.member.uname &#125;&#125;&lt;/div&gt; &lt;div class=\"content\" v-html=\"item.content.message\"&gt;&lt;/div&gt; &lt;div class=\"published-time\" v-if=\"displayTime\"&gt;&#123;&#123; timestampFormat(item.ctime) &#125;&#125;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344.comment &#123; background-color: #f9f9f9; display: flex; border-radius: 10px; margin: 4px; padding: 16px; width: 360px;&#125;.comment .author-thumbnail &#123; border-radius: 50%; flex-shrink: 0; height: 40px; margin-right: 16px; width: 40px;&#125;.comment .comment-main .user-name&#123; color: #222; display: inline-block; font-size: 12px; font-weight: 700; line-height: 18px; display: block;&#125;.comment .comment-main .content &#123; color: #222; line-height: 20px; padding: 2px 0; font-size: 14px; overflow: hidden;&#125;.comment .comment-main .published-time &#123; color: #aaa; line-height: 26px; font-size: 12px;&#125;.comment-dark&#123; background-color: #181818; color: #fff;&#125; 使用的是Vue，当darkTheme为true时，显示comment-dark样式，利用CSS层叠性覆盖前面comment设定的背景和文字颜色。但是实际过程中遇到了CSS权重问题，只能修改背景颜色而无法修改文字颜色。 google后发现有CSS Variables这么个东西，它的主要特点和用法是： 可以继承 以--开头来命名/定义变量（区分大小写） 用var()来读取变量值 这样的话，我只需要进行如下修改即可完成想要的效果： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748.comment &#123; --bi-spec-general-background: #f9f9f9; --bi-spec-text-primary: #222; --bi-spec-text-secondary: #aaa; background-color: var(--bi-spec-general-background); display: flex; border-radius: 10px; margin: 4px; padding: 16px; width: 360px;&#125;.comment-dark&#123; --bi-spec-general-background: #181818; --bi-spec-text-primary: #fff; --bi-spec-text-secondary: #aaa;&#125;.comment .author-thumbnail &#123; border-radius: 50%; flex-shrink: 0; height: 40px; margin-right: 16px; width: 40px;&#125;.comment .comment-main .user-name&#123; color: var(--bi-spec-text-primary); display: inline-block; font-size: 12px; font-weight: 700; line-height: 18px; display: block;&#125;.comment .comment-main .content &#123; color: var(--bi-spec-text-primary); line-height: 20px; padding: 2px 0; font-size: 14px; overflow: hidden;&#125;.comment .comment-main .published-time &#123; color: var(--bi-spec-text-secondary); line-height: 26px; font-size: 12px;&#125; 参考： 30 天 CSS 隨手筆記 - 第 12 天 - CSS Variables~!!","categories":[{"name":"开发","slug":"开发","permalink":"http://circlehotarux.me/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://circlehotarux.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://circlehotarux.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://circlehotarux.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"http://circlehotarux.me/tags/CSS/"}]},{"title":"Bilibili评论转图片神器开发日志-JSZip使用","slug":"Bilibili评论转图片神器开发日志-JSZip使用","date":"2020-07-11T15:11:13.000Z","updated":"2020-07-11T15:18:28.048Z","comments":true,"path":"2020/07/11/Bilibili评论转图片神器开发日志-JSZip使用/","link":"","permalink":"http://circlehotarux.me/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-JSZip%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 开发这个工具的思路是使用html2canvas将获取到的评论转成PNG图片，再通过JSZip打包下载。 JSZip使用起来挺方便的，官网也有示例。在开发过程中遇到的一个问题是想要获取文件压缩打包的进度，我在中文搜索环境下找不到相关内容，不过在JSZip的github issues中找到了相关记录。 代码如下： 12345678910for(var a&#x3D;0; a &lt; name.length; a++) &#123; zip.file(&quot;DXFs&#x2F;&quot; + name[a] + &quot;.dxf&quot;, toDXF(shape));&#125;zip.generateAsync(&#123;type: &quot;blob&quot;, streamFiles: true&#125;, function updateCallback(metadata) &#123; element.style.width &#x3D; metadata.percent + &#39;%&#39;;&#125;).then(function (blob) &#123; saveAs(blob, &quot;Files.zip&quot;);&#125;);","categories":[{"name":"开发","slug":"开发","permalink":"http://circlehotarux.me/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://circlehotarux.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://circlehotarux.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://circlehotarux.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JSZip","slug":"JSZip","permalink":"http://circlehotarux.me/tags/JSZip/"}]},{"title":"Bilibili评论转图片神器开发日志-html2canvas使用","slug":"Bilibili评论转图片神器开发日志-html2canvas使用","date":"2020-07-11T13:05:39.000Z","updated":"2020-07-30T15:21:11.064Z","comments":true,"path":"2020/07/11/Bilibili评论转图片神器开发日志-html2canvas使用/","link":"","permalink":"http://circlehotarux.me/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-html2canvas%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 开发这个工具的思路是使用html2canvas将获取到的评论转成PNG图片，再通过JSZip打包下载。 html2canvas这个工具的使用挺简单的，官网也有示例。 以下记录自己遇到的一些问题： 图片空白？我使用的是Vue，推测原因是DOM还没渲染完，html2canvas就开始转图片了。解决方法是使用nextTick，等DOM渲染完了再转图片。 在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进Vue.nextTick()的回调函数中。与之对应的就是mounted()钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，此时在该钩子函数中进行任何DOM操作都不会有问题 。简单理解Vue中的nextTick 2020年7月30日 更新 昨天把nextTick去掉未发现空白问题，估计当时是由于别的原因造成的，现在无法重现问题。 canvas中含有跨域图片，图片不显示？html2canvas默认不显示跨域图片，需要在配置中开启 1234&#x2F;&#x2F; 允许跨域（图片相关）allowTaint: true,&#x2F;&#x2F; 允许跨域（图片相关）useCORS: true, 窗口有滚动，图片显示有偏差？需要计算绘制元素的位置，具体代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647this.$nextTick(() &#x3D;&gt; &#123; setTimeout(() &#x3D;&gt; &#123; &#x2F;&#x2F; 获取需要绘制的元素 let comments &#x3D; this.$refs.comment; for (let i &#x3D; 0; i &lt; comments.length; i++) &#123; &#x2F;&#x2F; 评论内容做图片名 let imgName &#x3D; comments[i].innerText.split(&quot;\\n&quot;)[1]; &#x2F;&#x2F; 返回元素的大小及其相对于视口的位置 let rect &#x3D; comments[i].getBoundingClientRect(); &#x2F;&#x2F; 不知为何rect.x返回的坐标不准确，需要加上8.5才行 rect.x +&#x3D; 8.5; &#x2F;&#x2F; 获取滚动轴滚动的长度 let scrollTop &#x3D; document.documentElement.scrollTop || document.body.scrollTop &#x2F;&#x2F; 获取dom 宽度 let width &#x3D; comments[i].offsetWidth &#x2F;&#x2F; 获取dom 高度 let height &#x3D; comments[i].offsetHeight html2canvas(comments[i], &#123; &#x2F;&#x2F; 允许跨域（图片相关） allowTaint: true, &#x2F;&#x2F; 允许跨域（图片相关） useCORS: true, &#x2F;&#x2F; 截图的背景颜色 backgroundColor: &#39;transparent&#39;, &#x2F;&#x2F; 图片x轴偏移量 x: rect.x, &#x2F;&#x2F; 图片宽度 width: width, &#x2F;&#x2F; 图片高度 height: height, &#x2F;&#x2F; y轴滚动 scrollY: -scrollTop, &#x2F;&#x2F; 放大2倍 scale: 2, &#x2F;&#x2F; 关闭日志 logging: false, &#125;).then(canvas &#x3D;&gt; &#123; &#x2F;&#x2F; JSZip模块中的base64.js会对文件格式进行检测，所以我们需要将之前canvas.toDataURL()得到的data去除前缀imgData &#x3D; imgData.split(&quot;data:image&#x2F;png;base64,&quot;)[1];。 let imgData &#x3D; canvas.toDataURL().split(&#39;data:image&#x2F;png;base64,&#39;)[1]; &#x2F;&#x2F;这个images文件目录中创建一个base64数据为imgData的图像，图像名是上面获取的imaName img.file(imgName + &#39;.png&#39;, imgData, &#123; base64: true &#125;); that.done1 +&#x3D; 1; console.log(&quot;添加图片&quot; + i); &#125;); &#125;; &#125;, 1000);&#125;);","categories":[{"name":"开发","slug":"开发","permalink":"http://circlehotarux.me/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://circlehotarux.me/tags/Bilibili/"},{"name":"html2canvas","slug":"html2canvas","permalink":"http://circlehotarux.me/tags/html2canvas/"},{"name":"Front-end","slug":"Front-end","permalink":"http://circlehotarux.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://circlehotarux.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"Vue","slug":"Vue","permalink":"http://circlehotarux.me/tags/Vue/"},{"name":"跨域","slug":"跨域","permalink":"http://circlehotarux.me/tags/%E8%B7%A8%E5%9F%9F/"}]},{"title":"Bilibili评论转图片神器开发日志-解决跨域问题","slug":"Bilibili评论转图片神器开发日志-解决跨域问题","date":"2020-07-11T06:23:56.000Z","updated":"2020-07-11T13:08:23.645Z","comments":true,"path":"2020/07/11/Bilibili评论转图片神器开发日志-解决跨域问题/","link":"","permalink":"http://circlehotarux.me/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 本来打算是做一个纯前端，通过B站API（热心网友整理的API）获取数据即可。但是实际开发过程中遇到了跨域问题。 关于跨域问题的解决，网上有许多解决方案，比如jsonp。 原本以为使用jsonp后，就可以开开心心的从B站获取数据了。但悲剧又来了，B站API返回的是json格式，jsonp要求返回jsonp格式。 上图显示，我虽然获得了数据，但是浏览器说这个是json数据，不是jsonp数据，所以我把它拦截下来了。晕，就是说我收到了这个数据，但是浏览器把它拦在了门口不进来。 网上找到大多数解决方案是不用jsonp，而是cross。但是应用场景是自家api，修改服务端就可以了。B站又不是我家开的，改不了它的服务端呀。于是选择一个折中的办法——自己写一个后端API，用API去取数据。 之前学过一点node.js，这次就使用node.js来处理。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&#x2F;&#x2F; express, httpconst express &#x3D; require(&#39;express&#39;);const app &#x3D; express();&#x2F;&#x2F; requestconst request &#x3D; require(&#39;request&#39;);&#x2F;&#x2F; body parserconst bodyParser &#x3D; require(&#39;body-parser&#39;);app.use(bodyParser.urlencoded(&#123; extended: false &#125;));&#x2F;&#x2F; portconst PORT &#x3D; 8089;app.listen(PORT);&#x2F;&#x2F; cross domain configapp.all(&#39;&#x2F;api&#x2F;v1&#39;, (req, res, next) &#x3D;&gt; &#123; res.header(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;); res.header(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With&#39;); next();&#125;);app.get(&#39;&#x2F;api&#x2F;v1&#x2F;bv2av&#39;, (req, res, next) &#x3D;&gt; &#123; &#x2F;&#x2F; 白名單 if (!req.get(&#39;Origin&#39;)) return; res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;); res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;); res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;); request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;web-interface&#x2F;view?bvid&#x3D;&#39; + req.query.bvid, function (error, response, body) &#123; if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123; res.send(body) &#125; &#125;);&#125;);app.get(&#39;&#x2F;api&#x2F;v1&#x2F;comments&#39;, (req, res, next) &#x3D;&gt; &#123; &#x2F;&#x2F; 白名單 if (!req.get(&#39;Origin&#39;)) return; res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;); res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;); res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;); request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;reply?type&#x3D;1&amp;oid&#x3D;&#39; + req.query.oid + &#39;&amp;sort&#x3D;&#39; + req.query.sort + &#39;&amp;pn&#x3D;&#39; + req.query.pn + &#39;&amp;ps&#x3D;&#39; + req.query.ps + &#39;&amp;nohot&#x3D;1&#39;, function (error, response, body) &#123; if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123; res.send(body) &#125; &#125;);&#125;); 这样，前端只需要向我写的node.js端发起请求即可获取数据。 另外还有一个小问题，用户头像的图片无法显示出来，但是手动访问链接后再刷新又可以显示了。如下图： google一番后发现是因为服务器设置了图片防盗链的原因，解决方法很简单，在head加上一行代码即可： 1&lt;meta name&#x3D;&quot;referrer&quot; content&#x3D;&quot;no-referrer&quot;&#x2F;&gt; 参考： 接氣象局api、跨網域ajax資料 秒建一个 json 转 jsonp 的中间层服务器 JSONP跨域详解 对B站各种数据进行抓包分析 bilibili-API-collect","categories":[{"name":"开发","slug":"开发","permalink":"http://circlehotarux.me/categories/%E5%BC%80%E5%8F%91/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://circlehotarux.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://circlehotarux.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://circlehotarux.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"跨域","slug":"跨域","permalink":"http://circlehotarux.me/tags/%E8%B7%A8%E5%9F%9F/"},{"name":"Nodejs","slug":"Nodejs","permalink":"http://circlehotarux.me/tags/Nodejs/"},{"name":"防盗链","slug":"防盗链","permalink":"http://circlehotarux.me/tags/%E9%98%B2%E7%9B%97%E9%93%BE/"}]},{"title":"观看《隐姓亿万富翁》的收获","slug":"隐姓亿万富翁","date":"2020-06-19T16:12:09.000Z","updated":"2020-06-21T01:32:00.859Z","comments":true,"path":"2020/06/20/隐姓亿万富翁/","link":"","permalink":"http://circlehotarux.me/2020/06/20/%E9%9A%90%E5%A7%93%E4%BA%BF%E4%B8%87%E5%AF%8C%E7%BF%81/","excerpt":"","text":"最近在看一个节目《隐姓亿万富翁》，讲述的是亿万富翁Glenn Stearns只带着一百美元、一辆皮卡挑战在一个陌生城市90天内白手起家的故事。 Glenn的创业过程大概是先解决温饱问题，招募团队，获取启动资金，寻找发展方向，火力全开。不过这些并不是线性的，很多时候是并行发生的。 Glenn这次创业其实并不是真正的“白手起家”，他作为亿万富翁，本身的经验就是他最大的财富了，所以他能看到别人看不到的点。但是，一个人的力量是有限的，一个优秀的团队是必要的。节目也是主要围绕他的团队来讲述。从他的团队中我们可以看到需要值得注意的地方。 首先是团队中的每个人都得为彼此负责。在肋排节中主厨克里斯汀多次让货物供不应求，同时筹备期间她只会打包票，不跟别人说如何执行，只是让别人信任她。出错了不去寻找自身的错误，只会找借口把责任推给别人的人。很多次出现问题了，她没有想办法去解决，只是去抱怨。在节目中也可以看到，她作为主厨，但跟其他人的联系并不是特别深厚，更多的是在单打独斗。这样的人，尽管她付出也很多，但终究还是难以担负重任，最后也是和Glenn不欢而散。 另外，如果你加入了这个团队，你就得主动为这个团队做贡献。Glenn的团队元老最后基本上都获得了2万美元的回报，除了克里斯是5千美元。克里斯这个人怎么说呢？从外表看上去，他是个普通的职员，看不到激情。事实上，他作为团队元老加入后，做的事情并不多，很多时候都看不见他的人影。他的思维应该还停留在职员思维上，等着领导安排事情，做完就算了。 赚钱的本质是中间商赚差价。创业过程中，Glenn为了获取创业资本和满足温饱，多次倒卖二手车、房地产。总结一句话就是低价买入，高价卖出。要完成这个过程，就要学会掌握信息差和加工。举个例子，公司雇佣你并支付你薪水是因为你的工作只值这么多吗？肯定不是的，一定是因为你做出来的成果比支付你的薪水还要高才能继续维持这种雇佣关系。公司把你的工作成果卖出去，从中获利。那为什么大多数人不选择自己给自己打工，把中间商的环节也赚了。因为大多数人都没有那个信息差。比如说程序员，大多数程序员的交际圈比较窄，同时也不擅长与他人打交道。你让他去谈生意与让老板去谈生意结果相差很大的。另一个例子，为什么那么多字幕组或者在国外生活的留学生回国做自媒体？因为他们做给外国人看没价值啊。但是做给国人看就不一样了。大多数国人听不懂外语，对国外生活不了解。前期吸一波粉之后就可以开始割韭菜了（当然也有不少用爱发电的字幕组）。 专业的事让专业的人去做。Glenn在稳定生计后立马开始组建自己的团队，寻找专业的人才。比如倒卖二手房的时候找来当地比较出名的道恩来负责翻新，期间房子发霉了还花了一笔大钱请专业公司来清理。这跟前面的中间商赚差价差不多。你不可能把全部的钱都赚了，首先你做不到，其次成本太高。比如房子发霉了自己来清理，你要去学习如何清理，你还要购买工具，甚至你最后可能清理得不干净，卖房的时候被发现直接白干了。学海无涯而生有涯，不要想着事事都能兼顾得来。 最后说说Glenn吧，他在90天挑战中始终保持着激情和主动。面对挫折，没有沉溺在痛苦中，而是很快就想办法去解决它。作为团队的领导者，他要为团队的成员安排合适的工作，并不断推动他们往前。最重要的还是行动！行动起来！用尽全力去完成！ 这里是Glenn所创建的UNDERDOG BBQ官网以及他们的故事。","categories":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"创业","slug":"创业","permalink":"http://circlehotarux.me/tags/%E5%88%9B%E4%B8%9A/"},{"name":"团队","slug":"团队","permalink":"http://circlehotarux.me/tags/%E5%9B%A2%E9%98%9F/"},{"name":"励志","slug":"励志","permalink":"http://circlehotarux.me/tags/%E5%8A%B1%E5%BF%97/"}]},{"title":"超学习-面向项目学习以及学会寻找学习资源","slug":"超学习-面向项目学习以及学会寻找学习资源","date":"2020-05-22T14:41:02.000Z","updated":"2020-05-22T15:10:59.106Z","comments":true,"path":"2020/05/22/超学习-面向项目学习以及学会寻找学习资源/","link":"","permalink":"http://circlehotarux.me/2020/05/22/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%BC%9A%E5%AF%BB%E6%89%BE%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/","excerpt":"","text":"面向项目学习最近主要在给软件开发综合训练的课设写前端页面。这是一个小组项目，后端有两位大佬负责，前端由我和另一个同学负责。不过我和另一个同学对前端都不是很熟悉，第一次接触原项目的开发者使用的freemarker模板引擎。虽然不熟，但也只能硬上了。也正因为有压力在，所以很快就上手了freemarker。难点是从后端拿数据，后端同学和原作者返回数据的格式和方式不同。如果直接用后端同学的接口，那么前端很多页面都不能复用原作者的，工作量有点大。但是后端同学又不愿意改（大佬就是大佬~）。只能自己改后端了。疯狂面向搜索编程总算搞定了。也因此对后端有了进一步的认识。 这几天的学习成果，如果没有项目驱动的话，我估计要学很久，而且很有可能是从0开始学习。但是项目开发不会给你那么多时间，你只能挑着学、跳着学以便尽快上线。这种学习方式可以让你了解到真实项目开发中所需的技术，很多时候，只要你会CRUD就能搞定一个项目了。 学会寻找学习资源今天做计网实验数据包分析居然做了一天！！！比较浪费时间的地方在于验证UDP检验和。这部分知识我还没学到，但是老师有给实验参考，我就照着参考来做了。坑爹的是，老师给的参考前后数据不一致，比如前面IP数据报给的源地址、目的地址与计算检验和时用到的不一样。还有数据部分看截图不止7个字节，但是验证的时候却只计算了7个字节。因为一开始不懂，我还纠结了很久，最后决定还是google一番，果然，被参考坑了。 其实被坑的次数也不少了。比如之前学高数，教材一开始还能看得懂，后面开始云里雾里。搞得我都开始怀疑人生了。后来去B站找了个视频，忘记哪个频道了，但是别人讲的方式一下子让我明了，知道了为什么会是这样。这也让我开始养成学习新知识之前，先去寻找哪些资源比较好。讲真，国内大部分教材都很生硬，感觉就是为了让人学不下去的XD。尤其是计算机专业，很多时候你看中文教材看不懂的时候，看看英文教材就知道是怎么回事了。","categories":[{"name":"超学习","slug":"超学习","permalink":"http://circlehotarux.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"超学习","slug":"超学习","permalink":"http://circlehotarux.me/tags/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}]},{"title":"超学习-学会抽象","slug":"超学习-学会抽象","date":"2020-05-15T02:25:57.000Z","updated":"2020-05-15T02:55:21.969Z","comments":true,"path":"2020/05/15/超学习-学会抽象/","link":"","permalink":"http://circlehotarux.me/2020/05/15/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%BC%9A%E6%8A%BD%E8%B1%A1/","excerpt":"","text":"大二有段时间在看Crash Course的计算机科学速成课，这系列的内容都很有趣，易于消化。印象深刻的一个细节是主持人Carrie Anne经常会让我们进入一个抽象的层面去理解新概念。 什么是抽象？ 抽象这个词听起来就很抽象。个人看法是把某个功能封装起来，不要考虑它内部细节，而是着重于外部展示出来的效果。打个比方就是家里每天都在使用的电饭煲，你了解它工作的时候内部是怎么运行的吗？我相信大部分人肯定都不了解，但是我们都会使用它去做出美味的饭。 学习也是一样的道理，大部分人的学习方法是从第一章开始看，一路看下去的线性的学习方法。这种方法很容易让人觉得枯燥，看着看着就看不下去了。而且很多时候我们都会遇到这么一种情况，一开始遇到某个概念难以理解，只能带着疑问往后学习。但是学到后面再回过头来看的时候就会发现原来它是那么简单。 所以在学习上我比较习惯“不求甚解”，遇到较难理解的概念，如果没必要深究下去，我会把它进行抽象。等到下次要用到这个概念的时候我只需要考虑它对外的效果即可。 总结，很多知识并不需要我们深入学习，会用就行了。用庄子的说就是“吾生也有涯，而知也无涯。以有涯随无涯，殆已！” By the way，开头提到的计算机科学速成课很不错，值得一看。","categories":[{"name":"超学习","slug":"超学习","permalink":"http://circlehotarux.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"超学习","slug":"超学习","permalink":"http://circlehotarux.me/tags/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}]},{"title":"惠院学子如何申请学生邮箱","slug":"惠院学子如何申请学生邮箱","date":"2020-05-14T10:37:52.000Z","updated":"2020-05-14T12:09:32.833Z","comments":true,"path":"2020/05/14/惠院学子如何申请学生邮箱/","link":"","permalink":"http://circlehotarux.me/2020/05/14/%E6%83%A0%E9%99%A2%E5%AD%A6%E5%AD%90%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1/","excerpt":"","text":"利用学生身份我们可以享受到许多学生优惠权益，这里面有很多实用资源，详情可以看这个链接 要申请学生优惠权益最常见的途径就是学生邮箱了，但是很多人不知道我们惠院的学生邮箱要怎么申请，所以接下来我将介绍如何申请惠院的学生邮箱。 首先登陆惠州学院网上办事大厅，然后在上方搜索框搜索惠州学院学生邮箱申请： 点击惠州学院学生邮箱申请即可进入邮箱申请页面，按照要求填写即可： 邮箱申请似乎是电脑审核的，一般过了24小时后就可以打开惠院学生邮箱网址，登陆你的账号（应该还要激活，这个我忘了要不要）使用啦~ 好好珍惜学生时光呀~","categories":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"惠州学院","slug":"惠州学院","permalink":"http://circlehotarux.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"学生","slug":"学生","permalink":"http://circlehotarux.me/tags/%E5%AD%A6%E7%94%9F/"}]},{"title":"关于HZUCS_Course","slug":"关于HZUCS-Course","date":"2020-05-14T02:43:52.000Z","updated":"2020-05-14T02:49:36.818Z","comments":true,"path":"2020/05/14/关于HZUCS-Course/","link":"","permalink":"http://circlehotarux.me/2020/05/14/%E5%85%B3%E4%BA%8EHZUCS-Course/","excerpt":"","text":"github上新开了一个仓库，主要用来分享一些课程资料、作业等学生原创内容。 缘由：一、前段时间电脑坏了，虽然之前有备份部分资料到移动硬盘，但很不幸移动硬盘落在学校了。所以这学期的一些资料都丢失了，幸运地是也有部分资料被我上传到github上了（数据备份的重要性T_T）。二、个人觉得，学习这件事情，虽然强调独立思考，但有人指点一下或许会走得更快更远。另，大部分人遇到问题就去百度，搜出一大堆乱七八糟的答案。这是不对的，有能力请尽量使用google。 所以在github上开了这个仓库，既可以与大家互相交流学习，也可以为师弟师妹们指点迷津。最重要的是开源精神，参与一个项目并能影响他人的成就感是很棒的！","categories":[],"tags":[{"name":"惠州学院","slug":"惠州学院","permalink":"http://circlehotarux.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"CS","slug":"CS","permalink":"http://circlehotarux.me/tags/CS/"},{"name":"github","slug":"github","permalink":"http://circlehotarux.me/tags/github/"},{"name":"开源","slug":"开源","permalink":"http://circlehotarux.me/tags/%E5%BC%80%E6%BA%90/"}]},{"title":"回归Hexo","slug":"回归Hexo","date":"2020-05-11T13:32:54.000Z","updated":"2020-05-11T13:40:58.456Z","comments":true,"path":"2020/05/11/回归Hexo/","link":"","permalink":"http://circlehotarux.me/2020/05/11/%E5%9B%9E%E5%BD%92Hexo/","excerpt":"","text":"技术是为人服务的为什么说回归Hexo？其实早在大二就已经搭建过网站，一开始用的是WordPress，后来嫌弃太臃肿，改投Hexo的怀抱。期间写了一些小文章，也折腾了几次把Hexo部署到个人服务器上。接着学习了Vue，了解到Vuepress，又开始萌生转换到Vuepress的想法。但是自己对Vuepress并不是特别熟悉，也没有太多时间去学习，折腾了一半就不了了之了。 现在回过头来发现初衷仅仅是为了有个地方给我写写文章，文章倒没写多少，技术却学得乱七八糟。何必折腾来折腾去呢？对于Hexo，使用的时间是最长的，也是最熟悉的。所以现在要回归Hexo，先把写作坚持下来再说，就这样。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/tags/%E7%94%9F%E6%B4%BB/"}]}],"categories":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/categories/%E7%94%9F%E6%B4%BB/"},{"name":"编程","slug":"编程","permalink":"http://circlehotarux.me/categories/%E7%BC%96%E7%A8%8B/"},{"name":"开发","slug":"开发","permalink":"http://circlehotarux.me/categories/%E5%BC%80%E5%8F%91/"},{"name":"超学习","slug":"超学习","permalink":"http://circlehotarux.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://circlehotarux.me/tags/%E7%94%9F%E6%B4%BB/"},{"name":"惯性思维","slug":"惯性思维","permalink":"http://circlehotarux.me/tags/%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4/"},{"name":"王者荣耀","slug":"王者荣耀","permalink":"http://circlehotarux.me/tags/%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/"},{"name":"抖音","slug":"抖音","permalink":"http://circlehotarux.me/tags/%E6%8A%96%E9%9F%B3/"},{"name":"社交","slug":"社交","permalink":"http://circlehotarux.me/tags/%E7%A4%BE%E4%BA%A4/"},{"name":"CSS","slug":"CSS","permalink":"http://circlehotarux.me/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"http://circlehotarux.me/tags/HTML/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://circlehotarux.me/tags/JavaScript/"},{"name":"ES6","slug":"ES6","permalink":"http://circlehotarux.me/tags/ES6/"},{"name":"TypeScript","slug":"TypeScript","permalink":"http://circlehotarux.me/tags/TypeScript/"},{"name":"Babel","slug":"Babel","permalink":"http://circlehotarux.me/tags/Babel/"},{"name":"碎碎念","slug":"碎碎念","permalink":"http://circlehotarux.me/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"Bilibili","slug":"Bilibili","permalink":"http://circlehotarux.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://circlehotarux.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://circlehotarux.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"JSZip","slug":"JSZip","permalink":"http://circlehotarux.me/tags/JSZip/"},{"name":"html2canvas","slug":"html2canvas","permalink":"http://circlehotarux.me/tags/html2canvas/"},{"name":"Vue","slug":"Vue","permalink":"http://circlehotarux.me/tags/Vue/"},{"name":"跨域","slug":"跨域","permalink":"http://circlehotarux.me/tags/%E8%B7%A8%E5%9F%9F/"},{"name":"Nodejs","slug":"Nodejs","permalink":"http://circlehotarux.me/tags/Nodejs/"},{"name":"防盗链","slug":"防盗链","permalink":"http://circlehotarux.me/tags/%E9%98%B2%E7%9B%97%E9%93%BE/"},{"name":"创业","slug":"创业","permalink":"http://circlehotarux.me/tags/%E5%88%9B%E4%B8%9A/"},{"name":"团队","slug":"团队","permalink":"http://circlehotarux.me/tags/%E5%9B%A2%E9%98%9F/"},{"name":"励志","slug":"励志","permalink":"http://circlehotarux.me/tags/%E5%8A%B1%E5%BF%97/"},{"name":"超学习","slug":"超学习","permalink":"http://circlehotarux.me/tags/%E8%B6%85%E5%AD%A6%E4%B9%A0/"},{"name":"惠州学院","slug":"惠州学院","permalink":"http://circlehotarux.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"学生","slug":"学生","permalink":"http://circlehotarux.me/tags/%E5%AD%A6%E7%94%9F/"},{"name":"CS","slug":"CS","permalink":"http://circlehotarux.me/tags/CS/"},{"name":"github","slug":"github","permalink":"http://circlehotarux.me/tags/github/"},{"name":"开源","slug":"开源","permalink":"http://circlehotarux.me/tags/%E5%BC%80%E6%BA%90/"}]}