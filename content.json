{"meta":{"title":"circlehotarux's blog","subtitle":"有花堪折直須折 莫待無花空折枝","description":"circlehotarux的個人博客","author":"circlehotarux","url":"http://mightyherox.me","root":"/"},"pages":[{"title":"","date":"2020-08-23T03:36:11.874Z","updated":"2020-08-23T03:36:11.874Z","comments":true,"path":"baidu_verify_2ZKRTnPntf.html","permalink":"http://mightyherox.me/baidu_verify_2ZKRTnPntf.html","excerpt":"","text":"2ZKRTnPntf"},{"title":"About","date":"2020-07-18T01:10:45.000Z","updated":"2020-07-18T01:10:45.000Z","comments":true,"path":"about/index.html","permalink":"http://mightyherox.me/about/index.html","excerpt":"","text":"Hey there 👋, I’m circlehotarux!Hi, I’m circlehotarux, a Front-end Web Developer from China. Currently, I’m pursuing my bachelor’s degree majoring in software engineering from Huizhou University. Besides programming, I also enjoy photograph. 💬 Talking about Personal Stuffs: 👨‍💻 I’m currently looking for a front-end development job; 💬 Ask me about anything, I am happy to help; 📫 How to reach me: &#x6d;&#x69;&#x67;&#x68;&#x74;&#121;&#x68;&#101;&#114;&#x6f;&#x78;&#64;&#103;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;;"}],"posts":[{"title":"npm login 超时怎么办？","slug":"npm-login-超时怎么办？","date":"2021-02-10T12:19:50.000Z","updated":"2021-02-10T12:19:50.000Z","comments":true,"path":"npm-login-超时怎么办？/","link":"","permalink":"http://mightyherox.me/npm-login-%E8%B6%85%E6%97%B6%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/","excerpt":"","text":"前言在发布 npm 包的时候我们需要在本地项目进行 npm login 操作，但是很容易遇到超时的情况。 原因国内使用 npm 应该都会设置淘宝镜像，但是淘宝镜像只是提供下载，当我们要 npm login、npm publish 时需要切换会官方源，即： 1npm config set registry https:&#x2F;&#x2F;registry.npmjs.org","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Nodejs","slug":"Nodejs","permalink":"http://mightyherox.me/tags/Nodejs/"},{"name":"npm","slug":"npm","permalink":"http://mightyherox.me/tags/npm/"},{"name":"proxy","slug":"proxy","permalink":"http://mightyherox.me/tags/proxy/"}]},{"title":"Node CLI 开发：解决'syntax error near unexpected token `('错误","slug":"Node-CLI-开发：解决-syntax-error-near-unexpected-token-错误","date":"2021-02-10T11:35:48.000Z","updated":"2021-02-10T11:35:48.000Z","comments":true,"path":"Node-CLI-开发：解决-syntax-error-near-unexpected-token-错误/","link":"","permalink":"http://mightyherox.me/Node-CLI-%E5%BC%80%E5%8F%91%EF%BC%9A%E8%A7%A3%E5%86%B3-syntax-error-near-unexpected-token-%E9%94%99%E8%AF%AF/","excerpt":"","text":"前言最近在开发一个 Node CLI 工具 bilibili-video-analysis，希望可以直接使用 bili-video -u url-of-bilibili-video 开启服务。但是执行结果却报错： 1syntax error near unexpected token &#96;( 原因出错原因是因为我的开发环境是 Windows，但 CLI 工具的执行环境是 Unix。而这两者的回车换行符是不兼容的。 Unix系统里，每行结尾只有”&lt;换行&gt;”，即”\\n”；Windows系统里面，每行结尾是”&lt;回车&gt;&lt;换行&gt;”，即”\\r\\n”；Mac系统里，每行结尾是”&lt;回车&gt;”。一个直接后果是，Unix/Mac系统下的文件在Windows里打开的话，所有文字会变成一行；而Windows里的文件在Unix/Mac下打开的话，在每行的结尾可能会多出一个^M符号。 ——《回车和换行》 阮一峰 解决把文件中的回车换行符换成 Unix 下的换行符即可。 以 vscode 为例： 在 settings 中搜索 file:Eol，将默认的 auto 选项改为 \\n，然后重新保存你的文件即可。","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://mightyherox.me/tags/Linux/"},{"name":"Nodejs","slug":"Nodejs","permalink":"http://mightyherox.me/tags/Nodejs/"},{"name":"CLI","slug":"CLI","permalink":"http://mightyherox.me/tags/CLI/"},{"name":"Winodws","slug":"Winodws","permalink":"http://mightyherox.me/tags/Winodws/"},{"name":"Bug","slug":"Bug","permalink":"http://mightyherox.me/tags/Bug/"}]},{"title":"《人生七年》观后感","slug":"《人生七年》观后感","date":"2021-01-27T07:21:17.000Z","updated":"2021-01-27T07:21:17.000Z","comments":true,"path":"《人生七年》观后感/","link":"","permalink":"http://mightyherox.me/%E3%80%8A%E4%BA%BA%E7%94%9F%E4%B8%83%E5%B9%B4%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/","excerpt":"","text":"人的一生是很短暂的 花了一周时间从7岁系列开始看，短短几天就看完了他人的大半生。大部分人都没有跨越自己原来的阶级，但是大家过得还算不错。 先对14位参与者做个总结吧： John：应该是本片中世俗意义上最成功的一位了吧。他对自己的人生规划一直很明确，并且有很认真地去达成（年幼丧父，所以他的生活并不是心想就能事成，还是要努力的）。他一直秉持着“能力越大，责任越大”的态度，后半生一直在致力于慈善事业，是个很优秀的贵族精英。 Tony：乐天派，主业是开出租车。看他小时候的表现还以为长大后会是小混混，但是并没有，而且很爱他的父母。虽然一直都是工薪阶级，但是敢想敢做，小日子还是挺滋润的。 Nicolas：14个小孩中唯一一个跨越阶级的人。农村小伙，靠着知识改变命运，读了牛津大学，移民到美国生活。小时候比较害羞，上了大学后整个人变得活跃，话也多了起来。 Andrew：完美诠释了什么叫“看起来很聪明、善良又好命”。生活安稳富裕，性格不骄不躁，家庭幸福美满。 Bruce：人称“小天使”。性格比较腼腆，为人很善良，家庭工作都很不错。 Neil：小时候很可爱，满脸笑容。长大后不知何故逃离都市，在乡村过着流浪汉般的生活。一直在思考生活、人生的意义？基督教的信仰给了他很大的帮助。到了老年的时候开始在地方担任议员，找到了自己想做的事情，工资也基本可以维持生活。 Paul：小时候父母离异，在孤儿院生活。后面跟随父亲去了澳大利亚生活。不太自信，幸运的是妻子跟他互补，给予了他许多帮助。虽然是工薪阶级，但是生活也很幸福美满。 Simon：独生子，跟 Paul 在同一间孤儿院待过，年轻的时候也是不太自信。跟第二任妻子相处不错，照顾过许多寄养儿童，为人还不错。 Jackie：比较真性情的人吧，遭遇了几次不幸，不过还是积极面对生活。 Lynn：平凡的一生，家庭生活幸福。 Sue：平民三姐妹中混得比较好的，家庭生活幸福，工作也不错，业余生活也很丰富。 Suzie：小时候是富家女，年轻的时候有过一段叛逆期，结婚后成了贤妻良母，家庭幸福美满。 Peter：一直待在原来的中产阶级，组了乐队，当着公务员，生活还是不错的。 Charles：21岁后就不再接受采访了，不做评论。 看完这系列纪录片最大的感受就是人生各自精彩。每个人都有自己的追求，大家都有自己的快乐。虽然阶级难以跨越，但是用尽全力去追求自己想做的事情就好啦。最怕蹉跎一生。","categories":[{"name":"观影","slug":"观影","permalink":"http://mightyherox.me/categories/%E8%A7%82%E5%BD%B1/"}],"tags":[{"name":"人生七年","slug":"人生七年","permalink":"http://mightyherox.me/tags/%E4%BA%BA%E7%94%9F%E4%B8%83%E5%B9%B4/"},{"name":"7 up","slug":"7-up","permalink":"http://mightyherox.me/tags/7-up/"},{"name":"纪录片","slug":"纪录片","permalink":"http://mightyherox.me/tags/%E7%BA%AA%E5%BD%95%E7%89%87/"}]},{"title":"Web API：event.preventdefault() 有什么用？","slug":"Web-API-event-preventdefault-有什么用","date":"2020-12-21T15:45:12.000Z","updated":"2020-12-21T15:45:12.000Z","comments":true,"path":"Web-API-event-preventdefault-有什么用/","link":"","permalink":"http://mightyherox.me/Web-API-event-preventdefault-%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8/","excerpt":"","text":"今天阅读某个项目源码时候遇到了 event.preventdefault() 这行代码。之前有遇到过几次，也去 MDN 查看了它的介绍，但还是不太理解它的实际应用场景。直到今天看到这部分源码才恍然大悟。 Event 接口的 preventDefault() 方法，告诉user agent：如果此事件没有被显式处理，它默认的动作也不应该照常执行。此事件还是继续传播，除非碰到事件侦听器调用stopPropagation() 或stopImmediatePropagation()，才停止传播。 ——MDN 从 MDN 的解释我们可以了解到 event.preventdefault() 的作用是停止事件的默认动作，然后呢？它的实际应用场景是什么？ 一般情况下，我们会使用 &lt;a&gt; 标签时候跳转到新的网页。 HTML 1&lt;a id=&quot;clickMe&quot; href=&quot;https://blog.mightyherox.me/&quot; target=&quot;_blank&quot;&gt;跳转到多度橙的博客&lt;/a&gt; 但有时候我们会利用 &lt;a&gt; 标签当作按钮，它本身就拥有链接的功能，但我们会为它添加类似 onclick 事件。只要在 &lt;a&gt; 标签触发的事件中加入 event.preventdefault() ，就不会执行它的默认动作，也就是不会再执行「链接到某个网址」动作。 HTML 1&lt;a id=&quot;clickMe&quot; href=&quot;https://blog.mightyherox.me/&quot; target=&quot;_blank&quot;&gt;about Me&lt;/a&gt; JavaScript 1234document.getElementById(&#x27;clickMe&#x27;).onclick = (event) =&gt; &#123; alert(&quot;Hey there 👋, I&#x27;m circlehotarux!&quot;); event.preventDefault();&#125; 上述案例中，HTML 文件除了修改显示的文本外，其他的部分都没有修改。然后我们在 JavaScript 中加入了 event.preventDefault() 以及一个弹窗事件。再次点击 &lt;a&gt; 标签，这时就只有弹窗事件发生，而并没有发生跳转事件。因为 event.preventDefault() 把 &lt;a&gt; 标签默认的功能给取消了！ 参考文章 https://ithelp.ithome.com.tw/articles/10198999","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://mightyherox.me/tags/JavaScript/"},{"name":"Web API","slug":"Web-API","permalink":"http://mightyherox.me/tags/Web-API/"}]},{"title":"字面量是什么？","slug":"字面量是什么？","date":"2020-12-17T08:29:10.000Z","updated":"2020-12-17T08:29:10.000Z","comments":true,"path":"字面量是什么？/","link":"","permalink":"http://mightyherox.me/%E5%AD%97%E9%9D%A2%E9%87%8F%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/","excerpt":"","text":"在阅读技术文档的时候偶尔会遇到字面量（Literals），咋一看，好家伙，这是什么高大上的名词？于是赶紧去 google 一番，但是出来的结果都语焉不详。 比如 MDN 的中文翻译是： 译注：字面量是由语法表达式定义的常量；或，通过由一定字词组成的语词表达式定义的常量） 在JavaScript中，你可以使用各种字面量。这些字面量是脚本中按字面意思给出的固定的值，而不是变量。（译注：字面量是常量，其值是固定的，而且在程序脚本运行中不可更改，比如false，3.1415，thisIsStringOfHelloworld **，invokedFunction: myFunction(“myArgument”)。 好像说得有点不太接地气。让我们看看英文原文是如何表达的： Literals represent values in JavaScript. These are fixed values—not variables—that you literally provide in your script. 这……咋原文这么简短，中文翻译绕来绕去的。让我来翻译翻译原文： 在 JavaScript 中字面量表示 值（values）。它们是你在脚本中字面上写出来的固定的值，而不是变量。 可能你看了翻译还是不太理解，没关系，我们结合程序继续讲解： 1234567var a = 100var b = &quot;JavaScript&quot;var c = [5,6,7]var d = &#123; name: &quot;小明&quot;, age: 18&#125; 上面例子中等号的左边都是变量（a、b、c、d），而右边的都是字面量（100、JavaScript……），也就是说字面量是你在程序源码中直接写出来的值。意即字面上的值。 总结多看英文原文。","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://mightyherox.me/tags/JavaScript/"},{"name":"Literals","slug":"Literals","permalink":"http://mightyherox.me/tags/Literals/"},{"name":"字面量","slug":"字面量","permalink":"http://mightyherox.me/tags/%E5%AD%97%E9%9D%A2%E9%87%8F/"}]},{"title":"网络时代平凡又渺小的我们","slug":"网络时代平凡又渺小的我们","date":"2020-12-13T13:23:02.000Z","updated":"2020-12-13T13:23:02.000Z","comments":true,"path":"网络时代平凡又渺小的我们/","link":"","permalink":"http://mightyherox.me/%E7%BD%91%E7%BB%9C%E6%97%B6%E4%BB%A3%E5%B9%B3%E5%87%A1%E5%8F%88%E6%B8%BA%E5%B0%8F%E7%9A%84%E6%88%91%E4%BB%AC/","excerpt":"","text":"自从上了大学后，我的生活发生了许多变化，一个明显的变化是，我的内心很痛苦。 同辈压力（peer pressure）是指同辈人互相比较中产生的心理压力，一个同辈人团体对个人施加影响，会促使个人改变其态度、价值观或行为使其遵守团体准则。 高中时代虽然面临着高考的压力，但整体还是比较快乐的。值得骄傲的一件事是创建了自己的社团。那时候做事天不怕地不怕，随时随地都有新的想法。 但上了大学后，特别是开始玩社交平台后（你敢信我高考后的那个暑假才开始使用微信？），发现了许多优秀的人，相比之下我真的太菜了。看他们的动态多了之后，觉得成功好像是很容易的事情，如果我没做到的话，一定是因为我太菜了。可是我却忽略了他们成功的背后，除了付出传统意义上的努力，还有能够支持他们做成这件事的资金、人脉，以及更重要的是优渥的环境带来的思维方式与自信。 二三本学生就算付出比名校学生多的努力也很难追上他们，因为名校本身就可以给他们很多资源，也奠定了他们的自信心来源。同时能考上名校的，大多原生家庭就已经很不错，家庭注重教育，有可以大胆尝试的资本，从小的眼界就跟常人不一样。 于是最近我开始思考，我真的那么菜吗？ 我会玩github，在我们系玩github的人几乎不到90%； 我会玩摄影，每次发朋友圈都能得到点赞和羡慕，经常有人找我约拍； 我的英文阅读水平还可以； 我在高中创办了一个社团； 我的专业成绩在班里也算前茅； 我在即刻的粉丝数也不少； 我有阅读和写作的习惯； 我有爱我的家人； …… 网络时代，大家可以轻轻松松地分享自己的生活。但是我们要知道，大部分分享生活的人都是玩得比较好的那些人。现实生活中的大多数人都是不怎么说话的观众。所以，不要否定你自己，你也很优秀！ 标题灵感： 韩剧：“你在所有人眼中都闪闪发亮唯独看中了我” 日剧：“在所有人眼中都平凡又渺小的我们，却在彼此的眼中闪闪发亮”","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"社交","slug":"社交","permalink":"http://mightyherox.me/tags/%E7%A4%BE%E4%BA%A4/"},{"name":"随想","slug":"随想","permalink":"http://mightyherox.me/tags/%E9%9A%8F%E6%83%B3/"},{"name":"同辈压力","slug":"同辈压力","permalink":"http://mightyherox.me/tags/%E5%90%8C%E8%BE%88%E5%8E%8B%E5%8A%9B/"}]},{"title":"如何下载英文文献","slug":"如何下载英文文献","date":"2020-12-09T15:22:43.000Z","updated":"2020-12-09T15:22:43.000Z","comments":true,"path":"如何下载英文文献/","link":"","permalink":"http://mightyherox.me/%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE/","excerpt":"","text":"昨晚一位英文系的朋友找我帮忙下载某篇英文文献，因为他使用百度找不到，想让我通过谷歌找找。那篇英文文献确实难找，我只在JSTOR这个网站上找到（也可能是我搜索的姿势不对，毕竟我也不懂如何搜索英文文献）。虽然找到了，但是下载的话需要登陆注册才行，前提是你的学校已购买JSTOR。em……看来是没有希望了。 JSTOR是一个收集学术期刊的在线系统。它提供了对发表在数百本知名学术期刊上的文章的电子版全文搜索。 ——维基百科 Sci-hub不过爱折腾的我怎么会就此放弃呢？于是继续搜索，找到了 Sci-hub 这个大杀器。 Sci-Hub是目前已知第一个提供大量自动且免费的付费学术论文的网站，用户不需要事前订阅或付款，就能够使用原本存放在付费数据库的论文文章，并提供搜索原先出版社网站内的文档文件服务。其中这些文件都是透过世界各地匿名学者提供的使用账号，透过这些账号使得网站能够获取JSTOR、施普林格科学+商业媒体、赛吉出版公司、爱思唯尔等出版社所拥有的论文，并将之加以集结。当用户向Sci-Hub提交论文请求时，网站会先搜索创世纪图书馆是否有可提供的文件；如果创世纪图书馆并没有事先存储，Sci-Hub会以特定数据库的账号下载文章，并送至创世纪图书馆备份以供将来使用。 ——维基百科 Sci-hub的使用方法非常简单，打开 Sci-hub 网站，输入文献链接、PMID号或者DOI号，即可立马获取到文献PDF全文。没错，就是这么简单~ Sci-hub网址由于某些原因，Sci-hub的官网可能无法访问，这里提供几个可以访问的网站： https://sci-hub.se https://sci-hub.st https://sci-hub.tf Sci-hub的趣闻Sci-hub的创立也很有趣，其创始人埃尔巴金因在哈佛大学从事研究期间无法支付所需的数百篇论文的开销，不得不使用他人分享的侵权论文（唉~说多了都是泪😂）。而这次经历也让她认为只有让更多人浏览付费墙机制的文献内容才能够提升知识的传播。 另一个比较好玩的点是在SciHub下载论文时，会看到SciHub的创始人埃尔巴金女士向你挥手的动画，有点魔性……不过请放心，你的访问没有任何问题，是官方网站。","categories":[{"name":"其它","slug":"其它","permalink":"http://mightyherox.me/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"Sci-hub","slug":"Sci-hub","permalink":"http://mightyherox.me/tags/Sci-hub/"},{"name":"JSTOR","slug":"JSTOR","permalink":"http://mightyherox.me/tags/JSTOR/"},{"name":"英文文献","slug":"英文文献","permalink":"http://mightyherox.me/tags/%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE/"}]},{"title":"如何修改pip源为国内源","slug":"如何修改pip源为国内源","date":"2020-12-05T02:30:47.000Z","updated":"2020-12-05T02:30:47.000Z","comments":true,"path":"如何修改pip源为国内源/","link":"","permalink":"http://mightyherox.me/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9pip%E6%BA%90%E4%B8%BA%E5%9B%BD%E5%86%85%E6%BA%90/","excerpt":"","text":"因为某些原因，在我国使用 pip 下载软件包的时候会异常缓慢甚至直接下载不了。为了解决这个问题，我们可以使用国内的镜像源达到高速下载。 环境 系统: Windows 10 pip: 20.2.1 配置这里以清华源为例。按照清华源的介绍，需升级 pip 到最新的版本 (&gt;=10.0.0) 后进行配置： 12pip install pip -Upip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple 但是在实际下载过程中发现会报 _ssl.c:1107: The handshake operation timed out 错误，这个时候我们需要找到并修改pip.ini文件。 打开pip.ini文件，我们会发现如下内容： 12[global]index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple 这是前面设置了清华源的缘故。我们需要在它下方添加新的内容： 12[install]trusted-host &#x3D; pypi.tuna.tsinghua.edu.cn 因为我们用的是https通信，这里设置让pip信任清华源。 完整内容如下： 12345[global]index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple[install]trusted-host &#x3D; pypi.tuna.tsinghua.edu.cn 总结按照上面的步骤你已经正确设置pip源为清华源了，好好享受飞一样的速度吧。","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"pip","slug":"pip","permalink":"http://mightyherox.me/tags/pip/"},{"name":"Python","slug":"Python","permalink":"http://mightyherox.me/tags/Python/"}]},{"title":"使用code-server打造你的云端VS Code","slug":"使用code-server打造你的云端VS-Code","date":"2020-11-29T11:43:21.000Z","updated":"2020-11-29T11:43:21.000Z","comments":true,"path":"使用code-server打造你的云端VS-Code/","link":"","permalink":"http://mightyherox.me/%E4%BD%BF%E7%94%A8code-server%E6%89%93%E9%80%A0%E4%BD%A0%E7%9A%84%E4%BA%91%E7%AB%AFVS-Code/","excerpt":"","text":"最近外出学习老是要背着个电脑还挺累的，但是我又需要电脑进行编程。有没有什么方法可以让我只需携带iPad外出同时又能进行编程呢？ 答案是开源项目code-server，通过它可以在浏览器上运行VS Code。下面我将介绍如何使用code-server打造你的云端VS Code。 目标通过code-server在你的服务器上运行VS Code，然后通过浏览器访问VS Code。 服务器首先你需要准备一台服务器，官方文档推荐的最低配置是 1 GB of RAM 2 cores（1核能跑，但有时候会卡住） 如果你还没有服务器，国内推荐购买腾讯云（良心云）服务器；国外推荐购买Vultr，按量计费，线路不错，支持微信/支付宝。如果你想支持我，可以使用我的AFF链接，你将会获得100美元的使用额度，我也会得到25美元的使用额度。 操作系统可以使用任何你喜欢的Linux发行版，本文以Ubuntu 20.04为例。 安装code-server我们将通过官方提供的脚本安装code-server。使用XShell或Putty等登陆你的服务器，然后依次运行如下命令： 12curl -fsSL https://code-server.dev/install.sh | sh -s -- --dry-runcurl -fsSL https://code-server.dev/install.sh | sh 运行完毕后，安装脚本将会打印出如何运行和使用code-server。 1systemctl start code-server@$USER // 启动code-server 访问code-servercode-server默认使用密码登录（密码保存在~/.config/code-server/config.yaml），并且监听losthost从而避免向外界暴露自己。但我们的目标是在不同的机器上访问它。 下面我将介绍一种安全的且简单的访问code-server的方法。 在更进一步之前，你需要确保服务器开启HTTP/HTTPS端口 12ufw allow 80ufw allow 443 一个你自己的域名（你都已经看到这里了相信你也是有域名的人。如果还没有，你可以考虑购买一个，我使用的是NameCheap，Github学生包里有一年的免费NameCheap域名）。 使用A记录解析你的域名到服务器IP。 安装Caddy。 1234echo &quot;deb [trusted=yes] https://apt.fury.io/caddy/ /&quot; \\ | sudo tee -a /etc/apt/sources.list.d/caddy-fury.listsudo apt updatesudo apt install caddy Caddy服务器是一个开源的，使用 Golang 编写，支持 HTTP/2 的 Web 服务端。它使用Golang 标准库提供HTTP 功能。 Caddy 一个显著的特性是默认启用HTTPS。它是第一个无需额外配置即可提供HTTPS 特性的Web 服务器。 ——维基百科 注意：上述方法安装的是Caddy 2，而目前中文互联网搜索出来的Caddy文档大部分是1版本，2和1有不少区别，请读者自行查阅官方英文文档。 nano /etc/caddy/Caddyfile，将里的内容替换下面内容 12yourdomain.comreverse_proxy 127.0.0.1:8080 重启caddy： 1sudo systemctl reload caddy 接着在浏览器访问https://&lt;your-domain-name&gt;就可以进入你的code-server页面啦！ 修改密码只需修改~/.config/code-server/config.yaml里password的值，然后重启code-server即可： 1sudo systemctl restart code-server@$USER 参考code-server Setup Guide","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"浏览器","slug":"浏览器","permalink":"http://mightyherox.me/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"code-server","slug":"code-server","permalink":"http://mightyherox.me/tags/code-server/"},{"name":"VS Code","slug":"VS-Code","permalink":"http://mightyherox.me/tags/VS-Code/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://mightyherox.me/tags/Ubuntu/"},{"name":"Caddy","slug":"Caddy","permalink":"http://mightyherox.me/tags/Caddy/"},{"name":"云端","slug":"云端","permalink":"http://mightyherox.me/tags/%E4%BA%91%E7%AB%AF/"},{"name":"服务器","slug":"服务器","permalink":"http://mightyherox.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"杀死那个MySQL-main process exited code=killed status=9/kill","slug":"杀死那个MySQL-main-process-exited-code-killed-status-9-kill","date":"2020-11-25T01:51:37.000Z","updated":"2020-11-25T01:51:37.000Z","comments":true,"path":"杀死那个MySQL-main-process-exited-code-killed-status-9-kill/","link":"","permalink":"http://mightyherox.me/%E6%9D%80%E6%AD%BB%E9%82%A3%E4%B8%AAMySQL-main-process-exited-code-killed-status-9-kill/","excerpt":"","text":"引言最近发现一个项目获取不到后端数据，于是登陆服务器查看一下情况，结果发现MySQL没有正常跑起来。 问题定位运行systemctl status mysql发现失败原因是main process exited code=killed status=9/kill。Google一下发现是因为系统内存不足。这就很奇怪了，这台服务器配置虽然是1核1G，但是跑的项目并不多。 直接运行top命令发现有个Java项目在疯狂吃内存，推测原因是因为它nohup一直在后台运行导致内存不足。不过我对这方面还不是很了解，有朋友知道的话欢迎在下方评论区留言。 解决知道问题出在哪里，下一步当然是去解决它啦。直接重启这个Java项目，然后发现MySQL也能正常跑起来。看来应该定时重启一下这个Java项目以免内存占用过大。 ReferenceCentOS 7.4 MySQL被杀的问题","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://mightyherox.me/tags/Linux/"},{"name":"MySQL","slug":"MySQL","permalink":"http://mightyherox.me/tags/MySQL/"},{"name":"Java","slug":"Java","permalink":"http://mightyherox.me/tags/Java/"},{"name":"进程","slug":"进程","permalink":"http://mightyherox.me/tags/%E8%BF%9B%E7%A8%8B/"}]},{"title":"如何使用云函数绕过微信小程序网络通信的域名限制","slug":"如何使用云函数绕过微信小程序网络通信的域名限制","date":"2020-11-21T07:42:40.000Z","updated":"2020-11-21T07:42:40.000Z","comments":true,"path":"如何使用云函数绕过微信小程序网络通信的域名限制/","link":"","permalink":"http://mightyherox.me/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%BA%91%E5%87%BD%E6%95%B0%E7%BB%95%E8%BF%87%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E7%9A%84%E5%9F%9F%E5%90%8D%E9%99%90%E5%88%B6/","excerpt":"","text":"引言在微信小程序开发过程中我们会遇到小程序只可以跟指定的域名进行网络通信。包括普通 HTTPS 请求（wx.request）、上传文件（wx.uploadFile）、下载文件（wx.downloadFile) 和 WebSocket 通信（wx.connectSocket）。域名需要满足HTTPS和备案条件。如果是自家域名，你可以按照要求去做。但如果你要访问第三方API，而它恰好不满足上述条件时该怎么办？ 使用云函数中转一个比较简单的方法是使用云函数中转。将有限制的小程序请求转为没有限制的云函数请求，达到间接访问未备案、无HTTPS API的效果。 云函数（Serverless Cloud Function，SCF）是腾讯云为企业和开发者们提供的无服务器执行环境，帮助您在无需购买和管理服务器的情况下运行代码。您只需使用平台支持的语言编写核心代码并设置代码运行的条件，即可在腾讯云基础设施上弹性、安全地运行代码。SCF 是实时文件处理和数据处理等场景下理想的计算平台。 本例使用的API假设我们要访问的API是Studio Ghibli API，会返回一些Ghibli电影或人物资料。 我们向该API地址https://ghibliapi.herokuapp.com/films/2baf70d1-42bb-4437-b551-e5fed5a87abe发送一个get请求，将获取到如下结果： 123456789&#123; &quot;id&quot;: &quot;2baf70d1-42bb-4437-b551-e5fed5a87abe&quot;, &quot;title&quot;: &quot;Castle in the Sky&quot;, &quot;description&quot;: &quot;The orphan Sheeta inherited a mysterious crystal that links her to the mythical sky-kingdom of Laputa. With the help of resourceful Pazu and a rollicking band of sky pirates, she makes her way to the ruins of the once-great civilization. Sheeta and Pazu must outwit the evil Muska, who plans to use Laputa&#x27;s science to make himself ruler of the world.&quot;, &quot;director&quot;: &quot;Hayao Miyazaki&quot;, &quot;producer&quot;: &quot;Isao Takahata&quot;, &quot;release_date&quot;: 1986, &quot;rt_score&quot;: 95&#125; 创建云函数首先在小程序开发者工具中点击上方的云开发按钮，开通云开发功能。第一次打开会先让你新建一个环境，选择配额方案。对于个人开发者而言免费的基础版1应该够用了。 回到微信开发者工具，在云函数根目录右键新建Node.js云函数。 新建好的云函数目录结构如下所示，我们在该目录打开终端，执行npm i安装wx-server-sdk，这是云函数开发必须安装的依赖。 接着执行npm i -S got。 got是Node.js中一个轻量级且功能强大的HTTP请求库。 编写云函数代码12345678910111213// index.js// 云函数入口文件const cloud = require(&#x27;wx-server-sdk&#x27;)const got = require(&#x27;got&#x27;)cloud.init()// 云函数入口函数exports.main = async (event, context) =&gt; &#123; const response = await got(&#x27;https://ghibliapi.herokuapp.com/films/2baf70d1-42bb-4437-b551-e5fed5a87abe&#x27;, &#123; responseType: &#x27;json&#x27; &#125;) return response.body&#125; 编写完成后在该云函数目录右键开启云函数本地调试。 这段代码中我们通过got发送一个get请求到上述的API地址中，再将获取到的Response中的body返回给小程序客户端。 小程序调用云函数在小程序中我们使用如下代码来调用云函数： 123wx.cloud.callFunction(&#123; name:&quot;getGhibliFilm&quot;&#125;).then(res =&gt; &#123; console.log(res); &#125;).catch(console.error) 运行小程序，如果你在控制台看到下方的返回，说明你的云函数调用成功了。稍后你可以关闭云函数本地调试，上传并部署该云函数。 总结垃圾微信，生态搞得这么封闭又臃肿，不想再搞微信小程序了。 Reference小程序如何访问未备案的 API ｜ 云开发","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"微信小程序","slug":"微信小程序","permalink":"http://mightyherox.me/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"云函数","slug":"云函数","permalink":"http://mightyherox.me/tags/%E4%BA%91%E5%87%BD%E6%95%B0/"},{"name":"云开发","slug":"云开发","permalink":"http://mightyherox.me/tags/%E4%BA%91%E5%BC%80%E5%8F%91/"},{"name":"Node.js","slug":"Node-js","permalink":"http://mightyherox.me/tags/Node-js/"}]},{"title":"github镜像站","slug":"github镜像站","date":"2020-11-19T01:13:38.000Z","updated":"2020-11-19T01:13:38.000Z","comments":true,"path":"github镜像站/","link":"","permalink":"http://mightyherox.me/github%E9%95%9C%E5%83%8F%E7%AB%99/","excerpt":"","text":"引言众所周知，在我国访问github会遭遇某些不可描述的魔法攻击。虽然我平时访问github都是通过代理途径，但是最近买了一台国内的VPS，git clone一直下载不动，又懒得折腾这台VPS，google一番发现github还有国内镜像站，下载速度还可以。 github镜像站地址：https://github.com.cnpmjs.org/ 使用方法：git clone时把https://github.com/替换为https://github.com.cnpmjs.org/即可。如： 替换前：git clone https://github.com/circle-hotaru/bilibili-comment2canvas.git替换后：git clone https://github.com.cnpmjs.org/circle-hotaru/bilibili-comment2canvas.git","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"github","slug":"github","permalink":"http://mightyherox.me/tags/github/"},{"name":"镜像","slug":"镜像","permalink":"http://mightyherox.me/tags/%E9%95%9C%E5%83%8F/"}]},{"title":"我的云端生活","slug":"我的云端生活","date":"2020-11-13T01:59:42.000Z","updated":"2020-11-13T01:59:42.000Z","comments":true,"path":"我的云端生活/","link":"","permalink":"http://mightyherox.me/%E6%88%91%E7%9A%84%E4%BA%91%E7%AB%AF%E7%94%9F%E6%B4%BB/","excerpt":"","text":"引言最近在慢慢把自己接入云端生活，即能在云平台完成的事情尽量在云平台完成。这样做的原因主要是为了更好的提高生活/办公效率，能够在不同平台间进行快速切换。 我的设备 惠普暗影精灵5 Redmi Note 7 Pro iPad 2018 DigitalOcean Ubuntu 20.04 笔记我现在使用的云端笔记是我来wolai。或许现在大家听到最多的云端笔记是Notion，我之前也有尝试过它。前一段时间Notion在国内被墙了，虽然很快就恢复了，但是对国内用户而言这终究是个隐患。尽管我拥有科学上网的能力，但我想尽可能地不被无关因素打扰，于是我开始寻找国内的云端笔记产品。 恰巧在即刻看到有人在推荐我来wolai，于是我也去体验了一番。 不过我使用我来wolai的时间并不长，等深入了解后再回来继续介绍我来wolai。 感兴趣的朋友可以使用我的注册邀请码：RD4ZQVM。 资料备份&amp;共享资料备份是一间很重要的事情，因为你不知道什么时候你的生产力工具突然坏了，然后丢失里面的资料。我现在的备份途径是采用移动硬盘和OneDrive备份。 硬盘备份的资料主要是一些大文件，比如我拍摄的照片原图，它们都是RAW格式，一张照片就20~30MB。然后我每次拍摄都会拍250-400张照片，在电脑上修完图后，继续存在电脑里也是浪费空间，因为我很少返修以前的图。当然也不能直接删掉啦，所以放在移动硬盘里是最好的选择。 编程项目方面，自然是使用Github来备份，可以记录项目的进度，也方便向别人展示自己的编程水平。 OneDrive备份的主要是一些需要在不同平台使用的资料，顺带实现资料共享。比如我保存的一些拍摄参考图。每次在ins或其他地方看到好看的地方我都会习惯把它们保存起来（不适用Pinterest是因为网络的问题）。但是每次都要从电脑传到手机真的很不方便。于是最近开始折腾OneDrive。其实之前也有使用Google Drive和腾讯微云来备份资料。相比Google Drive，OneDrive的网络状况会更加稳定，而腾讯微云则是充钱才能变得更强😂。 果然，onedrive的网络并不是很稳定。最近发现Syncthing这款开源免费跨平台的文件同步工具，基于P2P技术实现设备间的文件同步。具体介绍可以看看下面这篇知乎文章： Syncthing - P2P文件同步工具 - 寒三石的文章 - 知乎 需要注意的是，Android添加Windows的共享文件夹时候需要在网页管理页面接收保存共享文件夹。不然就会像我一样傻傻等半天都没同步。 持续更新中……","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"效率","slug":"效率","permalink":"http://mightyherox.me/tags/%E6%95%88%E7%8E%87/"},{"name":"云平台","slug":"云平台","permalink":"http://mightyherox.me/tags/%E4%BA%91%E5%B9%B3%E5%8F%B0/"},{"name":"OneDrive","slug":"OneDrive","permalink":"http://mightyherox.me/tags/OneDrive/"},{"name":"跨平台协作","slug":"跨平台协作","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%8D%8F%E4%BD%9C/"},{"name":"Windows 10","slug":"Windows-10","permalink":"http://mightyherox.me/tags/Windows-10/"},{"name":"备份","slug":"备份","permalink":"http://mightyherox.me/tags/%E5%A4%87%E4%BB%BD/"},{"name":"共享","slug":"共享","permalink":"http://mightyherox.me/tags/%E5%85%B1%E4%BA%AB/"}]},{"title":"How to use simple global store and axios in Vue project","slug":"How-to-use-simple-global-store-and-axios-in-Vue-project","date":"2020-10-26T02:29:45.000Z","updated":"2020-10-26T02:29:45.000Z","comments":true,"path":"How-to-use-simple-global-store-and-axios-in-Vue-project/","link":"","permalink":"http://mightyherox.me/How-to-use-simple-global-store-and-axios-in-Vue-project/","excerpt":"","text":"引言最近写的项目涉及组件间的通信，其中有一些资料是大部分组件都通用的，因此把它们抽取出来当成全局变量是最好的。在Vue项目中，state基本上意味着data，状态管理（State management)通常指应用层数据的管理。官方建议我们在小型应用中采用一个简单的store模式即可。不幸的是，官方文档中的介绍过于简洁，而网上找到相关中文资料也很少，甚至出现用store模式实现Vuex，天啦噜，这不就是把简单的问题复杂化了嘛。于是本文将要带领您如何使用简单的store模式。 创建Vue项目首先使用Vue Cli创建一个Vue项目 1vue create number-app 接下来会让你选择dafault或者manual，我们选择default即可。 1234Vue CLI v4.4.6? Please pick a preset: (Use arrow keys)❯ default (babel, eslint) Manually select features 一旦项目创建完成，您需要进入项目中，然后运行该项目。 12cd number-appnpm run serve 使用浏览器打开http://localhost:8080/，当你看到下图时表明项目已经成功跑起来了。 不过我们接下来并不需要HelloWorld.vue，您可以把它和App.vue里相关部分删去。 store.js在src/文件夹下创建一个store.js文件，它将暴露一个store对象。 123456789export const store &#x3D; &#123; state: &#123; numbers: [1, 2, 3]， text: &#39;&#39; &#125;， addNumber(newNumber) &#123; this.state.numbers.push(newNumber); &#125;&#125;; 上面的numbers和text是我们将要在多个组件中显示或操作的数据。需要注意，所有store中state的变更，都放置在store自身的action中去管理，addNumber(newNumber)便是一个范例。 在组件中使用在组件中，我们需要import &#123; store &#125; from &quot;../store.js&quot;;来引入store。在data中使用storeState: store.state来获取store中的state。 现在我们创建一个NumberDisplay组件用来显示store中的数据。 12345678910111213141516171819&lt;template&gt; &lt;div&gt; &lt;h2&gt;&#123;&#123; storeState.numbers &#125;&#125;&lt;&#x2F;h2&gt; &lt;p&gt;&#123;&#123; storeState.text &#125;&#125;&lt;&#x2F;p&gt; &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;import &#123; store &#125; from &quot;..&#x2F;store.js&quot;;export default &#123; name: &quot;NumberDisplay&quot;, data() &#123; return &#123; storeState: store.state &#125;; &#125;&#125;;&lt;&#x2F;script&gt; 然后创建一个NumberSubmit组件用来添加新的数字到store中的number数组。使用store.addNumber来调用store中的addNumber，从而改变store中的state 1234567891011121314151617181920212223242526&lt;template&gt; &lt;div&gt; &lt;input v-model&#x3D;&quot;numberInput&quot; type&#x3D;&quot;number&quot; &#x2F;&gt; &lt;button @click&#x3D;&quot;addNumber(numberInput)&quot;&gt; Add new number &lt;&#x2F;button&gt; &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;import &#123; store &#125; from &quot;..&#x2F;store.js&quot;;export default &#123; name: &quot;NumberSubmit&quot;, data() &#123; return &#123; numberInput: 0 &#125;; &#125;, methods: &#123; addNumber(numberInput) &#123; store.addNumber(Number(numberInput)); &#125; &#125;&#125;;&lt;&#x2F;script&gt; 现在您可以在页面上添加新的数字了。 使用axios有很多时候你在构建应用时需要访问一个API并展示其数据。做这件事的方法有好几种，而使用基于promise的HTTP客户端axios则是其中非常流行的一种。本文我们将使用Numbers API，它将返回一些有趣的文本给我们。 在Vue项目中使用axios，首先 1npm install --save axios vue-axios 然后在main.js中加上 12345import Vue from &#39;vue&#39;import axios from &#39;axios&#39;import VueAxios from &#39;vue-axios&#39;Vue.use(VueAxios, axios) 这样您就可以在Vue文件中通过下面的三种方式来使用axios： 1234567891011Vue.axios.get(api).then((response) &#x3D;&gt; &#123; console.log(response.data)&#125;) this.axios.get(api).then((response) &#x3D;&gt; &#123; console.log(response.data)&#125;) this.$http.get(api).then((response) &#x3D;&gt; &#123; console.log(response.data)&#125;) 但是当我在store.js文件中使用axios时却出现了错误Cannot read property &#39;get&#39; of undefined： 12345678addNumber(newNumber) &#123; this.state.numbers.push(newNumber); this.axios.get(&#39;http:&#x2F;&#x2F;numbersapi.com&#x2F;&#39;+ newNumber) .then(response &#x3D;&gt; &#123; this.state.text &#x3D; response.data; console.log(response); &#125;) &#125;, 出错的原因是因为store.js文件中的this.axios并没有引用Vue实例，我们需要另外引入axios。完整store.js文件如下： 12345678910111213141516const axios &#x3D; require(&#39;axios&#39;);export const store &#x3D; &#123; state: &#123; numbers: [1, 2, 3], text: &#39;3 is the number of spatial dimensions we perceive our universe to have.&#39; &#125;, addNumber(newNumber) &#123; this.state.numbers.push(newNumber); axios.get(&#39;http:&#x2F;&#x2F;numbersapi.com&#x2F;&#39;+ newNumber) .then(response &#x3D;&gt; &#123; this.state.text &#x3D; response.data; console.log(response); &#125;) &#125;,&#125;; 至此，我们完成了number-app。如果您的程序无法正常运行，请到github上查看源码。 总结通过本文，我们学会了如何在Vue项目中使用简单的状态管理store，当您的项目足够简单时推荐您使用它而不是Vuex。同时我们也接触了axios，这是一个强大的工具。","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://mightyherox.me/tags/Vue/"},{"name":"font-end","slug":"font-end","permalink":"http://mightyherox.me/tags/font-end/"},{"name":"simple global store","slug":"simple-global-store","permalink":"http://mightyherox.me/tags/simple-global-store/"},{"name":"axios","slug":"axios","permalink":"http://mightyherox.me/tags/axios/"},{"name":"store pattern","slug":"store-pattern","permalink":"http://mightyherox.me/tags/store-pattern/"},{"name":"store.js","slug":"store-js","permalink":"http://mightyherox.me/tags/store-js/"}]},{"title":"如何使用CORS代理解决“No Access-Control-Allow-Origin header”问题","slug":"How-to-use-a-CORS-proxy-to-get-around-“No-Access-Control-Allow-Origin-header”-problems","date":"2020-10-21T13:03:24.000Z","updated":"2020-10-21T13:03:24.000Z","comments":true,"path":"How-to-use-a-CORS-proxy-to-get-around-“No-Access-Control-Allow-Origin-header”-problems/","link":"","permalink":"http://mightyherox.me/How-to-use-a-CORS-proxy-to-get-around-%E2%80%9CNo-Access-Control-Allow-Origin-header%E2%80%9D-problems/","excerpt":"","text":"引言最近在编写项目过程中又遇到了跨域问题，之前在编写Bilibili评论转图片神器项目过程中也有遇到过，解决办法是采用CORS。而CORS需要浏览器和服务器同时支持，浏览器方面会自动完成，所以关键在于服务器。因为我调用的是第三方API，如果它返回的Access-Control-Allow-Origin头信息不是*或没有添加我的项目地址的话，那我是无法直接获取资料的。所以当时我有写一个Node程序做中间件接口转发。当然，这个Node程序写得很简陋，功能有限，只能处理Bilibili API请求。然后我无意中发现了一个github项目cors-anywhere，它的介绍是这样的： CORS Anywhere is a NodeJS reverse proxy which adds CORS headers to the proxied request. CORS Anywhere翻译成中文即，CORS Anywhere是一个NodeJS反向代理，它将CORS标头添加到代理请求中。好像正合我意。看了一下用法也挺简单。比如，平时我们发送API请求是这样的： 12345const url &#x3D; &quot;https:&#x2F;&#x2F;example.com&quot;; &#x2F;&#x2F; site that doesn’t send Access-Control-*fetch(url).then(response &#x3D;&gt; response.text()).then(contents &#x3D;&gt; console.log(contents)).catch(() &#x3D;&gt; console.log(&quot;Can’t access &quot; + url + &quot; response. Blocked by browser?&quot;)) 运行结果当然是浏览器阻止该代码访问来自https://example.com 的响应。而浏览器这样做的原因是，该响应缺少Access-Control-Allow-Origin响应标头。 然后我们稍微修改一下代码： 123456const proxyurl &#x3D; &quot;https:&#x2F;&#x2F;cors-anywhere.herokuapp.com&#x2F;&quot;;const url &#x3D; &quot;https:&#x2F;&#x2F;example.com&quot;; &#x2F;&#x2F; site that doesn’t send Access-Control-*fetch(proxyurl + url) &#x2F;&#x2F; https:&#x2F;&#x2F;cors-anywhere.herokuapp.com&#x2F;https:&#x2F;&#x2F;example.com.then(response &#x3D;&gt; response.text()).then(contents &#x3D;&gt; console.log(contents)).catch(() &#x3D;&gt; console.log(&quot;Can’t access &quot; + url + &quot; response. Blocked by browser?&quot;)) Note: https://cors-anywhere.herokuapp.com/ 是CORS Anywhere项目的一个在线Demo 上面这段代码可以成功访问响应，因为我们将请求URL前缀为代理URL，即其更改为https://cors-anywhere.herokuapp.com/https://example.com， 请求通过该代理取得，然后： 将请求转发到https://example.com。 从https://example.com 接收响应。 将头信息Access-Control-Allow-Origin添加到响应中。 将带有添加的头信息的响应传递回请求的前端代码。 浏览器允许前端代码访问响应。 实测确实可以解决跨域问题，那么我们如何部署属于自己的CORS Anywhere呢？（当然您也可以继续使用https://cors-anywhere.herokuapp.com/） 部署您还可以使用5个命令在2-3分钟内轻松地将您自己的代理部署到Heroku（Heroku是一个支持多种编程语言的云平台即服务）： 12345git clone https:&#x2F;&#x2F;github.com&#x2F;Rob--W&#x2F;cors-anywhere.gitcd cors-anywhere&#x2F;npm installheroku creategit push heroku master 运行完这些命令后，您将最终运行一个属于自己的CORS Anywhere服务器，该服务器位于例如https://circlehotarux-cors-anywhere.herokuapp.com/。 cors-proxy-server发现某些API使用cors-anywhere时会遇到403 Forbidden问题，具体如何解决留待以后更新。这里提供一个替代方案——cors-proxy-server，使用方法同cors-anywhere一样，官方提供了一个在线Demo。 123456const proxyurl &#x3D; &quot;https:&#x2F;&#x2F;secret-ocean-49799.herokuapp.com&#x2F;&quot;;const url &#x3D; &quot;https:&#x2F;&#x2F;example.com&quot;; &#x2F;&#x2F; site that doesn’t send Access-Control-*fetch(proxyurl + url) &#x2F;&#x2F; https:&#x2F;&#x2F;secret-ocean-49799.herokuapp.com&#x2F;https:&#x2F;&#x2F;example.com.then(response &#x3D;&gt; response.text()).then(contents &#x3D;&gt; console.log(contents)).catch(() &#x3D;&gt; console.log(&quot;Can’t access &quot; + url + &quot; response. Blocked by browser?&quot;)) Heroku没有Heroku？没关系，接下来我将教您如何注册使用Heroku。 首先打开Heroku官网，点击右上角的Sign up 按要求填写好资料，注意填写邮箱填写国外的邮箱，如gmail，使用国内的邮箱可能会注册失败。点击CREATE FREE ACCOUNT后会发送一封验证邮件到您的邮箱，点击邮件中的链接后会跳转到设置密码页面。设置完密码后，就正式完成注册啦！ 接着我们来到Heroku Dev Center下载Heroku CLi，这是Heroku的命令行工具，为接下来做准备。选择并安装自己系统对应的安装程序即可。 安装完成后，在你喜欢的位置打开git bash，我们将在这里下载前面所提到的CORS Anywhere项目。 123git clone https:&#x2F;&#x2F;github.com&#x2F;Rob--W&#x2F;cors-anywhere.gitcd cors-anywhere&#x2F;npm install 然后我们还是在git bash中登陆我们的Heroku账号，输入heroku login -i： 123456heroku login -iheroku: Enter your login credentialsEmail: me@example.comPassword: ***************Two-factor code: ********Logged in as me@heroku.com 接着输入heroku create $&#123;APP name&#125;来创建您的第一个APP，注意，这里创建的APP名是唯一的，也就是如果有人已经使用了您想要的名字，您将无法创建该APP。当然您也可以输入heroku create来创建一个随机名字的APP。 123heroku createCreating app... done, ⬢ sleepy-meadow-81798https:&#x2F;&#x2F;sleepy-meadow-81798.herokuapp.com&#x2F; | https:&#x2F;&#x2F;git.heroku.com&#x2F;sleepy-meadow-81798.git 最后输入git push heroku master将APP部署到Heroku上。打开上面提供的地址您将看到您所部署的项目，Awesome！ 总结这篇文章帮助您部署属于自己的CORS-Anywhere项目。同时，带领您对Heroku有初步的了解。现在您可以轻松的解决跨域问题啦~","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"前端","slug":"前端","permalink":"http://mightyherox.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"font-end","slug":"font-end","permalink":"http://mightyherox.me/tags/font-end/"},{"name":"CORS","slug":"CORS","permalink":"http://mightyherox.me/tags/CORS/"},{"name":"Same-origin policy","slug":"Same-origin-policy","permalink":"http://mightyherox.me/tags/Same-origin-policy/"},{"name":"CORS Anywhere","slug":"CORS-Anywhere","permalink":"http://mightyherox.me/tags/CORS-Anywhere/"},{"name":"CORS PROXY SERVER","slug":"CORS-PROXY-SERVER","permalink":"http://mightyherox.me/tags/CORS-PROXY-SERVER/"},{"name":"Heroku","slug":"Heroku","permalink":"http://mightyherox.me/tags/Heroku/"},{"name":"跨域资源分享","slug":"跨域资源分享","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"},{"name":"同源策略","slug":"同源策略","permalink":"http://mightyherox.me/tags/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/"},{"name":"浏览器","slug":"浏览器","permalink":"http://mightyherox.me/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"}]},{"title":"反思-做事不够彻底导致失败","slug":"反思-做事不够彻底导致失败","date":"2020-10-12T01:32:22.000Z","updated":"2020-10-12T01:32:22.000Z","comments":true,"path":"反思-做事不够彻底导致失败/","link":"","permalink":"http://mightyherox.me/%E5%8F%8D%E6%80%9D-%E5%81%9A%E4%BA%8B%E4%B8%8D%E5%A4%9F%E5%BD%BB%E5%BA%95%E5%AF%BC%E8%87%B4%E5%A4%B1%E8%B4%A5/","excerpt":"","text":"今早看了艾尔文的一个视频没钱没时间又没资源，如何翻身？这个“关键思维”很少人在谈，讲述我们如何翻身。其中一个重要的点是要想从一个阶层进入到另一个阶层需要你投入现有的80%的资产（包括时间、金钱、行动）。是不是80%不重要，重要的是你确实需要投入绝大部分的资产才能成功。 回想到大学生活，我曾经有过许多机遇，但都被我一一错过了。比如说大学期间接触了摄影，并且也玩得挺不错。开始有越来越多的人来找我约拍。但很多都被我拒绝了。原因是当时觉得摄影只是个爱好，不想花费太多时间。另一方面，不敢投入太多金钱，导致设备也跟不上，只有一台索尼a6400和适马30 f1.4。拍简单的人像还可以，但是要接商业拍摄的话实在不够看。同时在后期修图方面，我一开始看的是本叔的视频，没有看完，学了一点皮毛就没继续学了。但事实上，我也很羡慕摄影师的生活。本来我的开局还挺好，结果因为我不舍得投入，从大二到大四，摄影水平也没见提升多少，也没有让摄影成为我的副业。 在编程方面也是如此，从Web前端到Java Web后端到Android到Java Web后端再到前端。每次都止步于入门门槛。学完入门后，觉得好难，又换另一个。如果一直坚持一个方向的话，我现在应该在某个技术栈方面达到进阶了吧。 真的感觉自己有过许多机会，但每次都浅尝即止，然后就错过了。","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"大学","slug":"大学","permalink":"http://mightyherox.me/tags/%E5%A4%A7%E5%AD%A6/"},{"name":"翻身","slug":"翻身","permalink":"http://mightyherox.me/tags/%E7%BF%BB%E8%BA%AB/"},{"name":"机遇","slug":"机遇","permalink":"http://mightyherox.me/tags/%E6%9C%BA%E9%81%87/"},{"name":"摄影","slug":"摄影","permalink":"http://mightyherox.me/tags/%E6%91%84%E5%BD%B1/"}]},{"title":"使用Splashtop Wired XDisplay让iPad做win10扩展屏","slug":"使用Splashtop-Wired-XDisplay让iPad做win10扩展屏","date":"2020-09-23T08:04:35.000Z","updated":"2020-09-23T08:04:35.000Z","comments":true,"path":"使用Splashtop-Wired-XDisplay让iPad做win10扩展屏/","link":"","permalink":"http://mightyherox.me/%E4%BD%BF%E7%94%A8Splashtop-Wired-XDisplay%E8%AE%A9iPad%E5%81%9Awin10%E6%89%A9%E5%B1%95%E5%B1%8F/","excerpt":"","text":"前言宿舍有一台闲置的iPad（第6代），买来主要是在图书馆看资料。不过目前我待在宿舍使用电脑的时间比较多，所以它就闲置了。宿舍电脑是15.6寸的笔记本，这个屏幕在笔记本中算大了。但是对我这种经常分屏一边看视频一边敲代码的人来说略显窄。于是看看能不能让iPad作为我的扩展屏。 网络介绍的方法有很多，其中Splashtop这款软体推荐得比较多，而且还免费。就把操作方法总结一下，留作存档。 1. iPad端安装Splashtop Wired XDisplay HD-显示器扩展与镜像在App Store搜索安装即可。 2. Win10端安装Splashtop Wired XDisplay打开官网地址 点击下载PC的XDISPLAY AGENT 下载后进行安装即可，很简单。 打开软件可能会提示你缺少驱动，需要下载安装iTunes即可。 3. 用iPad数据线连接iPad和win10两端都运行Splashtop软体，默认是复制屏幕，你可以在win10上按 win + p 选择扩展。另外取消勾选启用镜像模式，注意，是取消。 结语按照上述步骤操作即可顺利实现iPad做win10的扩展屏。鼠标会有轻微的延迟，CPU占用在25%左右。不过我发现使用iPad的屏幕看视频里的代码还是太小了，要凑过去看才行。满足不了我的需求，所以折腾一下就不继续了……","categories":[{"name":"数码","slug":"数码","permalink":"http://mightyherox.me/categories/%E6%95%B0%E7%A0%81/"}],"tags":[{"name":"iPad","slug":"iPad","permalink":"http://mightyherox.me/tags/iPad/"},{"name":"win10","slug":"win10","permalink":"http://mightyherox.me/tags/win10/"},{"name":"笔记本","slug":"笔记本","permalink":"http://mightyherox.me/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"},{"name":"Splashtop","slug":"Splashtop","permalink":"http://mightyherox.me/tags/Splashtop/"},{"name":"扩展屏","slug":"扩展屏","permalink":"http://mightyherox.me/tags/%E6%89%A9%E5%B1%95%E5%B1%8F/"}]},{"title":"我奋斗了18年才和你坐在一起喝咖啡","slug":"我奋斗了18年才和你坐在一起喝咖啡","date":"2020-09-22T14:25:47.000Z","updated":"2020-09-22T14:25:47.000Z","comments":true,"path":"我奋斗了18年才和你坐在一起喝咖啡/","link":"","permalink":"http://mightyherox.me/%E6%88%91%E5%A5%8B%E6%96%97%E4%BA%8618%E5%B9%B4%E6%89%8D%E5%92%8C%E4%BD%A0%E5%9D%90%E5%9C%A8%E4%B8%80%E8%B5%B7%E5%96%9D%E5%92%96%E5%95%A1/","excerpt":"","text":"今天在图书馆自习时，旁边来了一个女生想要使用图书馆的电脑。可是折腾了几次都没开机，然后问我怎么开机。当时感到很诧异，开机只需要按主机上的电源按钮即可，怎么会还有人不知道呢。然后突然回想起自己第一次接触电脑的情景。 我第一次接触电脑是在初中某个暑假的时候，我爸让我参加县城某培训机构的培训班。培训班教第一天教的内容是五笔打字，老师提前打开了电脑，控制屏幕演示给我们看，然后我们自己练习打字。上完课后老师让我们关机回家。当时我不知道怎么关机，又不敢乱点，只好灰溜溜地找老师帮忙。 此后几天的上午我都到培训班练习五笔打字，还学习如何使用千千静听，没错，当时的我连怎么使用电脑软件都不会。学了一个星期吧，就没去了。因为那时候培训班是给无业人员晋升技能之类的，要花钱报名考证。我当时是托邻居关系进去的，自然考不了证，所以学了一些基本技能后就不去了。 后来爸妈给家里配了一台台式机，不过没有拉网线，拿U盘拷了一些打字游戏和当时很火的植物大战僵尸。 初中是在县城读书，所以也认识了许多住在县城的同学。他们小学在4399打拳皇的时候我还不知道电脑长什么样，他们打CF、地下城的时候我家里还没拉网线。于是当他们一群人去网吧打游戏的时候我根本不感冒，因为我不会玩（我到现在还没去网吧上过网）。 后来因为要住宿买了人生的第一台手机，是当时铺天盖地卖广告的尼彩手机。现在看来就是个老人机无疑，可是对只接触过键盘机的我来说，这触屏机还是很吸引人的。身边同学也是用的触屏机，不过是iPhone、联想之类的。尼彩虽然是触屏机，但是功能却跟键盘机没什么两样。装不了APP，而且预装的APP都是适配键盘机类型的。所以后来流行起来的微信，我根本装不了，完美错过了第一批使用微信的风潮。一直到高一我才换了一台真正的智能机，联想的，499。 因为家庭环境不富裕，许多同龄人习以为常的事物我都是慢一拍才了解到，也造成了我比较自卑的心理。 今天看到这女生，我仿佛看到了当时不会关机的自己。让我想起以前看到的一句比较丧的话——我奋斗了18年才和你坐在一起喝咖啡。","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"阶层差距","slug":"阶层差距","permalink":"http://mightyherox.me/tags/%E9%98%B6%E5%B1%82%E5%B7%AE%E8%B7%9D/"}]},{"title":"maintain output and create value","slug":"maintain-output-and-create-value","date":"2020-09-17T14:07:46.000Z","updated":"2020-09-17T14:07:46.000Z","comments":true,"path":"maintain-output-and-create-value/","link":"","permalink":"http://mightyherox.me/maintain-output-and-create-value/","excerpt":"","text":"今天下午一个师弟说他的老师在班上提到我了，并展示了我的Github。后来了解到是因为疫情期间我关注了他的码云&amp;B站账号，然后他也发现了我的Github账号。可能是因为惠院玩Github的学生太少了吧（问了几个大三师弟都对Github没什么概念），所以给他留下了比较深刻的印象？这应该跟教学环境有关，大学只遇到一个比较年轻的老师让我们用Github做实验，其他老师的教学方式都比较传统。所以惠院计算机学生的水平…… 这对我是一个挺大的激励，之前Github一直默默无闻，现在总算被人关注了。类似的事情还有一件。我一般不怎么玩国内的社交平台，不过即刻一直有保持输出。最近有个本地即友也来玩即刻，并注意到了我。我之前也有发一些跟专业相关的动态，然后他前几天来问我要不要去他那里实习。突然掉下来一个实习机会，不过因为我当时已经答应了要去另一个公司实习便婉拒了。 所以，保持输出真的很重要啊！你不输出的话别人都不知道有你的存在。","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"输出","slug":"输出","permalink":"http://mightyherox.me/tags/%E8%BE%93%E5%87%BA/"},{"name":"Github","slug":"Github","permalink":"http://mightyherox.me/tags/Github/"},{"name":"机会","slug":"机会","permalink":"http://mightyherox.me/tags/%E6%9C%BA%E4%BC%9A/"}]},{"title":"火车驶向云外 梦安魂于九霄","slug":"火车驶向云外-梦安魂于九霄","date":"2020-09-13T07:16:47.000Z","updated":"2020-09-13T07:16:47.000Z","comments":true,"path":"火车驶向云外-梦安魂于九霄/","link":"","permalink":"http://mightyherox.me/%E7%81%AB%E8%BD%A6%E9%A9%B6%E5%90%91%E4%BA%91%E5%A4%96-%E6%A2%A6%E5%AE%89%E9%AD%82%E4%BA%8E%E4%B9%9D%E9%9C%84/","excerpt":"","text":"前天考完计网和微机后，大学生活应该算告一段落了。虽然还有大四一年，但基本都不在学校生活，开始接触社会。 我最近过得怎样呢？应该说很迷茫吧。现在这个阶段大学生提及最多的就是考研、考公和工作的事情。我这个专业大部分学生都去实习了，不过自己的很多朋友都在准备考研或者考公。好像，大家都挺忙的。但是我还在怀念即将失去的大学生活，没有很积极的去找工作，好像大一大二大三在做什么，现在也在做什么。 前天考完试后打算久违地约人拍照，但是问了一圈，师弟师妹们都在忙着准备迎接新生（新生今天报道）和期末考。就感觉我和他们的生活已经不同了，他们还那么年轻，那么有活力，就像我当初一样。 然后，今天新生入学。今年因为疫情原因，学校的迎新活动没那么隆重了。让学生从体育馆侧门进来，坐校巴来到少康楼前面报到，各个学院在少康楼那里搭个帐篷迎接新生。我当年入学的时候，也是走的侧门（因为那时候汽车导航到侧门了）。然后打电话给同乡会的师兄过来帮忙借我。同乡会的师兄真的很热情，我那时候是中午来的，他们一知道我来了立马开着女装摩托（那个时候学校还可以开电动车）过来接我。路上人挤人，因为我是从侧门进来的，而我的宿舍在对角线最远的地方，所以当时觉得大学真的好大啊。把行李放在宿舍后出去领军训服，去我们系报道，然后和爸妈吃顿午饭就回宿舍继续收拾了。 下午其他舍友陆续到齐了。看对面床的舍友没什么事做就问他要不要一起出去吃饭，他答应，然后一起逛了逛学校，有许多扫码关注公众号后就送糖水、送可乐之类的活动。在此后大一大二两年，他成了我在班里关系最好的同学，我们经常一起上课下课。不过他是个有目标的人，大三我跟他的差距越来越大，他也开始经常逃课去图书馆自学。后来他在学校附近租房住，方便他的作息，也不用走去图书馆。然后我跟他的联系也越来越少了。 其他的事，今天是新生入学的日子也是班里同学回去实习的日子。宿舍有两个舍友去了集中实习单位，今早学校给他们安排大巴接送过去。早上八点就过去，连一起吃午饭的时间都没有，分散实习的其他同学也在今天陆陆续续地离开学校了（因为明天周一）。怎么说呢，看着一群人拉着行李箱进来，另一群人拉着行李箱离开，心里难免有些伤感。就好像本文题目里的歌词——一代人终将老去 但总有人正年轻。 但是说这么多，生活还是要积极乐观向上啊~","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"大学","slug":"大学","permalink":"http://mightyherox.me/tags/%E5%A4%A7%E5%AD%A6/"}]},{"title":"解锁HZU最佳学习方式","slug":"解锁HZU最佳学习方式","date":"2020-09-02T08:30:54.000Z","updated":"2020-09-02T08:30:54.000Z","comments":true,"path":"解锁HZU最佳学习方式/","link":"","permalink":"http://mightyherox.me/%E8%A7%A3%E9%94%81HZU%E6%9C%80%E4%BD%B3%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F/","excerpt":"","text":"缘起都说大学里要想认真学习就不要待在宿舍，因此多仔我从大二开始就经常泡图书馆了（大一忙着在部门跳舞）。可是咱是软件工程专业的学生，每次去图书馆都要带着15.6寸超重的游戏本，难免有些费力。而且图书馆的插座并不多，去晚了就找不到插座了。游戏本的续航能力实在是不敢恭维。因此从大二开始就在寻找最佳的学习方式。 探索方式一：使用图书馆提供的电脑HZU每层图书馆都有提供电脑给学生免费使用，但是供不应求。 优点：解决了电脑问题，而且网速贼快。 缺点：电脑大多装有还原软件，即那种关机就会把你的资料删除。因此每次开机都要重新安装自己所需的软件、拉取资料，很麻烦。就算重启后资料仍在，你也不能保证每次都占到那台电脑。更何况把资料留在公共场所很危险。 方式二：使用远程桌面Windows电脑都自带远程桌面功能，一般是专业版才有。但是大多数学生购买笔电都是附赠家庭教育版。此时你有两种方法，一升级成专业版；二破解家庭教育版的远程桌面功能。咱经济比较紧张，选择了第二种方法。具体如何破解请自行搜索，咱提供一个Win10（家庭版）内网穿透实现远程桌面访问 - 時雨的文章 - 知乎。 破解完成后咱是很开心的，第一时间在Ipad上下载RD Client来远程我的笔电，结果当然是成功了啦。可是去到图书馆后发现死活连不上宿舍的笔电，这就尴尬了。按理来讲，图书馆和宿舍的校园网都应该是同一局域网，可以互连才对，而且宿舍里Ipad和笔电所连接的校园网是在不同子网内都可以远程成功。折腾了好久都没有搞定，最后只能搞个内网穿透来远程了。具体做法也是参考前面提到的那篇文章Win10（家庭版）内网穿透实现远程桌面访问 - 時雨的文章 - 知乎。 为什么不提TeamViewer之流，因为没用过。但是班上许多同学都是用TeamViewer，反映延迟略大，而且容易误判你在商用。而且原生的Windows远程不香么？ 方式三：利用图书馆的提供的电脑使用远程桌面！！！最佳！！！前面提到咱已经实现了在图书馆用Ipad远程宿舍的笔电，但有个缺点就是Ipad的屏幕太小了！！！根本不够看啊。于是咱决定利用图书馆的提供的电脑使用远程桌面。惊喜的是，图书馆的电脑是Win7专业版，自带远程桌面（一开始咱还想着没有的话就帮它破解）。但是更惊喜的是直接进行远程桌面，不需要内网穿透也可以！！！牛逼！绝了！赶紧打开cmd查看这台电脑的IP。意外发现网络居然是无线连接的（之前一直以为是插网线的）。等等，无线……查看这个网络的属性，被我发现了图书馆馆内WIFI密码（前文提到的图书馆WIFI是指校园网，需要使用广东校园进行登录，太恶心了），果然知识就是力量啊。 当然这种方法也是有缺点滴，就是要早起占电脑~早起的虫儿有鸟吃啊。另外多数电脑都是在靠门口位置，略吵。东座尤甚，图书馆管理员们欢乐的笑声…… 另外在这台电脑桌面上看到一个Html文件，打开看到是一篇CSDN文章，介绍如何将Linux(Ubuntu)安装到U盘上，实现即插即用），估计也有人懒得带电脑，只不过这太极客了，不适合普通人。 总结懒惰推动进步，多仔真爱折腾~","categories":[{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"惠州学院","slug":"惠州学院","permalink":"http://mightyherox.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"HZU","slug":"HZU","permalink":"http://mightyherox.me/tags/HZU/"},{"name":"学习","slug":"学习","permalink":"http://mightyherox.me/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"远程桌面","slug":"远程桌面","permalink":"http://mightyherox.me/tags/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"},{"name":"Windows","slug":"Windows","permalink":"http://mightyherox.me/tags/Windows/"},{"name":"宿舍","slug":"宿舍","permalink":"http://mightyherox.me/tags/%E5%AE%BF%E8%88%8D/"},{"name":"图书馆","slug":"图书馆","permalink":"http://mightyherox.me/tags/%E5%9B%BE%E4%B9%A6%E9%A6%86/"}]},{"title":"如何在DigitalOcean创建你的第一台VPS","slug":"How-to-create-your-first-VPS-on-DigitalOcean","date":"2020-08-20T06:39:24.000Z","updated":"2020-08-20T06:39:24.000Z","comments":true,"path":"How-to-create-your-first-VPS-on-DigitalOcean/","link":"","permalink":"http://mightyherox.me/How-to-create-your-first-VPS-on-DigitalOcean/","excerpt":"","text":"在本文中，我将指导您完成在DigitalOcean上设置第一个Linux虚拟专用服务器（VPS）的过程。 DigitalOcean是最著名的VPS服务商之一。 DigitalOcean为最著名的应用程序和操作系统提供一键式安装过程，它提供了遍布全球的数据中心和CDN位置。最低消费仅需5美刀/月。 我认为DigitalOcean是最实惠且易于使用的解决方案之一，并且可以将其用于各种服务。 一、 创建一个DigitalOcean账号您可以使用链接获得$100的免费信用额，可在接下来的60天内使用。 免责声明：这是会员链接。 当您使用此链接进行注册时，您将获得100美元的DigitalOcean免费信用额，我将获得25美元的DigitalOcean免费信用额。 我会推荐DigitalOcean不仅仅是因为他们有会员计划。 恰恰相反，由于我经常使用它，所以如果我可以降低账单，我会抓住这个机会。当然，如果您是一名学生，我更建议您使用Github的学生包，它将提供您$50的免费信用额，时限一年。 进入网站后即可开始注册： 注册完成后不要忘记到您的邮箱进行确认。 接着您需要绑定您的信用卡或者Paypal： 二、创建一个项目一旦您注册完毕，就可以创建一个新的项目： 单击Create Project后，该项目现在已添加到您的项目列表中，并且项目仪表板如下所示： 这是您要对此项目进行任何操作的控制中心。 首先，这里有一个Get Started with a Droplet的蓝色大按钮。 什么是Droplet？DigitalOcean Droplet是一个虚拟机，即VPS。DigitalOcean上的所有内容都围绕Droplet展开。 通过此接口，我们还可以初始化托管数据库，创建空间（用于存储文件的位置）以及创建负载均衡器以在多个Droplet之间分配流量。 但是，暂时不需要管那么多，我们只需要创建一个Droplet即可。 创建一个Droplet单击Get Started with a Droplet按钮，将会显示一个包含很多选项的页面： 让我们从上面开始。 首先的选择镜像，这里我们可以选择一些Linux发行版（Ubuntu, Fedora, Debian and CentOS）和FreeBSD（另一个UNIX操作系统） 除了发行版，我们还有其他类别。 特别是通过Marketplace，只需单击一下，我们就可以安装预配置了WordPress，Ghost，LAMP服务器或150多个应用程序中的任何一个的服务器。 这是快速启动和运行任何项目的一种非常方便的方法。 快照，备份和自定义映像使您可以从已有的服务器创建服务器。 现在您已经知道在这里可以做的一切，让我们从Distributions面板中选择Ubuntu 20.04。 在Choose a plan中，您可以在“标准”计划（我们将使用的计划）或性能更高的“ CPU优化”或“内存优化”服务器之间进行选择。 这意味着服务器将花费更多。 这里我们选择“标准”里的$5/mo（按时计费$0.007/hour），即可。 接着我们选择数据中心区域，可以根据您所在位置和运营商来选择。不同的运营商对不同地方的线路优化不同，中国大陆用户建议使用新加坡地区的服务器。 接下来还有其他选项，您可以跳过，让我们选择登录VPS的验证方式： 选择“密码”可以简化操作，但是对于真实服务器，我建议使用SSH密钥身份验证（设置更复杂，但更安全）。 输入您要用于root用户（Linux系统管理员）的密码。 然后填写对您有意义的机器名： 最后，点击Create Droplet按钮，DigitalOcean将开始创建您的第一台VPS。 一旦创建完成，它将会显示VPS的公网IP地址： 单击机器名以显示Droplet仪表板： 在这里您可以控制任何东西。 您可以将其开机、关机等等。 请记住，Droplet关机并不会停止DigitalOcean计费：您必须销毁它才能停止计费。 三、连接您的第一台VPS连接的方法有许多，在Windows平台，您可以通过如Xshell、PuTTY。我常用的是Xshell，您只需在官网选择家庭/学校版，注册即可免费使用。 下载并安装完Xshell后双击运行会弹出会话框，点击新建，然后按右侧所示依次填入名称（自定义）、主机（您的公网IP）和端口号（默认是22）： 接着点击用户身份验证，右侧依次填入root（以超级管理员身份登陆）、密码（您创建时所设置的密码）： 然后点击连接，第一次连接会出现如下所示警告，选择接受并保存即可： 出现如图所示信息即表示您已连接成功！！！ 四、总结现在，您可以完全控制位于世界某个地方的数据中心中的计算机。 这不是很酷吗？ 这仅仅是个开始。 接下来我将会写一系列文章介绍VPS的一些用途，敬请期待！","categories":[{"name":"煮鸡","slug":"煮鸡","permalink":"http://mightyherox.me/categories/%E7%85%AE%E9%B8%A1/"}],"tags":[{"name":"VPS","slug":"VPS","permalink":"http://mightyherox.me/tags/VPS/"},{"name":"DigitalOcean","slug":"DigitalOcean","permalink":"http://mightyherox.me/tags/DigitalOcean/"},{"name":"Linux","slug":"Linux","permalink":"http://mightyherox.me/tags/Linux/"}]},{"title":"对惯性思维的生活观察","slug":"对惯性思维的生活观察","date":"2020-08-18T07:22:04.000Z","updated":"2020-08-18T07:22:04.000Z","comments":true,"path":"对惯性思维的生活观察/","link":"","permalink":"http://mightyherox.me/%E5%AF%B9%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4%E7%9A%84%E7%94%9F%E6%B4%BB%E8%A7%82%E5%AF%9F/","excerpt":"","text":"昨天家里一楼电视坏了，今天把二楼的电视搬下去给爷爷奶奶看。 一楼的电视平时都是爷爷奶奶在看，看的是有线数字电视。二楼的电视平时不怎么看，所以就搬下去一楼顶着先。爷爷奶奶让我播珠江台，但是我不会设置有线数字电视的信源，就让爷爷奶奶先看网络连接的电视剧好了。 按理来讲，网络电视的电视资源更丰富，而且我也播了爷爷奶奶喜欢看的抗日剧给他们了。但是他们看了没一会儿就关了。后来我成功设置了有线数字电视的信源后电视就一直在播放了。我推测原因是因为爷爷奶奶不适应网络电视的操作。有线数字电视使用遥控器选择频道就能播放了，但是网络电视是用遥控器控制菜单，对老人家确实有一定的难度。其次他们已经习惯了根据卫视的时间表跳台，XX台XX时间段播XX剧就跳转过去；但是网络电视却不是这种模式，你想看什么就看什么（但是播放前要先观看广告，这也会让老人家好感下降）。 前段日子我换了家里的路由器，WIFI也跟着换了，信号质量和速度都比以前好很多。但是没过几天我爸就让我换回原来的WIFI，因为家里的监控摄像头连接的是原来的WIFI。我说摄像头换个WIFI就好了，然后我爸又说这WIFI没用，一到卫生间就没信号（因为我帮他连接的是5G频道，速度快但是范围小，后面改成连接2.4G省事算了）。我爸把这些责任都推到新换的WIFI身上，新WIFI带来的改变是他难以接受的。 上述两个例子都反映出我家人对改变的抗拒，或者说是惯性思维。关于惯性思维，维基百科是如下介绍的： 惯性思维指人习惯性地因循以前的思路思考问题，仿佛物体运动的惯性。惯性思维常会造成思考事情时有些盲点，且缺少创新或改变的可能性。 未完待续……","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/tags/%E7%94%9F%E6%B4%BB/"},{"name":"惯性思维","slug":"惯性思维","permalink":"http://mightyherox.me/tags/%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4/"}]},{"title":"融入社会以及一些新发现","slug":"融入社会以及一些新发现","date":"2020-08-10T06:58:39.000Z","updated":"2020-08-10T06:58:39.000Z","comments":true,"path":"融入社会以及一些新发现/","link":"","permalink":"http://mightyherox.me/%E8%9E%8D%E5%85%A5%E7%A4%BE%E4%BC%9A%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E6%96%B0%E5%8F%91%E7%8E%B0/","excerpt":"","text":"王者荣耀我从高中开始就很少接触网游、手游，甚至上了大学后也仅限玩一些单机游戏。为什么会这样呢？应该是家庭环境影响了我。小时候家所在的地方比较偏僻，而且周围没什么同龄人。所以当小朋友们在网吧一起打拳皇、CF、地下城的时候，我甚至连电脑是什么样子的都不知道。一直到高中我的社交圈都很狭窄，因为我跟同龄人都没什么共同话题。 高考结束后我曾下载过王者荣耀，但是很快就删掉了。因为那个时候王者荣耀已经很火了，玩的人都已经很熟练了，我一个新手经常挂掉，导致经常被队友嘲讽。于是卸载了，毕竟很没有面子而且很没有成就感。上大学的时候王者荣耀就更火了，不止男生，连女生都开始玩。记得有一次出去聚餐，几个人打开了王者，当时暗恋的女生，感觉挺文静的，没想到也会打王者。让旁边的男生带她打排位。那时吃醋的心情…… 最近在家太无聊了，也学不下去，在舍友怂恿下下载了王者。玩了几天感觉还可以，毕竟有舍友带躺。而且认识的几个学妹（没怎么聊过天）看见我在玩，就问我怎么开始打王者了，还说要带我。 游戏这玩意，不能说它一定是坏的。有个学霸舍友经常在图书馆学习，回来宿舍后打两把地下城就休息。游戏可以给我们降低沟通成本，提供好友之间的话题。不能因为容易沉迷就一味地抗拒它。 抖音我妈在家吃完晚饭后习惯刷抖音，有段时间我经常听到同一BGM的声音，听起来像电视剧的片尾曲（别问我为什么听得出来）。然后我就问我妈是不是在看电视剧，她说是的。跟她说不要用手机屏幕看电视剧，对眼睛不好，用电视看。结果她看了几天后又开始在抖音上看了。 当时也没在意，前几天自己下载抖音后发现原来抖音还真能看电视剧，而且很容易沉迷用抖音看电视剧。 它是怎么做的呢？一些用户把一集电视剧里的精彩部分/重要部分剪辑成短视频。这个短视频虽然是缩水的，但是剧情上没太大影响，而且都是精彩片段，很容易吸引人。在看完一个后很想继续看下去。有时候用户没有剪辑完全部剧集，没关系，抖音的推荐算法会在你下一次打开抖音，而且刚好用户剪辑了新的短视频的时候推送给你。把你留在抖音。 这个操作我是真没想到，但是它却很有用。在这个快消时代，看一集电视剧可能要二十多分钟；在抖音，两三分钟就看完，并且不影响你对剧情的理解。这个过程就有点像它把吃过的东西吐出来给你吃，你还吃得很香。 另外抖音上有个叫川久保玲球的用户，她上传的视频都是和一些普通老百姓的合照，比如小卖铺老板、环卫工人等。她是做什么的？我看到她有在卖衣服，但是与常人不一样的是，她选择跟身边的普通人合照，也没有特意去拍衣服，仅仅只是合照。但是与常人不同，就代表她成功了一半了。如果她坚持下来，那她也离成功不远了。事实上，现在她的粉丝数和获赞数就已经很高了。 总结以前我有个误区，一直觉得在抖音、微博或者其他社交平台在做广告的用户都是不好的，在恰烂钱。但是前几天看当下频道出的一个讲小红书博主的视频的时候，被她的一个观点点醒了。她认为，自己做广告的同时是在降低观众获取新知识的门槛。可能一个五分钟的视频是她花费一个星期去策划，去提炼内容，让观众可以更容易地接受。同时做一条广告后要出四个无广告视频来维持用户粘性，这会要求她投入更多的精力去做好一个博主。 回到王者和抖音上，传统观点认为游戏或者社交平台会毁了我们的生活。主要原因是它们容易让我们沉迷，脱离现实生活。但是，对个人而言，你没有那么伟大。如果你改变不了时代发展的潮流，那你就去适应它。尤其是游戏和社交正慢慢变成“现实”。 油管上有关注一个用户GaryVee，他有做过一些视频，大意是讲年轻人应该去适应生活，要抓住机遇，不要视TikTok或者Instagram为洪水猛兽，要利用它们赚钱。我个人觉得这个想法是对的，不能抱着旧观念不放。而且我出来社会，我不赚钱，我出来干什么？一些视频可能会跟你说不忘初心，不要老想着钱。但是如果你连维持自己的生活需要都做不到，还谈什么改变世界。并且有钱后才能有更大的能力去做你想做的事情。","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"王者荣耀","slug":"王者荣耀","permalink":"http://mightyherox.me/tags/%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/"},{"name":"抖音","slug":"抖音","permalink":"http://mightyherox.me/tags/%E6%8A%96%E9%9F%B3/"},{"name":"社交","slug":"社交","permalink":"http://mightyherox.me/tags/%E7%A4%BE%E4%BA%A4/"}]},{"title":"height: 100%无效？","slug":"height-100-无效？","date":"2020-07-21T08:15:57.000Z","updated":"2020-07-21T08:15:57.000Z","comments":true,"path":"height-100-无效？/","link":"","permalink":"http://mightyherox.me/height-100-%E6%97%A0%E6%95%88%EF%BC%9F/","excerpt":"","text":"昨晚在做一个小demo时想要实现水平垂直都居中的效果，使用flex布局，CSS样式如下： 123456.container &#123; display: flex; flex-wrap: wrap; justify-content: center; align-items: center;&#125; 效果如下： 可以看到水平居中生效了，但垂直方向上并没有居中。google一番后发现可能是没有指定高度，遂加上height: 100%，结果还是不行。试着给出具体值，如height: 600px，发现确实有居中。因此一定是height: 100%有问题。 F12右键检查，发现父元素的高度跟container一样高，因此原因很可能是出在父元素身上。 google一番后发现原来浏览器默认的body和html高度是auto。因此需要使用如下代码进行指定： 123html, body &#123; height: 100%;&#125; 另外块元素的高度也需要设置或者由内容的高度来决定。 说起来，这个问题好像在大二刚接触前端的时候也有搜索过，看来不会的还是要多多记录下来，以后还可以回过头来看看自己踩过的坑","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"http://mightyherox.me/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"http://mightyherox.me/tags/HTML/"}]},{"title":"JavaScript、ES6、TypeScript之间的关系","slug":"JavaScript、ES6、TypeScript之间的关系","date":"2020-07-15T13:16:39.000Z","updated":"2020-07-15T13:16:39.000Z","comments":true,"path":"JavaScript、ES6、TypeScript之间的关系/","link":"","permalink":"http://mightyherox.me/JavaScript%E3%80%81ES6%E3%80%81TypeScript%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/","excerpt":"","text":"今天复习前端三剑客之JavaScript。 JavaScript和ES6JavaScript看了也挺多遍了，在学习过程中经常遇到ES6和TypeScript这些字眼。以前因为没接触过，所以不自觉地就觉得它们高深莫测，好像很难的样子。今天不知道看什么资料复习，找到了以前经常看的小马技术频道，里面刚好有讲ES6，遂把这个系列视频看了一遍。视频不算多，一共就23个视频，每个视频大概五六分钟时长。看完后发现ES6的一些语法其实我之前也有接触过、使用过，只不过当时并不知道而已。 那么ES6和JavaScript之间到底有什么关系呢？根据个人理解，ES6是一个规范，而JavaScript是具体实现。当然除了ES6还有其他版本ES，只不过目前ES6较为流行和普适。 JavaScript和TypeScript那么TypeScript又是什么呢？小马技术频道里也有一个TypeScript的系列视频，不过目前还没看完。根据维基百科的介绍： TypeScript是一种开源的编程语言，该语言项目由微软进行维护和管理。TypeScript不仅包含JavaScript的语法，而且还提供了静态类型检查以及使用看起来像基于类的面向对象编程语法操作Prototype。 大众说法说，TypeScript是JavaScript的超集。简单理解就是语法上合法的JavaScript，一定是合法的TypeScript。 如何使用TypeScript呢？在win10操作系统下，您可以通过npm install -g typescript进行安装，安装完成后使用tsc -v 进行检查，若出现版本号则表示安装成功。 编写一个以ts为后缀的文件，接着使用tsc $&#123;fileName&#125;.ts进行编译，编译成功后就可以看到多出来一个$&#123;fileName&#125;.js文件，直接运行node $&#123;fileName&#125;.js即可。 另外，学习JavaScript过程中也经常遇到Babel这个名词，通俗理解，Babel解决并不是所有浏览器都支持高版本JavaScript的问题。它可以将高版本JavaScript转变为低版本。","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://mightyherox.me/tags/JavaScript/"},{"name":"ES6","slug":"ES6","permalink":"http://mightyherox.me/tags/ES6/"},{"name":"TypeScript","slug":"TypeScript","permalink":"http://mightyherox.me/tags/TypeScript/"},{"name":"Babel","slug":"Babel","permalink":"http://mightyherox.me/tags/Babel/"}]},{"title":"人生苦短，及时行乐","slug":"人生苦短，及时行乐","date":"2020-07-13T06:15:26.000Z","updated":"2020-07-13T06:15:26.000Z","comments":true,"path":"人生苦短，及时行乐/","link":"","permalink":"http://mightyherox.me/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD%EF%BC%8C%E5%8F%8A%E6%97%B6%E8%A1%8C%E4%B9%90/","excerpt":"","text":"最近情绪不太稳定，有时候是积极的，有时候是消极的。还经常回忆过去，想着当时应该怎么怎么做才对。可惜呀~人生苦短，过去的事情无法改变了。而未来，似乎也没剩下多少时间。随着年龄的增长越来越觉得时间短暂了。也因为如此时常变得焦虑，总觉得要做的事情有很多，但是又不想去做，就这么拖着。 不应该这样吧？我应该变成一个积极乐观向上的人才对。 也可能是因为我所接触的人都没什么朝气？应该是有这部分影响的。昨天看油管上看了一个台湾油管主的视频感觉特别有活力啊。其实上学期教我们软件工程课程的台湾老师也很有活力，虽然看上去有50左右了吧，心态却跟20岁差不多。国外看到的很多视频主都很有活力，国内看到的大部分都很拘谨，虽然也有笑容，但看不出他们有活力，感觉被什么东西压着。 一直觉得互联网应该让人们变得更开放、更包容。但是国内互联网却把人极端化、偏见化，非黑即白。虽然生活中大部分人都是灰色的，但是一到网上，大家就不自觉地开始站队，要么支持这个，要么支持那个。 对了，傍晚约了个师妹拍照。好久没拍照了，拍照应该是我在大学做的最开心的事情了，可以预见许多人，可以收到许多人的赞美，可以改变自己的生活，这是一件正确而快乐的事情。 我要成为什么样的人呢？成为多度橙吧，做很多快乐的事情。","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/tags/%E7%94%9F%E6%B4%BB/"},{"name":"碎碎念","slug":"碎碎念","permalink":"http://mightyherox.me/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"Bilibili评论转图片神器开发日志-CSS Variables使用","slug":"Bilibili评论转图片神器开发日志-CSS-Variables使用","date":"2020-07-12T02:43:09.000Z","updated":"2020-07-12T02:43:09.000Z","comments":true,"path":"Bilibili评论转图片神器开发日志-CSS-Variables使用/","link":"","permalink":"http://mightyherox.me/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-CSS-Variables%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 在开发评论模块过程中想要实现按键切换修改评论背景和文字颜色的功能，代码如下： 1234567891011&lt;div class=&quot;d-flex flex-wrap align-items-start justify-content-center&quot;&gt; &lt;div class=&quot;comment&quot; v-for=&quot;item in comments&quot; ref=&quot;comment&quot; :class=&quot;&#123; &#x27;comment-dark&#x27;: darkTheme &#125;&quot; :style=&quot;&#123; &#x27;border-radius&#x27;: borderRadius + &#x27;px&#x27; &#125;&quot;&gt; &lt;img class=&quot;author-thumbnail&quot; :src=&quot;item.member.avatar&quot; alt=&quot;&quot; /&gt; &lt;div class=&quot;comment-main&quot;&gt; &lt;div class=&quot;user-name&quot;&gt;&#123;&#123; item.member.uname &#125;&#125;&lt;/div&gt; &lt;div class=&quot;content&quot; v-html=&quot;item.content.message&quot;&gt;&lt;/div&gt; &lt;div class=&quot;published-time&quot; v-if=&quot;displayTime&quot;&gt;&#123;&#123; timestampFormat(item.ctime) &#125;&#125;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 1234567891011121314151617181920212223242526272829303132333435363738394041424344.comment &#123; background-color: #f9f9f9; display: flex; border-radius: 10px; margin: 4px; padding: 16px; width: 360px;&#125;.comment .author-thumbnail &#123; border-radius: 50%; flex-shrink: 0; height: 40px; margin-right: 16px; width: 40px;&#125;.comment .comment-main .user-name&#123; color: #222; display: inline-block; font-size: 12px; font-weight: 700; line-height: 18px; display: block;&#125;.comment .comment-main .content &#123; color: #222; line-height: 20px; padding: 2px 0; font-size: 14px; overflow: hidden;&#125;.comment .comment-main .published-time &#123; color: #aaa; line-height: 26px; font-size: 12px;&#125;.comment-dark&#123; background-color: #181818; color: #fff;&#125; 使用的是Vue，当darkTheme为true时，显示comment-dark样式，利用CSS层叠性覆盖前面comment设定的背景和文字颜色。但是实际过程中遇到了CSS权重问题，只能修改背景颜色而无法修改文字颜色。 google后发现有CSS Variables这么个东西，它的主要特点和用法是： 可以继承 以--开头来命名/定义变量（区分大小写） 用var()来读取变量值 这样的话，我只需要进行如下修改即可完成想要的效果： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748.comment &#123; --bi-spec-general-background: #f9f9f9; --bi-spec-text-primary: #222; --bi-spec-text-secondary: #aaa; background-color: var(--bi-spec-general-background); display: flex; border-radius: 10px; margin: 4px; padding: 16px; width: 360px;&#125;.comment-dark&#123; --bi-spec-general-background: #181818; --bi-spec-text-primary: #fff; --bi-spec-text-secondary: #aaa;&#125;.comment .author-thumbnail &#123; border-radius: 50%; flex-shrink: 0; height: 40px; margin-right: 16px; width: 40px;&#125;.comment .comment-main .user-name&#123; color: var(--bi-spec-text-primary); display: inline-block; font-size: 12px; font-weight: 700; line-height: 18px; display: block;&#125;.comment .comment-main .content &#123; color: var(--bi-spec-text-primary); line-height: 20px; padding: 2px 0; font-size: 14px; overflow: hidden;&#125;.comment .comment-main .published-time &#123; color: var(--bi-spec-text-secondary); line-height: 26px; font-size: 12px;&#125; 参考： 30 天 CSS 隨手筆記 - 第 12 天 - CSS Variables~!!","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://mightyherox.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://mightyherox.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://mightyherox.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CSS","slug":"CSS","permalink":"http://mightyherox.me/tags/CSS/"}]},{"title":"Bilibili评论转图片神器开发日志-JSZip使用","slug":"Bilibili评论转图片神器开发日志-JSZip使用","date":"2020-07-11T15:11:13.000Z","updated":"2020-07-11T15:11:13.000Z","comments":true,"path":"Bilibili评论转图片神器开发日志-JSZip使用/","link":"","permalink":"http://mightyherox.me/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-JSZip%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 开发这个工具的思路是使用html2canvas将获取到的评论转成PNG图片，再通过JSZip打包下载。 JSZip使用起来挺方便的，官网也有示例。在开发过程中遇到的一个问题是想要获取文件压缩打包的进度，我在中文搜索环境下找不到相关内容，不过在JSZip的github issues中找到了相关记录。 代码如下： 12345678910for(var a&#x3D;0; a &lt; name.length; a++) &#123; zip.file(&quot;DXFs&#x2F;&quot; + name[a] + &quot;.dxf&quot;, toDXF(shape));&#125;zip.generateAsync(&#123;type: &quot;blob&quot;, streamFiles: true&#125;, function updateCallback(metadata) &#123; element.style.width &#x3D; metadata.percent + &#39;%&#39;;&#125;).then(function (blob) &#123; saveAs(blob, &quot;Files.zip&quot;);&#125;);","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://mightyherox.me/tags/Bilibili/"},{"name":"JSZip","slug":"JSZip","permalink":"http://mightyherox.me/tags/JSZip/"},{"name":"Front-end","slug":"Front-end","permalink":"http://mightyherox.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://mightyherox.me/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"Bilibili评论转图片神器开发日志-html2canvas使用","slug":"Bilibili评论转图片神器开发日志-html2canvas使用","date":"2020-07-11T13:05:39.000Z","updated":"2020-07-11T13:05:39.000Z","comments":true,"path":"Bilibili评论转图片神器开发日志-html2canvas使用/","link":"","permalink":"http://mightyherox.me/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-html2canvas%E4%BD%BF%E7%94%A8/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 开发这个工具的思路是使用html2canvas将获取到的评论转成PNG图片，再通过JSZip打包下载。 html2canvas这个工具的使用挺简单的，官网也有示例。 以下记录自己遇到的一些问题： 图片空白？我使用的是Vue，推测原因是DOM还没渲染完，html2canvas就开始转图片了。解决方法是使用nextTick，等DOM渲染完了再转图片。 在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进Vue.nextTick()的回调函数中。与之对应的就是mounted()钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，此时在该钩子函数中进行任何DOM操作都不会有问题 。简单理解Vue中的nextTick 2020年7月30日 更新 昨天把nextTick去掉未发现空白问题，估计当时是由于别的原因造成的，现在无法重现问题。 canvas中含有跨域图片，图片不显示？html2canvas默认不显示跨域图片，需要在配置中开启 1234&#x2F;&#x2F; 允许跨域（图片相关）allowTaint: true,&#x2F;&#x2F; 允许跨域（图片相关）useCORS: true, 窗口有滚动，图片显示有偏差？需要计算绘制元素的位置，具体代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647this.$nextTick(() &#x3D;&gt; &#123; setTimeout(() &#x3D;&gt; &#123; &#x2F;&#x2F; 获取需要绘制的元素 let comments &#x3D; this.$refs.comment; for (let i &#x3D; 0; i &lt; comments.length; i++) &#123; &#x2F;&#x2F; 评论内容做图片名 let imgName &#x3D; comments[i].innerText.split(&quot;\\n&quot;)[1]; &#x2F;&#x2F; 返回元素的大小及其相对于视口的位置 let rect &#x3D; comments[i].getBoundingClientRect(); &#x2F;&#x2F; 不知为何rect.x返回的坐标不准确，需要加上8.5才行 rect.x +&#x3D; 8.5; &#x2F;&#x2F; 获取滚动轴滚动的长度 let scrollTop &#x3D; document.documentElement.scrollTop || document.body.scrollTop &#x2F;&#x2F; 获取dom 宽度 let width &#x3D; comments[i].offsetWidth &#x2F;&#x2F; 获取dom 高度 let height &#x3D; comments[i].offsetHeight html2canvas(comments[i], &#123; &#x2F;&#x2F; 允许跨域（图片相关） allowTaint: true, &#x2F;&#x2F; 允许跨域（图片相关） useCORS: true, &#x2F;&#x2F; 截图的背景颜色 backgroundColor: &#39;transparent&#39;, &#x2F;&#x2F; 图片x轴偏移量 x: rect.x, &#x2F;&#x2F; 图片宽度 width: width, &#x2F;&#x2F; 图片高度 height: height, &#x2F;&#x2F; y轴滚动 scrollY: -scrollTop, &#x2F;&#x2F; 放大2倍 scale: 2, &#x2F;&#x2F; 关闭日志 logging: false, &#125;).then(canvas &#x3D;&gt; &#123; &#x2F;&#x2F; JSZip模块中的base64.js会对文件格式进行检测，所以我们需要将之前canvas.toDataURL()得到的data去除前缀imgData &#x3D; imgData.split(&quot;data:image&#x2F;png;base64,&quot;)[1];。 let imgData &#x3D; canvas.toDataURL().split(&#39;data:image&#x2F;png;base64,&#39;)[1]; &#x2F;&#x2F;这个images文件目录中创建一个base64数据为imgData的图像，图像名是上面获取的imaName img.file(imgName + &#39;.png&#39;, imgData, &#123; base64: true &#125;); that.done1 +&#x3D; 1; console.log(&quot;添加图片&quot; + i); &#125;); &#125;; &#125;, 1000);&#125;);","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://mightyherox.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://mightyherox.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://mightyherox.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"html2canvas","slug":"html2canvas","permalink":"http://mightyherox.me/tags/html2canvas/"},{"name":"Vue","slug":"Vue","permalink":"http://mightyherox.me/tags/Vue/"},{"name":"跨域","slug":"跨域","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%9F%9F/"}]},{"title":"Bilibili评论转图片神器开发日志-解决跨域问题","slug":"Bilibili评论转图片神器开发日志-解决跨域问题","date":"2020-07-11T06:23:56.000Z","updated":"2020-07-11T06:23:56.000Z","comments":true,"path":"Bilibili评论转图片神器开发日志-解决跨域问题/","link":"","permalink":"http://mightyherox.me/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/","excerpt":"","text":"最近在开发Bilibili评论转图片神器，功能是将Bilibili视频评论区的评论转换成PNG图片。 本来打算是做一个纯前端，通过B站API（热心网友整理的API）获取数据即可。但是实际开发过程中遇到了跨域问题。 关于跨域问题的解决，网上有许多解决方案，比如jsonp。 原本以为使用jsonp后，就可以开开心心的从B站获取数据了。但悲剧又来了，B站API返回的是json格式，jsonp要求返回jsonp格式。 上图显示，我虽然获得了数据，但是浏览器说这个是json数据，不是jsonp数据，所以我把它拦截下来了。晕，就是说我收到了这个数据，但是浏览器把它拦在了门口不进来。 网上找到大多数解决方案是不用jsonp，而是cross。但是应用场景是自家api，修改服务端就可以了。B站又不是我家开的，改不了它的服务端呀。于是选择一个折中的办法——自己写一个后端API，用API去取数据。 之前学过一点node.js，这次就使用node.js来处理。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&#x2F;&#x2F; express, httpconst express &#x3D; require(&#39;express&#39;);const app &#x3D; express();&#x2F;&#x2F; requestconst request &#x3D; require(&#39;request&#39;);&#x2F;&#x2F; body parserconst bodyParser &#x3D; require(&#39;body-parser&#39;);app.use(bodyParser.urlencoded(&#123; extended: false &#125;));&#x2F;&#x2F; portconst PORT &#x3D; 8089;app.listen(PORT);&#x2F;&#x2F; cross domain configapp.all(&#39;&#x2F;api&#x2F;v1&#39;, (req, res, next) &#x3D;&gt; &#123; res.header(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;); res.header(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With&#39;); next();&#125;);app.get(&#39;&#x2F;api&#x2F;v1&#x2F;bv2av&#39;, (req, res, next) &#x3D;&gt; &#123; &#x2F;&#x2F; 白名單 if (!req.get(&#39;Origin&#39;)) return; res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;); res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;); res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;); request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;web-interface&#x2F;view?bvid&#x3D;&#39; + req.query.bvid, function (error, response, body) &#123; if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123; res.send(body) &#125; &#125;);&#125;);app.get(&#39;&#x2F;api&#x2F;v1&#x2F;comments&#39;, (req, res, next) &#x3D;&gt; &#123; &#x2F;&#x2F; 白名單 if (!req.get(&#39;Origin&#39;)) return; res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;); res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;); res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;); request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;reply?type&#x3D;1&amp;oid&#x3D;&#39; + req.query.oid + &#39;&amp;sort&#x3D;&#39; + req.query.sort + &#39;&amp;pn&#x3D;&#39; + req.query.pn + &#39;&amp;ps&#x3D;&#39; + req.query.ps + &#39;&amp;nohot&#x3D;1&#39;, function (error, response, body) &#123; if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123; res.send(body) &#125; &#125;);&#125;); 这样，前端只需要向我写的node.js端发起请求即可获取数据。 另外还有一个小问题，用户头像的图片无法显示出来，但是手动访问链接后再刷新又可以显示了。如下图： google一番后发现是因为服务器设置了图片防盗链的原因，解决方法很简单，在head加上一行代码即可： 1&lt;meta name&#x3D;&quot;referrer&quot; content&#x3D;&quot;no-referrer&quot;&#x2F;&gt; 参考： 接氣象局api、跨網域ajax資料 秒建一个 json 转 jsonp 的中间层服务器 JSONP跨域详解 对B站各种数据进行抓包分析 bilibili-API-collect","categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"Bilibili","slug":"Bilibili","permalink":"http://mightyherox.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://mightyherox.me/tags/Front-end/"},{"name":"前端","slug":"前端","permalink":"http://mightyherox.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"跨域","slug":"跨域","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%9F%9F/"},{"name":"Nodejs","slug":"Nodejs","permalink":"http://mightyherox.me/tags/Nodejs/"},{"name":"防盗链","slug":"防盗链","permalink":"http://mightyherox.me/tags/%E9%98%B2%E7%9B%97%E9%93%BE/"}]},{"title":"观看《隐姓亿万富翁》的收获","slug":"隐姓亿万富翁","date":"2020-06-19T16:12:09.000Z","updated":"2020-06-19T16:12:09.000Z","comments":true,"path":"隐姓亿万富翁/","link":"","permalink":"http://mightyherox.me/%E9%9A%90%E5%A7%93%E4%BA%BF%E4%B8%87%E5%AF%8C%E7%BF%81/","excerpt":"","text":"最近在看一个节目《隐姓亿万富翁》，讲述的是亿万富翁Glenn Stearns只带着一百美元、一辆皮卡挑战在一个陌生城市90天内白手起家的故事。 Glenn的创业过程大概是先解决温饱问题，招募团队，获取启动资金，寻找发展方向，火力全开。不过这些并不是线性的，很多时候是并行发生的。 Glenn这次创业其实并不是真正的“白手起家”，他作为亿万富翁，本身的经验就是他最大的财富了，所以他能看到别人看不到的点。但是，一个人的力量是有限的，一个优秀的团队是必要的。节目也是主要围绕他的团队来讲述。从他的团队中我们可以看到需要值得注意的地方。 首先是团队中的每个人都得为彼此负责。在肋排节中主厨克里斯汀多次让货物供不应求，同时筹备期间她只会打包票，不跟别人说如何执行，只是让别人信任她。出错了不去寻找自身的错误，只会找借口把责任推给别人的人。很多次出现问题了，她没有想办法去解决，只是去抱怨。在节目中也可以看到，她作为主厨，但跟其他人的联系并不是特别深厚，更多的是在单打独斗。这样的人，尽管她付出也很多，但终究还是难以担负重任，最后也是和Glenn不欢而散。 另外，如果你加入了这个团队，你就得主动为这个团队做贡献。Glenn的团队元老最后基本上都获得了2万美元的回报，除了克里斯是5千美元。克里斯这个人怎么说呢？从外表看上去，他是个普通的职员，看不到激情。事实上，他作为团队元老加入后，做的事情并不多，很多时候都看不见他的人影。他的思维应该还停留在职员思维上，等着领导安排事情，做完就算了。 赚钱的本质是中间商赚差价。创业过程中，Glenn为了获取创业资本和满足温饱，多次倒卖二手车、房地产。总结一句话就是低价买入，高价卖出。要完成这个过程，就要学会掌握信息差和加工。举个例子，公司雇佣你并支付你薪水是因为你的工作只值这么多吗？肯定不是的，一定是因为你做出来的成果比支付你的薪水还要高才能继续维持这种雇佣关系。公司把你的工作成果卖出去，从中获利。那为什么大多数人不选择自己给自己打工，把中间商的环节也赚了。因为大多数人都没有那个信息差。比如说程序员，大多数程序员的交际圈比较窄，同时也不擅长与他人打交道。你让他去谈生意与让老板去谈生意结果相差很大的。另一个例子，为什么那么多字幕组或者在国外生活的留学生回国做自媒体？因为他们做给外国人看没价值啊。但是做给国人看就不一样了。大多数国人听不懂外语，对国外生活不了解。前期吸一波粉之后就可以开始割韭菜了（当然也有不少用爱发电的字幕组）。 专业的事让专业的人去做。Glenn在稳定生计后立马开始组建自己的团队，寻找专业的人才。比如倒卖二手房的时候找来当地比较出名的道恩来负责翻新，期间房子发霉了还花了一笔大钱请专业公司来清理。这跟前面的中间商赚差价差不多。你不可能把全部的钱都赚了，首先你做不到，其次成本太高。比如房子发霉了自己来清理，你要去学习如何清理，你还要购买工具，甚至你最后可能清理得不干净，卖房的时候被发现直接白干了。学海无涯而生有涯，不要想着事事都能兼顾得来。 最后说说Glenn吧，他在90天挑战中始终保持着激情和主动。面对挫折，没有沉溺在痛苦中，而是很快就想办法去解决它。作为团队的领导者，他要为团队的成员安排合适的工作，并不断推动他们往前。最重要的还是行动！行动起来！用尽全力去完成！ 这里是Glenn所创建的UNDERDOG BBQ官网以及他们的故事。","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"创业","slug":"创业","permalink":"http://mightyherox.me/tags/%E5%88%9B%E4%B8%9A/"},{"name":"团队","slug":"团队","permalink":"http://mightyherox.me/tags/%E5%9B%A2%E9%98%9F/"},{"name":"励志","slug":"励志","permalink":"http://mightyherox.me/tags/%E5%8A%B1%E5%BF%97/"}]},{"title":"超学习-面向项目学习以及学会寻找学习资源","slug":"超学习-面向项目学习以及学会寻找学习资源","date":"2020-05-22T14:41:02.000Z","updated":"2020-05-22T14:41:02.000Z","comments":true,"path":"超学习-面向项目学习以及学会寻找学习资源/","link":"","permalink":"http://mightyherox.me/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%BC%9A%E5%AF%BB%E6%89%BE%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/","excerpt":"","text":"面向项目学习最近主要在给软件开发综合训练的课设写前端页面。这是一个小组项目，后端有两位大佬负责，前端由我和另一个同学负责。不过我和另一个同学对前端都不是很熟悉，第一次接触原项目的开发者使用的freemarker模板引擎。虽然不熟，但也只能硬上了。也正因为有压力在，所以很快就上手了freemarker。难点是从后端拿数据，后端同学和原作者返回数据的格式和方式不同。如果直接用后端同学的接口，那么前端很多页面都不能复用原作者的，工作量有点大。但是后端同学又不愿意改（大佬就是大佬~）。只能自己改后端了。疯狂面向搜索编程总算搞定了。也因此对后端有了进一步的认识。 这几天的学习成果，如果没有项目驱动的话，我估计要学很久，而且很有可能是从0开始学习。但是项目开发不会给你那么多时间，你只能挑着学、跳着学以便尽快上线。这种学习方式可以让你了解到真实项目开发中所需的技术，很多时候，只要你会CRUD就能搞定一个项目了。 学会寻找学习资源今天做计网实验数据包分析居然做了一天！！！比较浪费时间的地方在于验证UDP检验和。这部分知识我还没学到，但是老师有给实验参考，我就照着参考来做了。坑爹的是，老师给的参考前后数据不一致，比如前面IP数据报给的源地址、目的地址与计算检验和时用到的不一样。还有数据部分看截图不止7个字节，但是验证的时候却只计算了7个字节。因为一开始不懂，我还纠结了很久，最后决定还是google一番，果然，被参考坑了。 其实被坑的次数也不少了。比如之前学高数，教材一开始还能看得懂，后面开始云里雾里。搞得我都开始怀疑人生了。后来去B站找了个视频，忘记哪个频道了，但是别人讲的方式一下子让我明了，知道了为什么会是这样。这也让我开始养成学习新知识之前，先去寻找哪些资源比较好。讲真，国内大部分教材都很生硬，感觉就是为了让人学不下去的XD。尤其是计算机专业，很多时候你看中文教材看不懂的时候，看看英文教材就知道是怎么回事了。","categories":[{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/tags/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}]},{"title":"超学习-学会抽象","slug":"超学习-学会抽象","date":"2020-05-15T02:25:57.000Z","updated":"2020-05-15T02:25:57.000Z","comments":true,"path":"超学习-学会抽象/","link":"","permalink":"http://mightyherox.me/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%BC%9A%E6%8A%BD%E8%B1%A1/","excerpt":"","text":"大二有段时间在看Crash Course的计算机科学速成课，这系列的内容都很有趣，易于消化。印象深刻的一个细节是主持人Carrie Anne经常会让我们进入一个抽象的层面去理解新概念。 什么是抽象？ 抽象这个词听起来就很抽象。个人看法是把某个功能封装起来，不要考虑它内部细节，而是着重于外部展示出来的效果。打个比方就是家里每天都在使用的电饭煲，你了解它工作的时候内部是怎么运行的吗？我相信大部分人肯定都不了解，但是我们都会使用它去做出美味的饭。 学习也是一样的道理，大部分人的学习方法是从第一章开始看，一路看下去的线性的学习方法。这种方法很容易让人觉得枯燥，看着看着就看不下去了。而且很多时候我们都会遇到这么一种情况，一开始遇到某个概念难以理解，只能带着疑问往后学习。但是学到后面再回过头来看的时候就会发现原来它是那么简单。 所以在学习上我比较习惯“不求甚解”，遇到较难理解的概念，如果没必要深究下去，我会把它进行抽象。等到下次要用到这个概念的时候我只需要考虑它对外的效果即可。 总结，很多知识并不需要我们深入学习，会用就行了。用庄子的说就是“吾生也有涯，而知也无涯。以有涯随无涯，殆已！” By the way，开头提到的计算机科学速成课很不错，值得一看。","categories":[{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/tags/%E8%B6%85%E5%AD%A6%E4%B9%A0/"}]},{"title":"惠院学子如何申请学生邮箱","slug":"惠院学子如何申请学生邮箱","date":"2020-05-14T10:37:52.000Z","updated":"2020-05-14T10:37:52.000Z","comments":true,"path":"惠院学子如何申请学生邮箱/","link":"","permalink":"http://mightyherox.me/%E6%83%A0%E9%99%A2%E5%AD%A6%E5%AD%90%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1/","excerpt":"","text":"利用学生身份我们可以享受到许多学生优惠权益，这里面有很多实用资源，详情可以看这个链接 要申请学生优惠权益最常见的途径就是学生邮箱了，但是很多人不知道我们惠院的学生邮箱要怎么申请，所以接下来我将介绍如何申请惠院的学生邮箱。 首先登陆惠州学院网上办事大厅，然后在上方搜索框搜索惠州学院学生邮箱申请： 点击惠州学院学生邮箱申请即可进入邮箱申请页面，按照要求填写即可： 邮箱申请似乎是电脑审核的，一般过了24小时后就可以打开惠院学生邮箱网址，登陆你的账号（应该还要激活，这个我忘了要不要）使用啦~ 好好珍惜学生时光呀~","categories":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"惠州学院","slug":"惠州学院","permalink":"http://mightyherox.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"学生","slug":"学生","permalink":"http://mightyherox.me/tags/%E5%AD%A6%E7%94%9F/"}]},{"title":"关于HZUCS_Course","slug":"关于HZUCS-Course","date":"2020-05-14T02:43:52.000Z","updated":"2020-05-14T02:43:52.000Z","comments":true,"path":"关于HZUCS-Course/","link":"","permalink":"http://mightyherox.me/%E5%85%B3%E4%BA%8EHZUCS-Course/","excerpt":"","text":"github上新开了一个仓库，主要用来分享一些课程资料、作业等学生原创内容。 缘由：一、前段时间电脑坏了，虽然之前有备份部分资料到移动硬盘，但很不幸移动硬盘落在学校了。所以这学期的一些资料都丢失了，幸运地是也有部分资料被我上传到github上了（数据备份的重要性T_T）。二、个人觉得，学习这件事情，虽然强调独立思考，但有人指点一下或许会走得更快更远。另，大部分人遇到问题就去百度，搜出一大堆乱七八糟的答案。这是不对的，有能力请尽量使用google。 所以在github上开了这个仓库，既可以与大家互相交流学习，也可以为师弟师妹们指点迷津。最重要的是开源精神，参与一个项目并能影响他人的成就感是很棒的！","categories":[],"tags":[{"name":"惠州学院","slug":"惠州学院","permalink":"http://mightyherox.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"github","slug":"github","permalink":"http://mightyherox.me/tags/github/"},{"name":"CS","slug":"CS","permalink":"http://mightyherox.me/tags/CS/"},{"name":"开源","slug":"开源","permalink":"http://mightyherox.me/tags/%E5%BC%80%E6%BA%90/"}]},{"title":"回归Hexo","slug":"回归Hexo","date":"2020-05-11T13:32:54.000Z","updated":"2020-05-11T13:32:54.000Z","comments":true,"path":"回归Hexo/","link":"","permalink":"http://mightyherox.me/%E5%9B%9E%E5%BD%92Hexo/","excerpt":"","text":"技术是为人服务的为什么说回归Hexo？其实早在大二就已经搭建过网站，一开始用的是WordPress，后来嫌弃太臃肿，改投Hexo的怀抱。期间写了一些小文章，也折腾了几次把Hexo部署到个人服务器上。接着学习了Vue，了解到Vuepress，又开始萌生转换到Vuepress的想法。但是自己对Vuepress并不是特别熟悉，也没有太多时间去学习，折腾了一半就不了了之了。 现在回过头来发现初衷仅仅是为了有个地方给我写写文章，文章倒没写多少，技术却学得乱七八糟。何必折腾来折腾去呢？对于Hexo，使用的时间是最长的，也是最熟悉的。所以现在要回归Hexo，先把写作坚持下来再说，就这样。","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/tags/%E7%94%9F%E6%B4%BB/"}]}],"categories":[{"name":"编程","slug":"编程","permalink":"http://mightyherox.me/categories/%E7%BC%96%E7%A8%8B/"},{"name":"观影","slug":"观影","permalink":"http://mightyherox.me/categories/%E8%A7%82%E5%BD%B1/"},{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/categories/%E7%94%9F%E6%B4%BB/"},{"name":"其它","slug":"其它","permalink":"http://mightyherox.me/categories/%E5%85%B6%E5%AE%83/"},{"name":"数码","slug":"数码","permalink":"http://mightyherox.me/categories/%E6%95%B0%E7%A0%81/"},{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/categories/%E8%B6%85%E5%AD%A6%E4%B9%A0/"},{"name":"煮鸡","slug":"煮鸡","permalink":"http://mightyherox.me/categories/%E7%85%AE%E9%B8%A1/"}],"tags":[{"name":"Nodejs","slug":"Nodejs","permalink":"http://mightyherox.me/tags/Nodejs/"},{"name":"npm","slug":"npm","permalink":"http://mightyherox.me/tags/npm/"},{"name":"proxy","slug":"proxy","permalink":"http://mightyherox.me/tags/proxy/"},{"name":"Linux","slug":"Linux","permalink":"http://mightyherox.me/tags/Linux/"},{"name":"CLI","slug":"CLI","permalink":"http://mightyherox.me/tags/CLI/"},{"name":"Winodws","slug":"Winodws","permalink":"http://mightyherox.me/tags/Winodws/"},{"name":"Bug","slug":"Bug","permalink":"http://mightyherox.me/tags/Bug/"},{"name":"人生七年","slug":"人生七年","permalink":"http://mightyherox.me/tags/%E4%BA%BA%E7%94%9F%E4%B8%83%E5%B9%B4/"},{"name":"7 up","slug":"7-up","permalink":"http://mightyherox.me/tags/7-up/"},{"name":"纪录片","slug":"纪录片","permalink":"http://mightyherox.me/tags/%E7%BA%AA%E5%BD%95%E7%89%87/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://mightyherox.me/tags/JavaScript/"},{"name":"Web API","slug":"Web-API","permalink":"http://mightyherox.me/tags/Web-API/"},{"name":"Literals","slug":"Literals","permalink":"http://mightyherox.me/tags/Literals/"},{"name":"字面量","slug":"字面量","permalink":"http://mightyherox.me/tags/%E5%AD%97%E9%9D%A2%E9%87%8F/"},{"name":"社交","slug":"社交","permalink":"http://mightyherox.me/tags/%E7%A4%BE%E4%BA%A4/"},{"name":"随想","slug":"随想","permalink":"http://mightyherox.me/tags/%E9%9A%8F%E6%83%B3/"},{"name":"同辈压力","slug":"同辈压力","permalink":"http://mightyherox.me/tags/%E5%90%8C%E8%BE%88%E5%8E%8B%E5%8A%9B/"},{"name":"Sci-hub","slug":"Sci-hub","permalink":"http://mightyherox.me/tags/Sci-hub/"},{"name":"JSTOR","slug":"JSTOR","permalink":"http://mightyherox.me/tags/JSTOR/"},{"name":"英文文献","slug":"英文文献","permalink":"http://mightyherox.me/tags/%E8%8B%B1%E6%96%87%E6%96%87%E7%8C%AE/"},{"name":"pip","slug":"pip","permalink":"http://mightyherox.me/tags/pip/"},{"name":"Python","slug":"Python","permalink":"http://mightyherox.me/tags/Python/"},{"name":"浏览器","slug":"浏览器","permalink":"http://mightyherox.me/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"code-server","slug":"code-server","permalink":"http://mightyherox.me/tags/code-server/"},{"name":"VS Code","slug":"VS-Code","permalink":"http://mightyherox.me/tags/VS-Code/"},{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://mightyherox.me/tags/Ubuntu/"},{"name":"Caddy","slug":"Caddy","permalink":"http://mightyherox.me/tags/Caddy/"},{"name":"云端","slug":"云端","permalink":"http://mightyherox.me/tags/%E4%BA%91%E7%AB%AF/"},{"name":"服务器","slug":"服务器","permalink":"http://mightyherox.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"MySQL","slug":"MySQL","permalink":"http://mightyherox.me/tags/MySQL/"},{"name":"Java","slug":"Java","permalink":"http://mightyherox.me/tags/Java/"},{"name":"进程","slug":"进程","permalink":"http://mightyherox.me/tags/%E8%BF%9B%E7%A8%8B/"},{"name":"微信小程序","slug":"微信小程序","permalink":"http://mightyherox.me/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"},{"name":"云函数","slug":"云函数","permalink":"http://mightyherox.me/tags/%E4%BA%91%E5%87%BD%E6%95%B0/"},{"name":"云开发","slug":"云开发","permalink":"http://mightyherox.me/tags/%E4%BA%91%E5%BC%80%E5%8F%91/"},{"name":"Node.js","slug":"Node-js","permalink":"http://mightyherox.me/tags/Node-js/"},{"name":"github","slug":"github","permalink":"http://mightyherox.me/tags/github/"},{"name":"镜像","slug":"镜像","permalink":"http://mightyherox.me/tags/%E9%95%9C%E5%83%8F/"},{"name":"效率","slug":"效率","permalink":"http://mightyherox.me/tags/%E6%95%88%E7%8E%87/"},{"name":"云平台","slug":"云平台","permalink":"http://mightyherox.me/tags/%E4%BA%91%E5%B9%B3%E5%8F%B0/"},{"name":"OneDrive","slug":"OneDrive","permalink":"http://mightyherox.me/tags/OneDrive/"},{"name":"跨平台协作","slug":"跨平台协作","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%8D%8F%E4%BD%9C/"},{"name":"Windows 10","slug":"Windows-10","permalink":"http://mightyherox.me/tags/Windows-10/"},{"name":"备份","slug":"备份","permalink":"http://mightyherox.me/tags/%E5%A4%87%E4%BB%BD/"},{"name":"共享","slug":"共享","permalink":"http://mightyherox.me/tags/%E5%85%B1%E4%BA%AB/"},{"name":"Vue","slug":"Vue","permalink":"http://mightyherox.me/tags/Vue/"},{"name":"font-end","slug":"font-end","permalink":"http://mightyherox.me/tags/font-end/"},{"name":"simple global store","slug":"simple-global-store","permalink":"http://mightyherox.me/tags/simple-global-store/"},{"name":"axios","slug":"axios","permalink":"http://mightyherox.me/tags/axios/"},{"name":"store pattern","slug":"store-pattern","permalink":"http://mightyherox.me/tags/store-pattern/"},{"name":"store.js","slug":"store-js","permalink":"http://mightyherox.me/tags/store-js/"},{"name":"前端","slug":"前端","permalink":"http://mightyherox.me/tags/%E5%89%8D%E7%AB%AF/"},{"name":"CORS","slug":"CORS","permalink":"http://mightyherox.me/tags/CORS/"},{"name":"Same-origin policy","slug":"Same-origin-policy","permalink":"http://mightyherox.me/tags/Same-origin-policy/"},{"name":"CORS Anywhere","slug":"CORS-Anywhere","permalink":"http://mightyherox.me/tags/CORS-Anywhere/"},{"name":"CORS PROXY SERVER","slug":"CORS-PROXY-SERVER","permalink":"http://mightyherox.me/tags/CORS-PROXY-SERVER/"},{"name":"Heroku","slug":"Heroku","permalink":"http://mightyherox.me/tags/Heroku/"},{"name":"跨域资源分享","slug":"跨域资源分享","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"},{"name":"同源策略","slug":"同源策略","permalink":"http://mightyherox.me/tags/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/"},{"name":"大学","slug":"大学","permalink":"http://mightyherox.me/tags/%E5%A4%A7%E5%AD%A6/"},{"name":"翻身","slug":"翻身","permalink":"http://mightyherox.me/tags/%E7%BF%BB%E8%BA%AB/"},{"name":"机遇","slug":"机遇","permalink":"http://mightyherox.me/tags/%E6%9C%BA%E9%81%87/"},{"name":"摄影","slug":"摄影","permalink":"http://mightyherox.me/tags/%E6%91%84%E5%BD%B1/"},{"name":"iPad","slug":"iPad","permalink":"http://mightyherox.me/tags/iPad/"},{"name":"win10","slug":"win10","permalink":"http://mightyherox.me/tags/win10/"},{"name":"笔记本","slug":"笔记本","permalink":"http://mightyherox.me/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"},{"name":"Splashtop","slug":"Splashtop","permalink":"http://mightyherox.me/tags/Splashtop/"},{"name":"扩展屏","slug":"扩展屏","permalink":"http://mightyherox.me/tags/%E6%89%A9%E5%B1%95%E5%B1%8F/"},{"name":"阶层差距","slug":"阶层差距","permalink":"http://mightyherox.me/tags/%E9%98%B6%E5%B1%82%E5%B7%AE%E8%B7%9D/"},{"name":"输出","slug":"输出","permalink":"http://mightyherox.me/tags/%E8%BE%93%E5%87%BA/"},{"name":"Github","slug":"Github","permalink":"http://mightyherox.me/tags/Github/"},{"name":"机会","slug":"机会","permalink":"http://mightyherox.me/tags/%E6%9C%BA%E4%BC%9A/"},{"name":"惠州学院","slug":"惠州学院","permalink":"http://mightyherox.me/tags/%E6%83%A0%E5%B7%9E%E5%AD%A6%E9%99%A2/"},{"name":"HZU","slug":"HZU","permalink":"http://mightyherox.me/tags/HZU/"},{"name":"学习","slug":"学习","permalink":"http://mightyherox.me/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"远程桌面","slug":"远程桌面","permalink":"http://mightyherox.me/tags/%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"},{"name":"Windows","slug":"Windows","permalink":"http://mightyherox.me/tags/Windows/"},{"name":"宿舍","slug":"宿舍","permalink":"http://mightyherox.me/tags/%E5%AE%BF%E8%88%8D/"},{"name":"图书馆","slug":"图书馆","permalink":"http://mightyherox.me/tags/%E5%9B%BE%E4%B9%A6%E9%A6%86/"},{"name":"VPS","slug":"VPS","permalink":"http://mightyherox.me/tags/VPS/"},{"name":"DigitalOcean","slug":"DigitalOcean","permalink":"http://mightyherox.me/tags/DigitalOcean/"},{"name":"生活","slug":"生活","permalink":"http://mightyherox.me/tags/%E7%94%9F%E6%B4%BB/"},{"name":"惯性思维","slug":"惯性思维","permalink":"http://mightyherox.me/tags/%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4/"},{"name":"王者荣耀","slug":"王者荣耀","permalink":"http://mightyherox.me/tags/%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/"},{"name":"抖音","slug":"抖音","permalink":"http://mightyherox.me/tags/%E6%8A%96%E9%9F%B3/"},{"name":"CSS","slug":"CSS","permalink":"http://mightyherox.me/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"http://mightyherox.me/tags/HTML/"},{"name":"ES6","slug":"ES6","permalink":"http://mightyherox.me/tags/ES6/"},{"name":"TypeScript","slug":"TypeScript","permalink":"http://mightyherox.me/tags/TypeScript/"},{"name":"Babel","slug":"Babel","permalink":"http://mightyherox.me/tags/Babel/"},{"name":"碎碎念","slug":"碎碎念","permalink":"http://mightyherox.me/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"Bilibili","slug":"Bilibili","permalink":"http://mightyherox.me/tags/Bilibili/"},{"name":"Front-end","slug":"Front-end","permalink":"http://mightyherox.me/tags/Front-end/"},{"name":"JSZip","slug":"JSZip","permalink":"http://mightyherox.me/tags/JSZip/"},{"name":"html2canvas","slug":"html2canvas","permalink":"http://mightyherox.me/tags/html2canvas/"},{"name":"跨域","slug":"跨域","permalink":"http://mightyherox.me/tags/%E8%B7%A8%E5%9F%9F/"},{"name":"防盗链","slug":"防盗链","permalink":"http://mightyherox.me/tags/%E9%98%B2%E7%9B%97%E9%93%BE/"},{"name":"创业","slug":"创业","permalink":"http://mightyherox.me/tags/%E5%88%9B%E4%B8%9A/"},{"name":"团队","slug":"团队","permalink":"http://mightyherox.me/tags/%E5%9B%A2%E9%98%9F/"},{"name":"励志","slug":"励志","permalink":"http://mightyherox.me/tags/%E5%8A%B1%E5%BF%97/"},{"name":"超学习","slug":"超学习","permalink":"http://mightyherox.me/tags/%E8%B6%85%E5%AD%A6%E4%B9%A0/"},{"name":"学生","slug":"学生","permalink":"http://mightyherox.me/tags/%E5%AD%A6%E7%94%9F/"},{"name":"CS","slug":"CS","permalink":"http://mightyherox.me/tags/CS/"},{"name":"开源","slug":"开源","permalink":"http://mightyherox.me/tags/%E5%BC%80%E6%BA%90/"}]}