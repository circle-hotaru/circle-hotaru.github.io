<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Bilibili评论转图片神器开发日志-html2canvas使用</title>
      <link href="/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-html2canvas%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-html2canvas%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在开发<a href="tool.mightyherox.me">Bilibili评论转图片神器</a>，功能是将Bilibili视频评论区的评论转换成PNG图片。</p></blockquote><p>开发这个工具的思路是使用<a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener">html2canvas</a>将获取到的评论转成PNG图片，再通过<a href="https://stuk.github.io/jszip/" target="_blank" rel="noopener">JSZip</a>打包下载。</p><p><a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener">html2canvas</a>这个工具的使用挺简单的，官网也有示例。</p><p><img src="https://i.loli.net/2020/07/11/pc68nZG7IYkA4Qt.png" alt="html2canvas官网"></p><p>以下记录自己遇到的一些问题：</p><h2 id="图片空白？"><a href="#图片空白？" class="headerlink" title="图片空白？"></a>图片空白？</h2><p>我使用的是Vue，推测原因是DOM还没渲染完，html2canvas就开始转图片了。解决方法是使用nextTick，等DOM渲染完了再转图片。</p><blockquote><p>在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进Vue.nextTick()的回调函数中。与之对应的就是mounted()钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，此时在该钩子函数中进行任何DOM操作都不会有问题 。<br><a href="https://juejin.im/post/5a6fdb846fb9a01cc0268618" target="_blank" rel="noopener">简单理解Vue中的nextTick</a></p></blockquote><h2 id="canvas中含有跨域图片，图片不显示？"><a href="#canvas中含有跨域图片，图片不显示？" class="headerlink" title="canvas中含有跨域图片，图片不显示？"></a>canvas中含有跨域图片，图片不显示？</h2><p>html2canvas默认不显示跨域图片，需要在配置中开启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">allowTaint: true,</span><br><span class="line">&#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">useCORS: true,</span><br></pre></td></tr></table></figure><h2 id="窗口有滚动，图片显示有偏差？"><a href="#窗口有滚动，图片显示有偏差？" class="headerlink" title="窗口有滚动，图片显示有偏差？"></a>窗口有滚动，图片显示有偏差？</h2><p>需要计算绘制元素的位置，具体代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取需要绘制的元素</span><br><span class="line">        let comments &#x3D; this.$refs.comment;</span><br><span class="line">        for (let i &#x3D; 0; i &lt; comments.length; i++) &#123;</span><br><span class="line">            &#x2F;&#x2F; 评论内容做图片名</span><br><span class="line">            let imgName &#x3D; comments[i].innerText.split(&quot;\n&quot;)[1];</span><br><span class="line">            &#x2F;&#x2F; 返回元素的大小及其相对于视口的位置</span><br><span class="line">            let rect &#x3D; comments[i].getBoundingClientRect();</span><br><span class="line">            &#x2F;&#x2F; 不知为何rect.x返回的坐标不准确，需要加上8.5才行</span><br><span class="line">            rect.x +&#x3D; 8.5;</span><br><span class="line">            &#x2F;&#x2F; 获取滚动轴滚动的长度</span><br><span class="line">            let scrollTop &#x3D; document.documentElement.scrollTop || document.body.scrollTop</span><br><span class="line">            &#x2F;&#x2F; 获取dom 宽度</span><br><span class="line">            let width &#x3D; comments[i].offsetWidth</span><br><span class="line">            &#x2F;&#x2F; 获取dom 高度</span><br><span class="line">            let height &#x3D; comments[i].offsetHeight</span><br><span class="line">            html2canvas(comments[i], &#123;</span><br><span class="line">                &#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">                allowTaint: true,</span><br><span class="line">                &#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">                useCORS: true,</span><br><span class="line">                &#x2F;&#x2F; 截图的背景颜色</span><br><span class="line">                backgroundColor: &#39;transparent&#39;,</span><br><span class="line">                &#x2F;&#x2F; 图片x轴偏移量</span><br><span class="line">                x: rect.x,</span><br><span class="line">                &#x2F;&#x2F; 图片宽度</span><br><span class="line">                width: width,</span><br><span class="line">                &#x2F;&#x2F; 图片高度</span><br><span class="line">                height: height,</span><br><span class="line">                &#x2F;&#x2F; y轴滚动</span><br><span class="line">                scrollY: -scrollTop,</span><br><span class="line">                &#x2F;&#x2F; 放大2倍</span><br><span class="line">                scale: 2,</span><br><span class="line">                &#x2F;&#x2F; 关闭日志</span><br><span class="line">                logging: false,</span><br><span class="line">            &#125;).then(canvas &#x3D;&gt; &#123;</span><br><span class="line">                &#x2F;&#x2F; JSZip模块中的base64.js会对文件格式进行检测，所以我们需要将之前canvas.toDataURL()得到的data去除前缀imgData &#x3D; imgData.split(&quot;data:image&#x2F;png;base64,&quot;)[1];。</span><br><span class="line">                let imgData &#x3D; canvas.toDataURL().split(&#39;data:image&#x2F;png;base64,&#39;)[1];</span><br><span class="line">                &#x2F;&#x2F;这个images文件目录中创建一个base64数据为imgData的图像，图像名是上面获取的imaName</span><br><span class="line">                img.file(imgName + &#39;.png&#39;, imgData, &#123; base64: true &#125;);</span><br><span class="line">                that.done1 +&#x3D; 1;</span><br><span class="line">                console.log(&quot;添加图片&quot; + i);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> html2canvas </tag>
            
            <tag> Front-end </tag>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili评论转图片神器开发日志-解决跨域问题</title>
      <link href="/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在开发<a href="tool.mightyherox.me">Bilibili评论转图片神器</a>，功能是将Bilibili视频评论区的评论转换成PNG图片。</p></blockquote><p>本来打算是做一个纯前端，通过<a href="https://github.com/SocialSisterYi/bilibili-API-collect/blob/master/comment/comment_list.md" target="_blank" rel="noopener">B站API</a>（热心网友整理的API）获取数据即可。但是实际开发过程中遇到了跨域问题。</p><p>关于跨域问题的解决，网上有许多解决方案，比如jsonp。</p><p>原本以为使用jsonp后，就可以开开心心的从B站获取数据了。但悲剧又来了，B站API返回的是json格式，jsonp要求返回jsonp格式。</p><p><img src="https://i.loli.net/2020/07/11/q5i4nUbJ32RyEKd.png" alt="2020-07-11-CORB.png"></p><p>上图显示，我虽然获得了数据，但是浏览器说这个是json数据，不是jsonp数据，所以我把它拦截下来了。晕，就是说我收到了这个数据，但是浏览器把它拦在了门口不进来。</p><p>网上找到大多数解决方案是不用jsonp，而是cross。但是应用场景是自家api，修改服务端就可以了。B站又不是我家开的，改不了它的服务端呀。于是选择一个折中的办法——自己写一个后端API，用API去取数据。</p><p>之前学过一点node.js，这次就使用node.js来处理。</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; express, http</span><br><span class="line">const express &#x3D; require(&#39;express&#39;);</span><br><span class="line">const app &#x3D; express();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; request</span><br><span class="line">const request &#x3D; require(&#39;request&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; body parser</span><br><span class="line">const bodyParser &#x3D; require(&#39;body-parser&#39;);</span><br><span class="line">app.use(bodyParser.urlencoded(&#123; extended: false &#125;));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; port</span><br><span class="line">const PORT &#x3D; 8089;</span><br><span class="line">app.listen(PORT);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; cross domain config</span><br><span class="line">app.all(&#39;&#x2F;api&#x2F;v1&#39;, (req, res, next) &#x3D;&gt; &#123;</span><br><span class="line">    res.header(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);</span><br><span class="line">    res.header(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With&#39;);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(&#39;&#x2F;api&#x2F;v1&#x2F;bv2av&#39;, (req, res, next) &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 白名單</span><br><span class="line">    if (!req.get(&#39;Origin&#39;)) return;</span><br><span class="line"></span><br><span class="line">    res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;);</span><br><span class="line"></span><br><span class="line">    request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;web-interface&#x2F;view?bvid&#x3D;&#39; + req.query.bvid, function (error, response, body) &#123;</span><br><span class="line">        if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123;</span><br><span class="line">            res.send(body)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(&#39;&#x2F;api&#x2F;v1&#x2F;comments&#39;, (req, res, next) &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 白名單</span><br><span class="line">    if (!req.get(&#39;Origin&#39;)) return;</span><br><span class="line"></span><br><span class="line">    res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;);</span><br><span class="line">    request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;reply?type&#x3D;1&amp;oid&#x3D;&#39; + req.query.oid + &#39;&amp;sort&#x3D;&#39; + req.query.sort + &#39;&amp;pn&#x3D;&#39; + req.query.pn + &#39;&amp;ps&#x3D;&#39; + req.query.ps + &#39;&amp;nohot&#x3D;1&#39;, function (error, response, body) &#123;</span><br><span class="line">        if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123;</span><br><span class="line">            res.send(body)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样，前端只需要向我写的node.js端发起请求即可获取数据。</p><p>另外还有一个小问题，用户头像的图片无法显示出来，但是手动访问链接后再刷新又可以显示了。如下图：</p><p><img src="https://i.loli.net/2020/07/11/z9loMUiKnwCVTBR.png" alt="2020-07-11-服务器设置防盗链.png"></p><p>google一番后发现是因为服务器设置了图片防盗链的原因，解决方法很简单，在head加上一行代码即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;referrer&quot; content&#x3D;&quot;no-referrer&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://letswrite.tw/api-cross-domain-node/" target="_blank" rel="noopener">接氣象局api、跨網域ajax資料</a></p><p><a href="https://www.ituring.com.cn/article/273795" target="_blank" rel="noopener">秒建一个 json 转 jsonp 的中间层服务器</a></p><p><a href="https://www.jianshu.com/p/e1e2920dac95" target="_blank" rel="noopener">JSONP跨域详解</a></p><p><a href="https://www.cnblogs.com/brusally/p/11198512.html" target="_blank" rel="noopener">对B站各种数据进行抓包分析</a></p><p><a href="https://github.com/SocialSisterYi/bilibili-API-collect" target="_blank" rel="noopener">bilibili-API-collect</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> Front-end </tag>
            
            <tag> 前端 </tag>
            
            <tag> 跨域 </tag>
            
            <tag> Nodejs </tag>
            
            <tag> 防盗链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观看《隐姓亿万富翁》的收获</title>
      <link href="/2020/06/20/%E9%9A%90%E5%A7%93%E4%BA%BF%E4%B8%87%E5%AF%8C%E7%BF%81/"/>
      <url>/2020/06/20/%E9%9A%90%E5%A7%93%E4%BA%BF%E4%B8%87%E5%AF%8C%E7%BF%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在看一个节目《隐姓亿万富翁》，讲述的是亿万富翁Glenn Stearns只带着一百美元、一辆皮卡挑战在一个陌生城市90天内白手起家的故事。</p></blockquote><p>Glenn的创业过程大概是先解决温饱问题，招募团队，获取启动资金，寻找发展方向，火力全开。不过这些并不是线性的，很多时候是并行发生的。</p><p>Glenn这次创业其实并不是真正的“白手起家”，他作为亿万富翁，本身的经验就是他最大的财富了，所以他能看到别人看不到的点。但是，一个人的力量是有限的，一个优秀的团队是必要的。节目也是主要围绕他的团队来讲述。从他的团队中我们可以看到需要值得注意的地方。</p><p>首先是团队中的每个人都得为彼此负责。在肋排节中主厨克里斯汀多次让货物供不应求，同时筹备期间她只会打包票，不跟别人说如何执行，只是让别人信任她。出错了不去寻找自身的错误，只会找借口把责任推给别人的人。很多次出现问题了，她没有想办法去解决，只是去抱怨。在节目中也可以看到，她作为主厨，但跟其他人的联系并不是特别深厚，更多的是在单打独斗。这样的人，尽管她付出也很多，但终究还是难以担负重任，最后也是和Glenn不欢而散。</p><p>另外，如果你加入了这个团队，你就得主动为这个团队做贡献。Glenn的团队元老最后基本上都获得了2万美元的回报，除了克里斯是5千美元。克里斯这个人怎么说呢？从外表看上去，他是个普通的职员，看不到激情。事实上，他作为团队元老加入后，做的事情并不多，很多时候都看不见他的人影。他的思维应该还停留在职员思维上，等着领导安排事情，做完就算了。</p><p><strong>赚钱的本质是中间商赚差价。</strong>创业过程中，Glenn为了获取创业资本和满足温饱，多次倒卖二手车、房地产。总结一句话就是<strong>低价买入，高价卖出</strong>。要完成这个过程，就要学会掌握信息差和加工。举个例子，公司雇佣你并支付你薪水是因为你的工作只值这么多吗？肯定不是的，一定是因为你做出来的成果比支付你的薪水还要高才能继续维持这种雇佣关系。公司把你的工作成果卖出去，从中获利。那为什么大多数人不选择自己给自己打工，把中间商的环节也赚了。因为大多数人都没有那个信息差。比如说程序员，大多数程序员的交际圈比较窄，同时也不擅长与他人打交道。你让他去谈生意与让老板去谈生意结果相差很大的。另一个例子，为什么那么多字幕组或者在国外生活的留学生回国做自媒体？因为他们做给外国人看没价值啊。但是做给国人看就不一样了。大多数国人听不懂外语，对国外生活不了解。前期吸一波粉之后就可以开始割韭菜了（当然也有不少用爱发电的字幕组）。</p><p><strong>专业的事让专业的人去做。</strong>Glenn在稳定生计后立马开始组建自己的团队，寻找专业的人才。比如倒卖二手房的时候找来当地比较出名的道恩来负责翻新，期间房子发霉了还花了一笔大钱请专业公司来清理。这跟前面的中间商赚差价差不多。你不可能把全部的钱都赚了，首先你做不到，其次成本太高。比如房子发霉了自己来清理，你要去学习如何清理，你还要购买工具，甚至你最后可能清理得不干净，卖房的时候被发现直接白干了。学海无涯而生有涯，不要想着事事都能兼顾得来。</p><p>最后说说Glenn吧，他在90天挑战中始终保持着激情和主动。面对挫折，没有沉溺在痛苦中，而是很快就想办法去解决它。作为团队的领导者，他要为团队的成员安排合适的工作，并不断推动他们往前。最重要的还是行动！行动起来！用尽全力去完成！</p><p>这里是Glenn所创建的UNDERDOG BBQ<a href="https://underdogbbq.com/" target="_blank" rel="noopener">官网</a>以及他们的<a href="https://underdogbbq.com/pages/about-the-underdogs" target="_blank" rel="noopener">故事</a>。</p><p><img src="https://cdn.shopify.com/s/files/1/0247/1208/5564/files/81278236_10157192556783740_3923100201354526720_o.jpg?v=1577910118" alt="UNDERDOGS"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 团队 </tag>
            
            <tag> 励志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>勇敢一点？</title>
      <link href="/2020/06/14/%E5%8B%87%E6%95%A2%E4%B8%80%E7%82%B9%EF%BC%9F/"/>
      <url>/2020/06/14/%E5%8B%87%E6%95%A2%E4%B8%80%E7%82%B9%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>现今社会大多数人都因为害怕失去机会而不敢说不，但其实真正最重要的人是你自己，尝试说不，是为了保护好自己的时间。</p></blockquote><p><em>2020年6月5日更新</em></p><p>今天是实习第四天，虽然公司的氛围还算可以，但越来越想要离开这里。黑盒测试不是我的菜，趁着年轻想要多折腾一下自己。打算明天提交离职申请。希望一切顺利。</p><p><em>2020年6月9日更新</em></p><p>今天正式离职了。因为提交离职申请的时候刚好周末，要等到周一工作日才开始处理离职流程。过程还挺顺利的，这家公司给我的印象也不错（除了把我坑进来做黑盒测试）。接下来就要开始规划自己的未来了。</p><p>我的缺点在于没有认真去思考这个世界，一直以来都在逃避现实，没有积极主动地融入这个世界。首先要做的是先把作业都补上吧:sob:。然后在Youtube上经营自己的频道，这里有两个目的，一个是曝光自己，另一个是锻炼口才。主题的话，先随便聊聊生活或者做<em>study with me</em>之类的。</p><p><em>2020年6月14日更新</em></p><p>在家一个星期，这个星期并没有想象中的发奋图强地学习，而是跟以前一样，做一会作业就刷手机、刷网站。记得高考后那个暑假也是如此，去流水线做了三天就受不了，回家了。回家路上发誓一定要努力！不能浪费时间，结果整个暑假都在打游戏。有趣的是两次回家路上都是下起了大雨，让我觉得还挺凄凉的。</p><p>老实说，这几天只是玩淘宝的消消乐之类的小游戏，对于巫师和文明了，想玩又不敢玩。因为整个人都挺焦虑的，不知道自己该做什么，但是知道自己不该玩太多游戏。然后今天也把淘宝给卸载了，就是怕自己沉迷于玩消消乐。</p><p>这几天也看了很多励志的事物，比如昨晚看了《死亡诗社》。《死亡诗社》高中的时候看过一小段，就开头那部分，是高中英语老师播的。这部电影的评价挺高的，但是自己一直没去看。昨晚看了之后脑袋里一直在想<strong>“有花堪折直须折，莫待无花空折枝”</strong>。但是观看的时候我也在思考，我有那个权利吗？我们家家境很一般，但是家人都力所能及的让我和弟弟拥有一个还不错的生活环境。看着家人操劳的背影，我觉得我没有任性的资本（虽然我已经任性好多次了）。至少目前的想法还是求稳，先求生存再求生活吧。</p><p>尽管如此，还是要<strong>保持开放，保持焦虑，保持希望（be open, be impatient, be hopeful）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日拱一卒，功不唐捐</title>
      <link href="/2020/06/02/%E6%97%A5%E6%8B%B1%E4%B8%80%E5%8D%92%EF%BC%8C%E5%8A%9F%E4%B8%8D%E5%94%90%E6%8D%90/"/>
      <url>/2020/06/02/%E6%97%A5%E6%8B%B1%E4%B8%80%E5%8D%92%EF%BC%8C%E5%8A%9F%E4%B8%8D%E5%94%90%E6%8D%90/</url>
      
        <content type="html"><![CDATA[<p>实习公司安排的岗位是黑盒测试。这个岗位不是很满意，感觉学不到什么东西，对我以后的就业也没有太大帮助。有点虚假招聘的成分，招人的时候说是研发岗，签了合同后就调配到黑盒测试，不带这么坑的~</p><p>今天测了一天的开机关机开机关机，希望接下来能学到点东西吧，不然就白白浪费时间了。</p><p>为什么会被分配到黑盒测试？根据之前的笔试成绩，最高的一批人是研发岗，第二批次是黑盒测试，最后一批次是软件经理（我还以为软件经理是最高的）。研发岗4人，黑盒测试7人，剩下的都是软件经理。这也是我为什么说虚假招聘的原因，一开始夸大口说要招50个开发，结果来了30个人却只有4个开发。</p><p>这次实习也让我看清了自己的市场价值，没办法，太菜了。</p><p>btw，负责带我的那位组长人还挺不错的。</p><p>接下来要努力提升自己的实力呀！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>来到实习公司的第一天</title>
      <link href="/2020/05/31/%E6%9D%A5%E5%88%B0%E5%AE%9E%E4%B9%A0%E5%85%AC%E5%8F%B8%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2020/05/31/%E6%9D%A5%E5%88%B0%E5%AE%9E%E4%B9%A0%E5%85%AC%E5%8F%B8%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>今天坐着好朋友的车按时到达实习公司，朋友A真的很nice!人很大方、开朗，是位不错的朋友。我们之间的感情也从初中开始一直维持至今。</p><p>说说实习公司吧，这里不能说太多，毕竟是我的即将工作的地方(●’◡’●)。怎么说呢，这里的宿舍环境并没有我想象中的那么好，而且来之前说的双人间变成了三人间，略坑~</p><p>来到这里孤身一人，没有认识的人。不过到这里的时候刚好遇上隔壁班的同学，然后很快就跟他们混熟。晚上一起出去吃饭、买衣服了~</p><p>朋友B送了我一些话：</p><blockquote><p>三个月里一定一定要思考的事，时刻发现自己做的事情哪里不对？然后为什么不对？怎么改善？</p></blockquote><p>希望自己可以像杨超越一样坚强、勇敢还有努力！</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超学习-面向项目学习以及学会寻找学习资源</title>
      <link href="/2020/05/22/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%BC%9A%E5%AF%BB%E6%89%BE%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
      <url>/2020/05/22/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%BC%9A%E5%AF%BB%E6%89%BE%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="面向项目学习"><a href="#面向项目学习" class="headerlink" title="面向项目学习"></a>面向项目学习</h2><p>最近主要在给软件开发综合训练的课设写前端页面。这是一个小组项目，后端有两位大佬负责，前端由我和另一个同学负责。不过我和另一个同学对前端都不是很熟悉，第一次接触原项目的开发者使用的freemarker模板引擎。虽然不熟，但也只能硬上了。也正因为有压力在，所以很快就上手了freemarker。难点是从后端拿数据，后端同学和原作者返回数据的格式和方式不同。如果直接用后端同学的接口，那么前端很多页面都不能复用原作者的，工作量有点大。但是后端同学又不愿意改（大佬就是大佬~）。只能自己改后端了。疯狂面向搜索编程总算搞定了。也因此对后端有了进一步的认识。</p><p>这几天的学习成果，如果没有项目驱动的话，我估计要学很久，而且很有可能是从0开始学习。但是项目开发不会给你那么多时间，你只能挑着学、跳着学以便尽快上线。这种学习方式可以让你了解到真实项目开发中所需的技术，很多时候，只要你会CRUD就能搞定一个项目了。</p><h2 id="学会寻找学习资源"><a href="#学会寻找学习资源" class="headerlink" title="学会寻找学习资源"></a>学会寻找学习资源</h2><p>今天做计网实验数据包分析居然做了一天！！！比较浪费时间的地方在于验证UDP检验和。这部分知识我还没学到，但是老师有给实验参考，我就照着参考来做了。坑爹的是，老师给的参考前后数据不一致，比如前面IP数据报给的源地址、目的地址与计算检验和时用到的不一样。还有数据部分看截图不止7个字节，但是验证的时候却只计算了7个字节。因为一开始不懂，我还纠结了很久，最后决定还是google一番，果然，被参考坑了。</p><p>其实被坑的次数也不少了。比如之前学高数，教材一开始还能看得懂，后面开始云里雾里。搞得我都开始怀疑人生了。后来去B站找了个视频，忘记哪个频道了，但是别人讲的方式一下子让我明了，知道了为什么会是这样。这也让我开始养成学习新知识之前，先去寻找哪些资源比较好。讲真，国内大部分教材都很生硬，感觉就是为了让人学不下去的XD。尤其是计算机专业，很多时候你看中文教材看不懂的时候，看看英文教材就知道是怎么回事了。</p>]]></content>
      
      
      <categories>
          
          <category> 超学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 超学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超学习-学会抽象</title>
      <link href="/2020/05/15/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%BC%9A%E6%8A%BD%E8%B1%A1/"/>
      <url>/2020/05/15/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%BC%9A%E6%8A%BD%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>大二有段时间在看Crash Course的<a href="https://www.bilibili.com/video/BV1EW411u7th" target="_blank" rel="noopener">计算机科学速成课</a>，这系列的内容都很有趣，易于消化。印象深刻的一个细节是主持人Carrie Anne经常会让我们进入一个抽象的层面去理解新概念。</p><p><img src="https://i.loli.net/2020/05/15/VKJG2DsHoUX7hO6.png" alt="进入了另一层抽象"></p><p>什么是抽象？</p><p>抽象这个词听起来就很抽象。个人看法是把某个功能封装起来，不要考虑它内部细节，而是着重于外部展示出来的效果。打个比方就是家里每天都在使用的电饭煲，你了解它工作的时候内部是怎么运行的吗？我相信大部分人肯定都不了解，但是我们都会使用它去做出美味的饭。</p><p>学习也是一样的道理，大部分人的学习方法是从第一章开始看，一路看下去的线性的学习方法。这种方法很容易让人觉得枯燥，看着看着就看不下去了。而且很多时候我们都会遇到这么一种情况，一开始遇到某个概念难以理解，只能带着疑问往后学习。但是学到后面再回过头来看的时候就会发现原来它是那么简单。</p><p>所以在学习上我比较习惯“不求甚解”，遇到较难理解的概念，如果没必要深究下去，我会把它进行抽象。等到下次要用到这个概念的时候我只需要考虑它对外的效果即可。</p><p>总结，很多知识并不需要我们深入学习，会用就行了。用庄子的说就是“吾生也有涯，而知也无涯。以有涯随无涯，殆已！”</p><p>By the way，开头提到的<a href="https://www.bilibili.com/video/BV1EW411u7th" target="_blank" rel="noopener">计算机科学速成课</a>很不错，值得一看。</p>]]></content>
      
      
      <categories>
          
          <category> 超学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 超学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>惠院学子如何申请学生邮箱</title>
      <link href="/2020/05/14/%E6%83%A0%E9%99%A2%E5%AD%A6%E5%AD%90%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1/"/>
      <url>/2020/05/14/%E6%83%A0%E9%99%A2%E5%AD%A6%E5%AD%90%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<p>利用学生身份我们可以享受到许多学生优惠权益，这里面有很多实用资源，详情可以看这个<a href="https://github.com/ivmm/Student-resources" target="_blank" rel="noopener">链接</a></p><p>要申请学生优惠权益最常见的途径就是学生邮箱了，但是很多人不知道我们惠院的学生邮箱要怎么申请，所以接下来我将介绍如何申请惠院的学生邮箱。</p><p>首先登陆<a href="https://ehall.hzu.edu.cn/new/index.html" target="_blank" rel="noopener">惠州学院网上办事大厅</a>，然后在上方搜索框搜索<strong>惠州学院学生邮箱申请</strong>：</p><p><img src="https://i.loli.net/2020/05/14/sRr5SEvzUaVyWCi.png" alt="20200514搜索学生邮箱.png"></p><p>点击<strong>惠州学院学生邮箱申请</strong>即可进入邮箱申请页面，按照要求填写即可：</p><p><img src="https://i.loli.net/2020/05/14/jhmlQCtxubgvPBD.png" alt="20200514申请表.png"></p><p>邮箱申请似乎是电脑审核的，一般过了24小时后就可以打开<a href="http://mail.stu.hzu.edu.cn/coremail/" target="_blank" rel="noopener">惠院学生邮箱网址</a>，登陆你的账号（应该还要激活，这个我忘了要不要）使用啦~</p><p><img src="https://i.loli.net/2020/05/14/1tmCQRnJTwsIvVe.png" alt="20200514登录邮箱.png"></p><p>好好珍惜学生时光呀~</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 惠州学院 </tag>
            
            <tag> 学生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HZUCS_Course</title>
      <link href="/2020/05/14/%E5%85%B3%E4%BA%8EHZUCS-Course/"/>
      <url>/2020/05/14/%E5%85%B3%E4%BA%8EHZUCS-Course/</url>
      
        <content type="html"><![CDATA[<p>github上新开了一个仓库，主要用来分享一些课程资料、作业等学生原创内容。</p><p>缘由：<br>一、前段时间电脑坏了，虽然之前有备份部分资料到移动硬盘，但很不幸移动硬盘落在学校了。所以这学期的一些资料都丢失了，幸运地是也有部分资料被我上传到github上了（数据备份的重要性T_T）。<br>二、个人觉得，学习这件事情，虽然强调独立思考，但有人指点一下或许会走得更快更远。另，大部分人遇到问题就去百度，搜出一大堆乱七八糟的答案。这是不对的，有能力请尽量使用google。</p><p>所以在github上开了这个仓库，既可以与大家互相交流学习，也可以为师弟师妹们指点迷津。最重要的是开源精神，参与一个项目并能影响他人的成就感是很棒的！</p><p><img src="https://i.loli.net/2020/05/14/DzRbf8UT7VFhv9y.png" alt="影响我的人"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 惠州学院 </tag>
            
            <tag> CS </tag>
            
            <tag> github </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回归Hexo</title>
      <link href="/2020/05/11/%E5%9B%9E%E5%BD%92Hexo/"/>
      <url>/2020/05/11/%E5%9B%9E%E5%BD%92Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="技术是为人服务的"><a href="#技术是为人服务的" class="headerlink" title="技术是为人服务的"></a>技术是为人服务的</h1><p>为什么说回归Hexo？其实早在大二就已经搭建过网站，一开始用的是WordPress，后来嫌弃太臃肿，改投Hexo的怀抱。期间写了一些小文章，也折腾了几次把Hexo部署到个人服务器上。接着学习了Vue，了解到Vuepress，又开始萌生转换到Vuepress的想法。但是自己对Vuepress并不是特别熟悉，也没有太多时间去学习，折腾了一半就不了了之了。</p><p>现在回过头来发现初衷仅仅是为了有个地方给我写写文章，文章倒没写多少，技术却学得乱七八糟。何必折腾来折腾去呢？对于Hexo，使用的时间是最长的，也是最熟悉的。所以现在要回归Hexo，先把写作坚持下来再说，就这样。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
