<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何在DigitalOcean创建你的第一台VPS</title>
      <link href="/2020/08/20/How-to-create-your-first-VPS-on-DigitalOcean/"/>
      <url>/2020/08/20/How-to-create-your-first-VPS-on-DigitalOcean/</url>
      
        <content type="html"><![CDATA[<p>在本文中，我将指导您完成在DigitalOcean上设置第一个Linux虚拟专用服务器（VPS）的过程。</p><p>DigitalOcean是最著名的VPS服务商之一。</p><p>DigitalOcean为最著名的应用程序和操作系统提供一键式安装过程，它提供了遍布全球的数据中心和CDN位置。最低消费仅需5美刀/月。</p><p>我认为DigitalOcean是最实惠且易于使用的解决方案之一，并且可以将其用于各种服务。</p><h2 id="一、-创建一个DigitalOcean账号"><a href="#一、-创建一个DigitalOcean账号" class="headerlink" title="一、 创建一个DigitalOcean账号"></a>一、 创建一个DigitalOcean账号</h2><p>您可以使用<a href="https://m.do.co/c/165e0813b0d9" target="_blank" rel="noopener">链接</a>获得$100的免费信用额，可在接下来的60天内使用。</p><blockquote><p>免责声明：这是会员链接。 当您使用此链接进行注册时，您将获得100美元的DigitalOcean免费信用额，我将获得25美元的DigitalOcean免费信用额。</p></blockquote><p>我会推荐DigitalOcean不仅仅是因为他们有会员计划。 恰恰相反，由于我经常使用它，所以如果我可以降低账单，我会抓住这个机会。当然，如果您是一名学生，我更建议您使用Github的学生包，它将提供您$50的免费信用额，时限一年。</p><p>进入网站后即可开始注册：<br><img src="https://i.loli.net/2020/08/20/u9Npx8ALl3fsdY2.png" alt="DigitalOcean注册页面"></p><p>注册完成后不要忘记到您的邮箱进行确认。</p><p>接着您需要绑定您的信用卡或者Paypal：</p><p><img src="https://i.loli.net/2020/08/20/YOzfudTRrtoyiQP.png" alt="DigitalOcean绑定信用卡或Paypal"></p><h2 id="二、创建一个项目"><a href="#二、创建一个项目" class="headerlink" title="二、创建一个项目"></a>二、创建一个项目</h2><p>一旦您注册完毕，就可以创建一个新的项目：</p><p><img src="https://i.loli.net/2020/08/20/ykUK5wOZ9p2AVGD.png" alt="创建一个新项目.png"></p><p>单击<strong>Create Project</strong>后，该项目现在已添加到您的项目列表中，并且项目仪表板如下所示：</p><p><img src="https://i.loli.net/2020/08/20/NlEi86RfAc2BVDW.png" alt="DigitalOcean项目仪表板.png"></p><p>这是您要对此项目进行任何操作的控制中心。</p><p>首先，这里有一个<strong>Get Started with a Droplet</strong>的蓝色大按钮。</p><p>什么是Droplet？DigitalOcean Droplet是一个虚拟机，即VPS。DigitalOcean上的所有内容都围绕Droplet展开。</p><p>通过此接口，我们还可以初始化托管数据库，创建空间（用于存储文件的位置）以及创建负载均衡器以在多个Droplet之间分配流量。</p><p>但是，暂时不需要管那么多，我们只需要创建一个Droplet即可。</p><h3 id="创建一个Droplet"><a href="#创建一个Droplet" class="headerlink" title="创建一个Droplet"></a>创建一个Droplet</h3><p>单击<strong>Get Started with a Droplet</strong>按钮，将会显示一个包含很多选项的页面：</p><p><img src="https://i.loli.net/2020/08/20/YuxCjowymHaPbI3.png" alt="Create Droplets.png"></p><p>让我们从上面开始。</p><p><img src="https://i.loli.net/2020/08/20/6FpPQzwdHon8VKs.png" alt="选择镜像.png"></p><p>首先的选择镜像，这里我们可以选择一些Linux发行版（Ubuntu, Fedora, Debian and CentOS）和FreeBSD（另一个UNIX操作系统）</p><p>除了发行版，我们还有其他类别。 特别是通过Marketplace，只需单击一下，我们就可以安装预配置了WordPress，Ghost，LAMP服务器或150多个应用程序中的任何一个的服务器。 这是快速启动和运行任何项目的一种非常方便的方法。</p><p>快照，备份和自定义映像使您可以从已有的服务器创建服务器。</p><p>现在您已经知道在这里可以做的一切，让我们从<strong>Distributions</strong>面板中选择Ubuntu 20.04。</p><p><img src="https://i.loli.net/2020/08/20/nq1dN6Q7MaAFyel.png" alt="选择计划.png"></p><p>在<strong>Choose a plan</strong>中，您可以在“标准”计划（我们将使用的计划）或性能更高的“ CPU优化”或“内存优化”服务器之间进行选择。 这意味着服务器将花费更多。</p><p>这里我们选择“标准”里的$5/mo（按时计费$0.007/hour），即可。</p><p><img src="https://i.loli.net/2020/08/20/o4ZbYGMruQAzgPF.png" alt="选择数据中心区域.png"></p><p>接着我们选择数据中心区域，可以根据您所在位置和运营商来选择。不同的运营商对不同地方的线路优化不同，中国大陆用户建议使用新加坡地区的服务器。</p><p><img src="https://i.loli.net/2020/08/20/pgrnxvycewCY4PT.png" alt="登陆验证方式.png"></p><p>接下来还有其他选项，您可以跳过，让我们选择登录VPS的验证方式：</p><p>选择“密码”可以简化操作，但是对于真实服务器，我建议使用SSH密钥身份验证（设置更复杂，但更安全）。</p><p>输入您要用于root用户（Linux系统管理员）的密码。</p><p><img src="https://i.loli.net/2020/08/20/vf4TkpCNEaIngo2.png" alt="填写机器名.png"></p><p>然后填写对您有意义的机器名：</p><p><img src="https://i.loli.net/2020/08/20/YU8d2k71rjTlOmD.png" alt="Create Droplet.png"></p><p>最后，点击<strong>Create Droplet</strong>按钮，DigitalOcean将开始创建您的第一台VPS。</p><p>一旦创建完成，它将会显示VPS的公网IP地址：</p><p><img src="https://i.loli.net/2020/08/20/fA7qSDbYXWtLhFN.png" alt="创建成功.png"></p><p>单击机器名以显示Droplet仪表板：</p><p><img src="https://i.loli.net/2020/08/20/HNPfbKX6RzcUs5L.png" alt="20200820-Droplet仪表板.png"></p><p>在这里您可以控制任何东西。 您可以将其开机、关机等等。</p><p>请记住，Droplet关机并不会停止DigitalOcean计费：您必须销毁它才能停止计费。</p><h2 id="三、连接您的第一台VPS"><a href="#三、连接您的第一台VPS" class="headerlink" title="三、连接您的第一台VPS"></a>三、连接您的第一台VPS</h2><p>连接的方法有许多，在Windows平台，您可以通过如<a href="https://www.netsarang.com/zh/xshell/" target="_blank" rel="noopener">Xshell</a>、<a href="https://www.putty.org/" target="_blank" rel="noopener">PuTTY</a>。我常用的是Xshell，您只需在官网选择<a href="https://www.netsarang.com/zh/free-for-home-school/" target="_blank" rel="noopener">家庭/学校版</a>，注册即可免费使用。</p><p><img src="https://i.loli.net/2020/08/20/uBMlXJQWrvtZbRN.png" alt="Xshell教育版.png"></p><p>下载并安装完Xshell后双击运行会弹出会话框，点击<strong>新建</strong>，然后按右侧所示依次填入名称（自定义）、主机（您的公网IP）和端口号（默认是22）：</p><p><img src="https://i.loli.net/2020/08/20/ZIrBeMjRAydVW2h.png" alt="Xshell连接1.png"></p><p>接着点击<strong>用户身份验证</strong>，右侧依次填入root（以超级管理员身份登陆）、密码（您创建时所设置的密码）：</p><p><img src="https://i.loli.net/2020/08/20/bdXYDZyExQarVv1.png" alt="Xshell设置登陆密码.png"></p><p>然后点击连接，第一次连接会出现如下所示警告，选择<strong>接受并保存</strong>即可：</p><p><img src="https://i.loli.net/2020/08/20/ylo6WFDK43heQLk.png" alt="接受并保存密钥.png"></p><p>出现如图所示信息即表示您已连接成功！！！</p><p><img src="https://i.loli.net/2020/08/20/7zhlPawvTpGZuJF.png" alt="Xshell连接成功.png"></p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>现在，您可以完全控制位于世界某个地方的数据中心中的计算机。</p><p>这不是很酷吗？ 这仅仅是个开始。</p><p>接下来我将会写一系列文章介绍VPS的一些用途，敬请期待！</p>]]></content>
      
      
      <categories>
          
          <category> 煮鸡 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> DigitalOcean </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对惯性思维的生活观察</title>
      <link href="/2020/08/18/%E5%AF%B9%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4%E7%9A%84%E7%94%9F%E6%B4%BB%E8%A7%82%E5%AF%9F/"/>
      <url>/2020/08/18/%E5%AF%B9%E6%83%AF%E6%80%A7%E6%80%9D%E7%BB%B4%E7%9A%84%E7%94%9F%E6%B4%BB%E8%A7%82%E5%AF%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>昨天家里一楼电视坏了，今天把二楼的电视搬下去给爷爷奶奶看。</p></blockquote><p>一楼的电视平时都是爷爷奶奶在看，看的是有线数字电视。二楼的电视平时不怎么看，所以就搬下去一楼顶着先。爷爷奶奶让我播珠江台，但是我不会设置有线数字电视的信源，就让爷爷奶奶先看网络连接的电视剧好了。</p><p>按理来讲，网络电视的电视资源更丰富，而且我也播了爷爷奶奶喜欢看的抗日剧给他们了。但是他们看了没一会儿就关了。后来我成功设置了有线数字电视的信源后电视就一直在播放了。我推测原因是因为爷爷奶奶不适应网络电视的操作。有线数字电视使用遥控器选择频道就能播放了，但是网络电视是用遥控器控制菜单，对老人家确实有一定的难度。其次他们已经习惯了根据卫视的时间表跳台，XX台XX时间段播XX剧就跳转过去；但是网络电视却不是这种模式，你想看什么就看什么（但是播放前要先观看广告，这也会让老人家好感下降）。</p><p>前段日子我换了家里的路由器，WIFI也跟着换了，信号质量和速度都比以前好很多。但是没过几天我爸就让我换回原来的WIFI，因为家里的监控摄像头连接的是原来的WIFI。我说摄像头换个WIFI就好了，然后我爸又说这WIFI没用，一到卫生间就没信号（因为我帮他连接的是5G频道，速度快但是范围小，后面改成连接2.4G省事算了）。我爸把这些责任都推到新换的WIFI身上，新WIFI带来的改变是他难以接受的。</p><p>上述两个例子都反映出我家人对改变的抗拒，或者说是惯性思维。关于惯性思维，维基百科是如下介绍的：</p><blockquote><p>惯性思维指人习惯性地因循以前的思路思考问题，仿佛物体运动的惯性。惯性思维常会造成思考事情时有些盲点，且缺少创新或改变的可能性。</p></blockquote><p>未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 惯性思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>融入社会以及一些新发现</title>
      <link href="/2020/08/10/%E8%9E%8D%E5%85%A5%E7%A4%BE%E4%BC%9A%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E6%96%B0%E5%8F%91%E7%8E%B0/"/>
      <url>/2020/08/10/%E8%9E%8D%E5%85%A5%E7%A4%BE%E4%BC%9A%E4%BB%A5%E5%8F%8A%E4%B8%80%E4%BA%9B%E6%96%B0%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="王者荣耀"><a href="#王者荣耀" class="headerlink" title="王者荣耀"></a>王者荣耀</h2><p>我从高中开始就很少接触网游、手游，甚至上了大学后也仅限玩一些单机游戏。为什么会这样呢？应该是家庭环境影响了我。小时候家所在的地方比较偏僻，而且周围没什么同龄人。所以当小朋友们在网吧一起打拳皇、CF、地下城的时候，我甚至连电脑是什么样子的都不知道。一直到高中我的社交圈都很狭窄，因为我跟同龄人都没什么共同话题。</p><p>高考结束后我曾下载过王者荣耀，但是很快就删掉了。因为那个时候王者荣耀已经很火了，玩的人都已经很熟练了，我一个新手经常挂掉，导致经常被队友嘲讽。于是卸载了，毕竟很没有面子而且很没有成就感。上大学的时候王者荣耀就更火了，不止男生，连女生都开始玩。记得有一次出去聚餐，几个人打开了王者，当时暗恋的女生，感觉挺文静的，没想到也会打王者。让旁边的男生带她打排位。那时吃醋的心情……</p><p>最近在家太无聊了，也学不下去，在舍友怂恿下下载了王者。玩了几天感觉还可以，毕竟有舍友带躺。而且认识的几个学妹（没怎么聊过天）看见我在玩，就问我怎么开始打王者了，还说要带我。</p><p>游戏这玩意，不能说它一定是坏的。有个学霸舍友经常在图书馆学习，回来宿舍后打两把地下城就休息。游戏可以给我们降低沟通成本，提供好友之间的话题。不能因为容易沉迷就一味地抗拒它。</p><h2 id="抖音"><a href="#抖音" class="headerlink" title="抖音"></a>抖音</h2><p>我妈在家吃完晚饭后习惯刷抖音，有段时间我经常听到同一BGM的声音，听起来像电视剧的片尾曲（别问我为什么听得出来）。然后我就问我妈是不是在看电视剧，她说是的。跟她说不要用手机屏幕看电视剧，对眼睛不好，用电视看。结果她看了几天后又开始在抖音上看了。</p><p>当时也没在意，前几天自己下载抖音后发现原来抖音还真能看电视剧，而且很容易沉迷用抖音看电视剧。</p><p>它是怎么做的呢？一些用户把一集电视剧里的精彩部分/重要部分剪辑成短视频。这个短视频虽然是缩水的，但是剧情上没太大影响，而且都是精彩片段，很容易吸引人。在看完一个后很想继续看下去。有时候用户没有剪辑完全部剧集，没关系，抖音的推荐算法会在你下一次打开抖音，而且刚好用户剪辑了新的短视频的时候推送给你。把你留在抖音。</p><p><img src="https://i.loli.net/2020/08/10/wmNpM9jY1dEHBsQ.jpg" alt="20200810-抖音上看火影.jpg"></p><p>这个操作我是真没想到，但是它却很有用。在这个快消时代，看一集电视剧可能要二十多分钟；在抖音，两三分钟就看完，并且不影响你对剧情的理解。这个过程就有点像它把吃过的东西吐出来给你吃，你还吃得很香。</p><p>另外抖音上有个叫川久保玲球的用户，她上传的视频都是和一些普通老百姓的合照，比如小卖铺老板、环卫工人等。她是做什么的？我看到她有在卖衣服，但是与常人不一样的是，她选择跟身边的普通人合照，也没有特意去拍衣服，仅仅只是合照。但是与常人不同，就代表她成功了一半了。如果她坚持下来，那她也离成功不远了。事实上，现在她的粉丝数和获赞数就已经很高了。</p><p><img src="https://i.loli.net/2020/08/10/vzqeBXG6LAWx4ap.png" alt="20200810-川久保玲球.png"></p><p><img src="https://i.loli.net/2020/08/10/rBCkMmtlIHKRU35.jpg" alt="20200810-川久保玲秋个人主页.jpg"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以前我有个误区，一直觉得在抖音、微博或者其他社交平台在做广告的用户都是不好的，在恰烂钱。但是前几天看当下频道出的一个讲小红书博主的视频的时候，被她的一个观点点醒了。她认为，自己做广告的同时是在降低观众获取新知识的门槛。可能一个五分钟的视频是她花费一个星期去策划，去提炼内容，让观众可以更容易地接受。同时做一条广告后要出四个无广告视频来维持用户粘性，这会要求她投入更多的精力去做好一个博主。</p><p>回到王者和抖音上，传统观点认为游戏或者社交平台会毁了我们的生活。主要原因是它们容易让我们沉迷，脱离现实生活。但是，对个人而言，你没有那么伟大。如果你改变不了时代发展的潮流，那你就去适应它。尤其是游戏和社交正慢慢变成“现实”。</p><p>油管上有关注一个用户<a href="https://www.youtube.com/channel/UCctXZhXmG-kf3tlIXgVZUlw" target="_blank" rel="noopener">GaryVee</a>，他有做过一些视频，大意是讲年轻人应该去适应生活，要抓住机遇，不要视TikTok或者Instagram为洪水猛兽，要利用它们赚钱。我个人觉得这个想法是对的，不能抱着旧观念不放。而且我出来社会，我不赚钱，我出来干什么？一些视频可能会跟你说不忘初心，不要老想着钱。但是如果你连维持自己的生活需要都做不到，还谈什么改变世界。并且有钱后才能有更大的能力去做你想做的事情。</p><p><img src="https://i.loli.net/2020/08/10/BLlJX6cyR7ESHkd.jpg" alt="meme-我出来打工.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 王者荣耀 </tag>
            
            <tag> 抖音 </tag>
            
            <tag> 社交 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>height: 100%无效？</title>
      <link href="/2020/07/21/height-100-%E6%97%A0%E6%95%88%EF%BC%9F/"/>
      <url>/2020/07/21/height-100-%E6%97%A0%E6%95%88%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>昨晚在做一个小demo时想要实现水平垂直都居中的效果，使用flex布局，CSS样式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://i.loli.net/2020/07/21/5ytnCKTG7mJVgY4.png" alt="2020-07-21_初始效果.png"></p><p>可以看到水平居中生效了，但垂直方向上并没有居中。google一番后发现可能是没有指定高度，遂加上<code>height: 100%</code>，结果还是不行。试着给出具体值，如<code>height: 600px</code>，发现确实有居中。因此一定是<code>height: 100%</code>有问题。</p><p>F12右键检查，发现父元素的高度跟container一样高，因此原因很可能是出在父元素身上。</p><p><img src="https://i.loli.net/2020/07/21/GctgyE9LKV46QZT.png" alt="2020-07-21_父元素跟子元素一样高.png"></p><p>google一番后发现原来浏览器默认的body和html高度是auto。因此需要使用如下代码进行指定：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外块元素的高度也需要设置或者由内容的高度来决定。</p><p><img src="https://i.loli.net/2020/07/21/iq2fLHEvR9b61kp.png" alt="2020-07-21_最终效果.png"></p><p>说起来，这个问题好像在大二刚接触前端的时候也有搜索过，看来不会的还是要多多记录下来，以后还可以回过头来看看自己踩过的坑</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不经意间的愤怒是可怕的</title>
      <link href="/2020/07/19/%E4%B8%8D%E7%BB%8F%E6%84%8F%E9%97%B4%E7%9A%84%E6%84%A4%E6%80%92%E6%98%AF%E5%8F%AF%E6%80%95%E7%9A%84/"/>
      <url>/2020/07/19/%E4%B8%8D%E7%BB%8F%E6%84%8F%E9%97%B4%E7%9A%84%E6%84%A4%E6%80%92%E6%98%AF%E5%8F%AF%E6%80%95%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">输入密码，查看文章。</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="ff36eb7b25dd3ab0b45dfffee7363ee091d486afe1fbc86e2e7d8711d02bdeb8">39c7b9a45a4951d44449ca8323d11d90f602dca03304520ce4f40c8d482cedae843976c3f4430e6754a086faf8c1332196a126854abf237727ddb7d1ca6a67c508084b531ef99a751e22c307e08128d704c7a8893f0020b21b2a1919a39d6897127c052f2f59922ece21681e552f49b207a7781d3d93f7dca9e27a39e7c1693c11acf5c69da864034ae5c3757aff90785bab978c586a726068be9203465186086c0da668021f58d9b3ff9fddfdfd5ef61a1c0d312d6adc15f02140ea28b7d5df73e24f4d437d2324bf274b91a76a97bcbee47cfb7af45f4e483ad4eb84da03960b4c2a39f4812b914f1f4b597a82da2c1592bbd8054f6cf83ee3297879cf72251996b8886a10466e2bbfa96ba61a0dba7d19b870d8504850a0e009fb4f7980963bcea244059c4f15e0218687c56641a92f9262a14945d9468820cd31008a3d22f02d433726e59b671094509ccc691288a61bfcf4702cd32af824f7ffc2112bf3ef6a86628a790db36d426bcd5d139ca1cb505b1dbebb0dee1bc4b23cc5a263362b283fa9b807684f7611e467e5ffba59834309e9cf9d128f5141b7fd85b6f8ae81deabc402e8a12443cf0caf3fabb8ea234999f94794faec34538efabdc21175c275bfe098435c9ff69873f9d0b090676091d884edf2b581f04845c276c2fa2237622b92f1da65eead1d01eac3b262fbcf41cb90cbce7ac571cb7f396da19ee61f27dae6707f24495d58b93867b4513fdd6c3636ab8a1bc7da9f69e3801c12ff787aa057e79ec9eaecd6c068015ecf37dee6233b04047c6c65e5720879c2ed961e8f30af13dae3af20988cad8742e7af860ec41e8b762df4ae028de351a57d904f6d9f6d296a8655ad632b6691c2266c27efa6dd536977366e667a806b069d4fef41f6c4f90e2f673088e6f42595b70bc4f92424f1cb052131004677637f30ef43541b30a85139c996d3c25aaa354752c72f5c855ec787834f9d32f05effdd4f51cb734ecfa6a1f6a3114172ef4e413b29dd8c8f2a074a611a9d687fd58a4cf0e732ebfdf8f76b439d641882e7d8cc7614fc6ab42581f38810f7a24eb4ef52272d5f117e7e43016945ff556c4449f66c4f9447c91a3ecca7dbef67a080bbcfc79603b954332cf2d13a5c7c0b6043fb45fd1cabed3e511f521f91e1f18274e267a4341c0ea69c2d4958d22ef5bac3e3e046064cb98306f4d00ebbc5df9e2f35ba4b9643349f150b78d565589f87e7b4d14a98a9e79847f25cf9178d487e1ace8d305f52218de06d3d419017388cbdbb7dd7dfa659811b923c9ffad6d6b7cf2c8574bbf9a6ba6171427954c518260c7696371a982524337a8b42dd119c8452dbf638f05bbf3a2f3151c247adb424c981092faa0b69f11139f4218bf47967cd625aedf4731e626ad697839ed8bfbe33508040be61268d68bf9c899c136247c90c6557cc57b0aeb9b64b7a47aeda88367e75375ea48a211a253a5dd575e475ab090193a5116f926001cfc35c04e30fed074392d1beb8efa47ca738193b95cfc57f197b0a0db6c5c94ac54b5960412b1ae88f088f7070cb87dced433c293a295fd303600bdcd0bf6d8fe261d78ceb9e4cf55aa617998b0c3e84259c38735915686ddc686fee49390b2f1b914094d9b6392d9e7acdf36af7f299ba2f1e7d47dc7b2818280c3cd8cc9189bf0af528fe2dd70e1da6f421ceada8dbcc00a13c94cb63dc2d1a6cf6010b32917f7d10fc1623d22f2a48eca807ce2b908a8c62132fff8cfc03f15447f09255f6ac776c406b79f7cb43a99f3ad9d3f0f03bba90d736c3c7a1ec8a7fa6ab8af299ac8bb52263a63495dc1ddf64d5f1101edb394cd7cb2bd36420f8ffd332e902486d3ef387cac5b0c0dbeebc63e03a9a520f49c6cdfa70e95f7fd656ac65e395a3108a81755fb40b5bdc50b3037c405e548e4efc150f2eba3e6d1d4e5f71404d6091d0cdb9d9345c47155cc0b0ced87438c797c71638eed81dd06efe4b581157560519ab570bd65818a48026397e93bb7b5870065babdc6711ef2e470d7b51ac837774983dfa47b2b53196f24eba11f8af54c2936a0f9ae2c1aa64d1933e82ee6cc7a12811844112bd9427f2d99bb57f1edd9d8f6f26cfa1a0058f54a8a993d6f7f4f036274276a25d20fd8458a43d8ddf561e537cc45482e985cdcd8d75aa1f3bdc83f9d0cc64c1cdc92d46041c61ff32c6970ddeeb3558f3f044a3555948ae253d1b9e27e685209ac71a172da42a1e24ef344d8b41ced28042c7883ad264b1e2d05c7ced10c44fdd6afda4d50dfbba95aba9134d8ab3e5555858e9a1b6e43efb69818badaa5c8ba532de7eed82a16d9cf7fed3bcb9712ff9366484ea75381d92eaab77124a59a82fe27274d974a7744531b304cd7568d1975404fd0fab18bddc956a029b75d20bde9cf6a8afc437f9df46742d7979335c9c3fd43453f5d7ccf7e8694e4f6d8b183195c8a73836ae7db3fa853c9d9847581c0b80c582a2cbae1c4a3c8a188f85b23d7ad2300cc8febbed4d5e4ee75202597835ef81984556019cdaf30a602a59dad8abf41ea51856e1be79ebdb095c11bd678dae0bae5afa112079647737456f4ac32daf50a5d12f2fd4efd1cc5f6f86257f3ccf34479bd4a429e16ee69a96159d77c72ba76cd1bd20ace2bff17ead8df14900</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 情绪 </tag>
            
            <tag> 家人 </tag>
            
            <tag> 语言 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript、ES6、TypeScript之间的关系</title>
      <link href="/2020/07/15/JavaScript%E3%80%81ES6%E3%80%81TypeScript%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
      <url>/2020/07/15/JavaScript%E3%80%81ES6%E3%80%81TypeScript%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天复习前端三剑客之<strong>JavaScript</strong>。</p></blockquote><h2 id="JavaScript和ES6"><a href="#JavaScript和ES6" class="headerlink" title="JavaScript和ES6"></a>JavaScript和ES6</h2><p>JavaScript看了也挺多遍了，在学习过程中经常遇到ES6和TypeScript这些字眼。以前因为没接触过，所以不自觉地就觉得它们高深莫测，好像很难的样子。今天不知道看什么资料复习，找到了以前经常看的<a href="https://www.youtube.com/channel/UCazV3A3_1-Mtd6E_auw_ifg" target="_blank" rel="noopener">小马技术频道</a>，里面刚好有讲ES6，遂把这个<a href="https://www.youtube.com/playlist?list=PLliocbKHJNwu150Kc7_eEywQBFLTJyPZs" target="_blank" rel="noopener">系列视频</a>看了一遍。视频不算多，一共就23个视频，每个视频大概五六分钟时长。看完后发现ES6的一些语法其实我之前也有接触过、使用过，只不过当时并不知道而已。</p><p>那么ES6和JavaScript之间到底有什么关系呢？根据个人理解，<strong>ES6是一个规范，而JavaScript是具体实现</strong>。当然除了ES6还有其他版本ES，只不过目前ES6较为流行和普适。</p><h2 id="JavaScript和TypeScript"><a href="#JavaScript和TypeScript" class="headerlink" title="JavaScript和TypeScript"></a>JavaScript和TypeScript</h2><p>那么<a href="https://www.typescriptlang.org/" target="_blank" rel="noopener">TypeScript</a>又是什么呢？<a href="https://www.youtube.com/channel/UCazV3A3_1-Mtd6E_auw_ifg" target="_blank" rel="noopener">小马技术频道</a>里也有一个TypeScript的<a href="https://www.youtube.com/playlist?list=PLliocbKHJNwtCfLQu5U3LF_AS-wuP6M7w" target="_blank" rel="noopener">系列视频</a>，不过目前还没看完。根据维基百科的介绍：</p><blockquote><p>TypeScript是一种开源的编程语言，该语言项目由微软进行维护和管理。TypeScript不仅包含JavaScript的语法，而且还提供了静态类型检查以及使用看起来像基于类的面向对象编程语法操作Prototype。</p></blockquote><p>大众说法说，TypeScript是JavaScript的超集。简单理解就是<strong>语法上合法的JavaScript，一定是合法的TypeScript。</strong></p><h3 id="如何使用TypeScript呢？"><a href="#如何使用TypeScript呢？" class="headerlink" title="如何使用TypeScript呢？"></a>如何使用TypeScript呢？</h3><p>在win10操作系统下，您可以通过<code>npm install -g typescript</code>进行安装，安装完成后使用<code>tsc -v</code>进行检查，若出现版本号则表示安装成功。</p><p>编写一个以<code>ts</code>为后缀的文件，接着使用<code>tsc ${fileName}.ts</code>进行编译，编译成功后就可以看到多出来一个<code>${fileName}.js</code>文件，直接运行<code>node ${fileName}.js</code>即可。</p><p>另外，学习JavaScript过程中也经常遇到<a href="https://babeljs.io/" target="_blank" rel="noopener">Babel</a>这个名词，通俗理解，Babel解决并不是所有浏览器都支持高版本JavaScript的问题。它可以将高版本JavaScript转变为低版本。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> ES6 </tag>
            
            <tag> TypeScript </tag>
            
            <tag> Babel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生苦短，及时行乐</title>
      <link href="/2020/07/13/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD%EF%BC%8C%E5%8F%8A%E6%97%B6%E8%A1%8C%E4%B9%90/"/>
      <url>/2020/07/13/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD%EF%BC%8C%E5%8F%8A%E6%97%B6%E8%A1%8C%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p>最近情绪不太稳定，有时候是积极的，有时候是消极的。还经常回忆过去，想着当时应该怎么怎么做才对。可惜呀~人生苦短，过去的事情无法改变了。而未来，似乎也没剩下多少时间。随着年龄的增长越来越觉得时间短暂了。也因为如此时常变得焦虑，总觉得要做的事情有很多，但是又不想去做，就这么拖着。</p><p>不应该这样吧？我应该变成一个积极乐观向上的人才对。</p><p>也可能是因为我所接触的人都没什么朝气？应该是有这部分影响的。昨天看油管上看了一个台湾油管主的视频感觉特别有活力啊。其实上学期教我们软件工程课程的台湾老师也很有活力，虽然看上去有50左右了吧，心态却跟20岁差不多。国外看到的很多视频主都很有活力，国内看到的大部分都很拘谨，虽然也有笑容，但看不出他们有活力，感觉被什么东西压着。</p><p>一直觉得互联网应该让人们变得更开放、更包容。但是国内互联网却把人极端化、偏见化，非黑即白。虽然生活中大部分人都是灰色的，但是一到网上，大家就不自觉地开始站队，要么支持这个，要么支持那个。</p><p>对了，傍晚约了个师妹拍照。好久没拍照了，拍照应该是我在大学做的最开心的事情了，可以预见许多人，可以收到许多人的赞美，可以改变自己的生活，这是一件正确而快乐的事情。</p><p>我要成为什么样的人呢？成为多度橙吧，做很多快乐的事情。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili评论转图片神器开发日志-CSS Variables使用</title>
      <link href="/2020/07/12/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-CSS-Variables%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/12/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-CSS-Variables%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在开发<a href="tool.mightyherox.me">Bilibili评论转图片神器</a>，功能是将Bilibili视频评论区的评论转换成PNG图片。</p></blockquote><p>在开发评论模块过程中想要实现按键切换修改评论背景和文字颜色的功能，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d-flex flex-wrap align-items-start justify-content-center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment"</span> <span class="attr">v-for</span>=<span class="string">"item in comments"</span> <span class="attr">ref</span>=<span class="string">"comment"</span> <span class="attr">:class</span>=<span class="string">"&#123; 'comment-dark': darkTheme &#125;"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">:style</span>=<span class="string">"&#123; 'border-radius': borderRadius + 'px' &#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"author-thumbnail"</span> <span class="attr">:src</span>=<span class="string">"item.member.avatar"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment-main"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"user-name"</span>&gt;</span>&#123;&#123; item.member.uname &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span> <span class="attr">v-html</span>=<span class="string">"item.content.message"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"published-time"</span> <span class="attr">v-if</span>=<span class="string">"displayTime"</span>&gt;</span>&#123;&#123; timestampFormat(item.ctime) &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.comment</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">360px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.author-thumbnail</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-main</span> <span class="selector-class">.user-name</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-main</span> <span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#222</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-main</span> <span class="selector-class">.published-time</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#aaa</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-dark</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#181818</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用的是Vue，当<code>darkTheme</code>为<code>true</code>时，显示<code>comment-dark</code>样式，利用CSS层叠性覆盖前面<code>comment</code>设定的背景和文字颜色。但是实际过程中遇到了CSS权重问题，只能修改背景颜色而无法修改文字颜色。</p><p>google后发现有CSS Variables这么个东西，它的主要特点和用法是：</p><ol><li>可以继承</li><li>以<code>--</code>开头来命名/定义变量（区分大小写）</li><li>用var()来读取变量值</li></ol><p>这样的话，我只需要进行如下修改即可完成想要的效果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.comment</span> &#123;</span><br><span class="line">    <span class="attribute">--bi-spec-general-background</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">    <span class="attribute">--bi-spec-text-primary</span>: <span class="number">#222</span>;</span><br><span class="line">    <span class="attribute">--bi-spec-text-secondary</span>: <span class="number">#aaa</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--bi-spec-general-background);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">360px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment-dark</span>&#123;</span><br><span class="line">    <span class="attribute">--bi-spec-general-background</span>: <span class="number">#181818</span>;</span><br><span class="line">    <span class="attribute">--bi-spec-text-primary</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">--bi-spec-text-secondary</span>: <span class="number">#aaa</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.author-thumbnail</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-main</span> <span class="selector-class">.user-name</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--bi-spec-text-primary);</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-main</span> <span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--bi-spec-text-primary);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comment</span> <span class="selector-class">.comment-main</span> <span class="selector-class">.published-time</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--bi-spec-text-secondary);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://ithelp.ithome.com.tw/articles/10187737" target="_blank" rel="noopener">30 天 CSS 隨手筆記 - 第 12 天 - CSS Variables~!!</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> Front-end </tag>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili评论转图片神器开发日志-JSZip使用</title>
      <link href="/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-JSZip%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-JSZip%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在开发<a href="tool.mightyherox.me">Bilibili评论转图片神器</a>，功能是将Bilibili视频评论区的评论转换成PNG图片。</p></blockquote><p>开发这个工具的思路是使用<a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener">html2canvas</a>将获取到的评论转成PNG图片，再通过<a href="https://stuk.github.io/jszip/" target="_blank" rel="noopener">JSZip</a>打包下载。</p><p><a href="https://stuk.github.io/jszip/" target="_blank" rel="noopener">JSZip</a>使用起来挺方便的，官网也有示例。在开发过程中遇到的一个问题是想要获取文件压缩打包的进度，我在中文搜索环境下找不到相关内容，不过在JSZip的github issues中找到了相关<a href="https://github.com/Stuk/jszip/issues/373" target="_blank" rel="noopener">记录</a>。</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for(var a&#x3D;0; a &lt; name.length; a++) &#123;</span><br><span class="line">  zip.file(&quot;DXFs&#x2F;&quot; + name[a] + &quot;.dxf&quot;, toDXF(shape));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">zip.generateAsync(&#123;type: &quot;blob&quot;, streamFiles: true&#125;, function updateCallback(metadata) &#123;</span><br><span class="line">  element.style.width &#x3D; metadata.percent + &#39;%&#39;;</span><br><span class="line">&#125;)</span><br><span class="line">.then(function (blob) &#123;</span><br><span class="line">  saveAs(blob, &quot;Files.zip&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> JSZip </tag>
            
            <tag> Front-end </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili评论转图片神器开发日志-html2canvas使用</title>
      <link href="/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-html2canvas%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-html2canvas%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在开发<a href="tool.mightyherox.me">Bilibili评论转图片神器</a>，功能是将Bilibili视频评论区的评论转换成PNG图片。</p></blockquote><p>开发这个工具的思路是使用<a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener">html2canvas</a>将获取到的评论转成PNG图片，再通过<a href="https://stuk.github.io/jszip/" target="_blank" rel="noopener">JSZip</a>打包下载。</p><p><a href="https://html2canvas.hertzen.com/" target="_blank" rel="noopener">html2canvas</a>这个工具的使用挺简单的，官网也有示例。</p><p><img src="https://i.loli.net/2020/07/11/pc68nZG7IYkA4Qt.png" alt="html2canvas官网"></p><p>以下记录自己遇到的一些问题：</p><h2 id="图片空白？"><a href="#图片空白？" class="headerlink" title="图片空白？"></a><del>图片空白？</del></h2><p><del>我使用的是Vue，推测原因是DOM还没渲染完，html2canvas就开始转图片了。解决方法是使用nextTick，等DOM渲染完了再转图片。</del></p><blockquote><p><del>在created()钩子函数执行的时候DOM 其实并未进行任何渲染，而此时进行DOM操作无异于徒劳，所以此处一定要将DOM操作的js代码放进Vue.nextTick()的回调函数中。与之对应的就是mounted()钩子函数，因为该钩子函数执行时所有的DOM挂载和渲染都已完成，此时在该钩子函数中进行任何DOM操作都不会有问题 。<br><a href="https://juejin.im/post/5a6fdb846fb9a01cc0268618" target="_blank" rel="noopener">简单理解Vue中的nextTick</a></del></p></blockquote><p><em>2020年7月30日 更新</em></p><p>昨天把nextTick去掉未发现空白问题，估计当时是由于别的原因造成的，现在无法重现问题。</p><h2 id="canvas中含有跨域图片，图片不显示？"><a href="#canvas中含有跨域图片，图片不显示？" class="headerlink" title="canvas中含有跨域图片，图片不显示？"></a>canvas中含有跨域图片，图片不显示？</h2><p>html2canvas默认不显示跨域图片，需要在配置中开启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">allowTaint: true,</span><br><span class="line">&#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">useCORS: true,</span><br></pre></td></tr></table></figure><h2 id="窗口有滚动，图片显示有偏差？"><a href="#窗口有滚动，图片显示有偏差？" class="headerlink" title="窗口有滚动，图片显示有偏差？"></a>窗口有滚动，图片显示有偏差？</h2><p>需要计算绘制元素的位置，具体代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">this.$nextTick(() &#x3D;&gt; &#123;</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取需要绘制的元素</span><br><span class="line">        let comments &#x3D; this.$refs.comment;</span><br><span class="line">        for (let i &#x3D; 0; i &lt; comments.length; i++) &#123;</span><br><span class="line">            &#x2F;&#x2F; 评论内容做图片名</span><br><span class="line">            let imgName &#x3D; comments[i].innerText.split(&quot;\n&quot;)[1];</span><br><span class="line">            &#x2F;&#x2F; 返回元素的大小及其相对于视口的位置</span><br><span class="line">            let rect &#x3D; comments[i].getBoundingClientRect();</span><br><span class="line">            &#x2F;&#x2F; 不知为何rect.x返回的坐标不准确，需要加上8.5才行</span><br><span class="line">            rect.x +&#x3D; 8.5;</span><br><span class="line">            &#x2F;&#x2F; 获取滚动轴滚动的长度</span><br><span class="line">            let scrollTop &#x3D; document.documentElement.scrollTop || document.body.scrollTop</span><br><span class="line">            &#x2F;&#x2F; 获取dom 宽度</span><br><span class="line">            let width &#x3D; comments[i].offsetWidth</span><br><span class="line">            &#x2F;&#x2F; 获取dom 高度</span><br><span class="line">            let height &#x3D; comments[i].offsetHeight</span><br><span class="line">            html2canvas(comments[i], &#123;</span><br><span class="line">                &#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">                allowTaint: true,</span><br><span class="line">                &#x2F;&#x2F; 允许跨域（图片相关）</span><br><span class="line">                useCORS: true,</span><br><span class="line">                &#x2F;&#x2F; 截图的背景颜色</span><br><span class="line">                backgroundColor: &#39;transparent&#39;,</span><br><span class="line">                &#x2F;&#x2F; 图片x轴偏移量</span><br><span class="line">                x: rect.x,</span><br><span class="line">                &#x2F;&#x2F; 图片宽度</span><br><span class="line">                width: width,</span><br><span class="line">                &#x2F;&#x2F; 图片高度</span><br><span class="line">                height: height,</span><br><span class="line">                &#x2F;&#x2F; y轴滚动</span><br><span class="line">                scrollY: -scrollTop,</span><br><span class="line">                &#x2F;&#x2F; 放大2倍</span><br><span class="line">                scale: 2,</span><br><span class="line">                &#x2F;&#x2F; 关闭日志</span><br><span class="line">                logging: false,</span><br><span class="line">            &#125;).then(canvas &#x3D;&gt; &#123;</span><br><span class="line">                &#x2F;&#x2F; JSZip模块中的base64.js会对文件格式进行检测，所以我们需要将之前canvas.toDataURL()得到的data去除前缀imgData &#x3D; imgData.split(&quot;data:image&#x2F;png;base64,&quot;)[1];。</span><br><span class="line">                let imgData &#x3D; canvas.toDataURL().split(&#39;data:image&#x2F;png;base64,&#39;)[1];</span><br><span class="line">                &#x2F;&#x2F;这个images文件目录中创建一个base64数据为imgData的图像，图像名是上面获取的imaName</span><br><span class="line">                img.file(imgName + &#39;.png&#39;, imgData, &#123; base64: true &#125;);</span><br><span class="line">                that.done1 +&#x3D; 1;</span><br><span class="line">                console.log(&quot;添加图片&quot; + i);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> Front-end </tag>
            
            <tag> 前端 </tag>
            
            <tag> html2canvas </tag>
            
            <tag> Vue </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bilibili评论转图片神器开发日志-解决跨域问题</title>
      <link href="/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2020/07/11/Bilibili%E8%AF%84%E8%AE%BA%E8%BD%AC%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97-%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在开发<a href="tool.mightyherox.me">Bilibili评论转图片神器</a>，功能是将Bilibili视频评论区的评论转换成PNG图片。</p></blockquote><p>本来打算是做一个纯前端，通过<a href="https://github.com/SocialSisterYi/bilibili-API-collect/blob/master/comment/comment_list.md" target="_blank" rel="noopener">B站API</a>（热心网友整理的API）获取数据即可。但是实际开发过程中遇到了跨域问题。</p><p>关于跨域问题的解决，网上有许多解决方案，比如jsonp。</p><p>原本以为使用jsonp后，就可以开开心心的从B站获取数据了。但悲剧又来了，B站API返回的是json格式，jsonp要求返回jsonp格式。</p><p><img src="https://i.loli.net/2020/07/11/q5i4nUbJ32RyEKd.png" alt="2020-07-11-CORB.png"></p><p>上图显示，我虽然获得了数据，但是浏览器说这个是json数据，不是jsonp数据，所以我把它拦截下来了。晕，就是说我收到了这个数据，但是浏览器把它拦在了门口不进来。</p><p>网上找到大多数解决方案是不用jsonp，而是cross。但是应用场景是自家api，修改服务端就可以了。B站又不是我家开的，改不了它的服务端呀。于是选择一个折中的办法——自己写一个后端API，用API去取数据。</p><p>之前学过一点node.js，这次就使用node.js来处理。</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; express, http</span><br><span class="line">const express &#x3D; require(&#39;express&#39;);</span><br><span class="line">const app &#x3D; express();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; request</span><br><span class="line">const request &#x3D; require(&#39;request&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; body parser</span><br><span class="line">const bodyParser &#x3D; require(&#39;body-parser&#39;);</span><br><span class="line">app.use(bodyParser.urlencoded(&#123; extended: false &#125;));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; port</span><br><span class="line">const PORT &#x3D; 8089;</span><br><span class="line">app.listen(PORT);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; cross domain config</span><br><span class="line">app.all(&#39;&#x2F;api&#x2F;v1&#39;, (req, res, next) &#x3D;&gt; &#123;</span><br><span class="line">    res.header(&#39;Access-Control-Allow-Origin&#39;, &#39;*&#39;);</span><br><span class="line">    res.header(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With&#39;);</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(&#39;&#x2F;api&#x2F;v1&#x2F;bv2av&#39;, (req, res, next) &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 白名單</span><br><span class="line">    if (!req.get(&#39;Origin&#39;)) return;</span><br><span class="line"></span><br><span class="line">    res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;);</span><br><span class="line"></span><br><span class="line">    request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;web-interface&#x2F;view?bvid&#x3D;&#39; + req.query.bvid, function (error, response, body) &#123;</span><br><span class="line">        if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123;</span><br><span class="line">            res.send(body)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(&#39;&#x2F;api&#x2F;v1&#x2F;comments&#39;, (req, res, next) &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 白名單</span><br><span class="line">    if (!req.get(&#39;Origin&#39;)) return;</span><br><span class="line"></span><br><span class="line">    res.set(&#39;Access-Control-Allow-Origin&#39;, &#39;http:&#x2F;&#x2F;127.0.0.1:5500&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Methods&#39;, &#39;GET, POST&#39;);</span><br><span class="line">    res.set(&#39;Access-Control-Allow-Headers&#39;, &#39;X-Requested-With, Content-Type&#39;);</span><br><span class="line">    request(&#39;https:&#x2F;&#x2F;api.bilibili.com&#x2F;x&#x2F;reply?type&#x3D;1&amp;oid&#x3D;&#39; + req.query.oid + &#39;&amp;sort&#x3D;&#39; + req.query.sort + &#39;&amp;pn&#x3D;&#39; + req.query.pn + &#39;&amp;ps&#x3D;&#39; + req.query.ps + &#39;&amp;nohot&#x3D;1&#39;, function (error, response, body) &#123;</span><br><span class="line">        if (!error &amp;&amp; response.statusCode &#x3D;&#x3D; 200) &#123;</span><br><span class="line">            res.send(body)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样，前端只需要向我写的node.js端发起请求即可获取数据。</p><p>另外还有一个小问题，用户头像的图片无法显示出来，但是手动访问链接后再刷新又可以显示了。如下图：</p><p><img src="https://i.loli.net/2020/07/11/z9loMUiKnwCVTBR.png" alt="2020-07-11-服务器设置防盗链.png"></p><p>google一番后发现是因为服务器设置了图片防盗链的原因，解决方法很简单，在head加上一行代码即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;referrer&quot; content&#x3D;&quot;no-referrer&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://letswrite.tw/api-cross-domain-node/" target="_blank" rel="noopener">接氣象局api、跨網域ajax資料</a></p><p><a href="https://www.ituring.com.cn/article/273795" target="_blank" rel="noopener">秒建一个 json 转 jsonp 的中间层服务器</a></p><p><a href="https://www.jianshu.com/p/e1e2920dac95" target="_blank" rel="noopener">JSONP跨域详解</a></p><p><a href="https://www.cnblogs.com/brusally/p/11198512.html" target="_blank" rel="noopener">对B站各种数据进行抓包分析</a></p><p><a href="https://github.com/SocialSisterYi/bilibili-API-collect" target="_blank" rel="noopener">bilibili-API-collect</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bilibili </tag>
            
            <tag> Front-end </tag>
            
            <tag> 前端 </tag>
            
            <tag> 跨域 </tag>
            
            <tag> Nodejs </tag>
            
            <tag> 防盗链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观看《隐姓亿万富翁》的收获</title>
      <link href="/2020/06/20/%E9%9A%90%E5%A7%93%E4%BA%BF%E4%B8%87%E5%AF%8C%E7%BF%81/"/>
      <url>/2020/06/20/%E9%9A%90%E5%A7%93%E4%BA%BF%E4%B8%87%E5%AF%8C%E7%BF%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在看一个节目《隐姓亿万富翁》，讲述的是亿万富翁Glenn Stearns只带着一百美元、一辆皮卡挑战在一个陌生城市90天内白手起家的故事。</p></blockquote><p>Glenn的创业过程大概是先解决温饱问题，招募团队，获取启动资金，寻找发展方向，火力全开。不过这些并不是线性的，很多时候是并行发生的。</p><p>Glenn这次创业其实并不是真正的“白手起家”，他作为亿万富翁，本身的经验就是他最大的财富了，所以他能看到别人看不到的点。但是，一个人的力量是有限的，一个优秀的团队是必要的。节目也是主要围绕他的团队来讲述。从他的团队中我们可以看到需要值得注意的地方。</p><p>首先是团队中的每个人都得为彼此负责。在肋排节中主厨克里斯汀多次让货物供不应求，同时筹备期间她只会打包票，不跟别人说如何执行，只是让别人信任她。出错了不去寻找自身的错误，只会找借口把责任推给别人的人。很多次出现问题了，她没有想办法去解决，只是去抱怨。在节目中也可以看到，她作为主厨，但跟其他人的联系并不是特别深厚，更多的是在单打独斗。这样的人，尽管她付出也很多，但终究还是难以担负重任，最后也是和Glenn不欢而散。</p><p>另外，如果你加入了这个团队，你就得主动为这个团队做贡献。Glenn的团队元老最后基本上都获得了2万美元的回报，除了克里斯是5千美元。克里斯这个人怎么说呢？从外表看上去，他是个普通的职员，看不到激情。事实上，他作为团队元老加入后，做的事情并不多，很多时候都看不见他的人影。他的思维应该还停留在职员思维上，等着领导安排事情，做完就算了。</p><p><strong>赚钱的本质是中间商赚差价。</strong>创业过程中，Glenn为了获取创业资本和满足温饱，多次倒卖二手车、房地产。总结一句话就是<strong>低价买入，高价卖出</strong>。要完成这个过程，就要学会掌握信息差和加工。举个例子，公司雇佣你并支付你薪水是因为你的工作只值这么多吗？肯定不是的，一定是因为你做出来的成果比支付你的薪水还要高才能继续维持这种雇佣关系。公司把你的工作成果卖出去，从中获利。那为什么大多数人不选择自己给自己打工，把中间商的环节也赚了。因为大多数人都没有那个信息差。比如说程序员，大多数程序员的交际圈比较窄，同时也不擅长与他人打交道。你让他去谈生意与让老板去谈生意结果相差很大的。另一个例子，为什么那么多字幕组或者在国外生活的留学生回国做自媒体？因为他们做给外国人看没价值啊。但是做给国人看就不一样了。大多数国人听不懂外语，对国外生活不了解。前期吸一波粉之后就可以开始割韭菜了（当然也有不少用爱发电的字幕组）。</p><p><strong>专业的事让专业的人去做。</strong>Glenn在稳定生计后立马开始组建自己的团队，寻找专业的人才。比如倒卖二手房的时候找来当地比较出名的道恩来负责翻新，期间房子发霉了还花了一笔大钱请专业公司来清理。这跟前面的中间商赚差价差不多。你不可能把全部的钱都赚了，首先你做不到，其次成本太高。比如房子发霉了自己来清理，你要去学习如何清理，你还要购买工具，甚至你最后可能清理得不干净，卖房的时候被发现直接白干了。学海无涯而生有涯，不要想着事事都能兼顾得来。</p><p>最后说说Glenn吧，他在90天挑战中始终保持着激情和主动。面对挫折，没有沉溺在痛苦中，而是很快就想办法去解决它。作为团队的领导者，他要为团队的成员安排合适的工作，并不断推动他们往前。最重要的还是行动！行动起来！用尽全力去完成！</p><p>这里是Glenn所创建的UNDERDOG BBQ<a href="https://underdogbbq.com/" target="_blank" rel="noopener">官网</a>以及他们的<a href="https://underdogbbq.com/pages/about-the-underdogs" target="_blank" rel="noopener">故事</a>。</p><p><img src="https://cdn.shopify.com/s/files/1/0247/1208/5564/files/81278236_10157192556783740_3923100201354526720_o.jpg?v=1577910118" alt="UNDERDOGS"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 团队 </tag>
            
            <tag> 励志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超学习-面向项目学习以及学会寻找学习资源</title>
      <link href="/2020/05/22/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%BC%9A%E5%AF%BB%E6%89%BE%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
      <url>/2020/05/22/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E9%9D%A2%E5%90%91%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%AD%A6%E4%BC%9A%E5%AF%BB%E6%89%BE%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="面向项目学习"><a href="#面向项目学习" class="headerlink" title="面向项目学习"></a>面向项目学习</h2><p>最近主要在给软件开发综合训练的课设写前端页面。这是一个小组项目，后端有两位大佬负责，前端由我和另一个同学负责。不过我和另一个同学对前端都不是很熟悉，第一次接触原项目的开发者使用的freemarker模板引擎。虽然不熟，但也只能硬上了。也正因为有压力在，所以很快就上手了freemarker。难点是从后端拿数据，后端同学和原作者返回数据的格式和方式不同。如果直接用后端同学的接口，那么前端很多页面都不能复用原作者的，工作量有点大。但是后端同学又不愿意改（大佬就是大佬~）。只能自己改后端了。疯狂面向搜索编程总算搞定了。也因此对后端有了进一步的认识。</p><p>这几天的学习成果，如果没有项目驱动的话，我估计要学很久，而且很有可能是从0开始学习。但是项目开发不会给你那么多时间，你只能挑着学、跳着学以便尽快上线。这种学习方式可以让你了解到真实项目开发中所需的技术，很多时候，只要你会CRUD就能搞定一个项目了。</p><h2 id="学会寻找学习资源"><a href="#学会寻找学习资源" class="headerlink" title="学会寻找学习资源"></a>学会寻找学习资源</h2><p>今天做计网实验数据包分析居然做了一天！！！比较浪费时间的地方在于验证UDP检验和。这部分知识我还没学到，但是老师有给实验参考，我就照着参考来做了。坑爹的是，老师给的参考前后数据不一致，比如前面IP数据报给的源地址、目的地址与计算检验和时用到的不一样。还有数据部分看截图不止7个字节，但是验证的时候却只计算了7个字节。因为一开始不懂，我还纠结了很久，最后决定还是google一番，果然，被参考坑了。</p><p>其实被坑的次数也不少了。比如之前学高数，教材一开始还能看得懂，后面开始云里雾里。搞得我都开始怀疑人生了。后来去B站找了个视频，忘记哪个频道了，但是别人讲的方式一下子让我明了，知道了为什么会是这样。这也让我开始养成学习新知识之前，先去寻找哪些资源比较好。讲真，国内大部分教材都很生硬，感觉就是为了让人学不下去的XD。尤其是计算机专业，很多时候你看中文教材看不懂的时候，看看英文教材就知道是怎么回事了。</p>]]></content>
      
      
      <categories>
          
          <category> 超学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 超学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超学习-学会抽象</title>
      <link href="/2020/05/15/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%BC%9A%E6%8A%BD%E8%B1%A1/"/>
      <url>/2020/05/15/%E8%B6%85%E5%AD%A6%E4%B9%A0-%E5%AD%A6%E4%BC%9A%E6%8A%BD%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>大二有段时间在看Crash Course的<a href="https://www.bilibili.com/video/BV1EW411u7th" target="_blank" rel="noopener">计算机科学速成课</a>，这系列的内容都很有趣，易于消化。印象深刻的一个细节是主持人Carrie Anne经常会让我们进入一个抽象的层面去理解新概念。</p><p><img src="https://i.loli.net/2020/05/15/VKJG2DsHoUX7hO6.png" alt="进入了另一层抽象"></p><p>什么是抽象？</p><p>抽象这个词听起来就很抽象。个人看法是把某个功能封装起来，不要考虑它内部细节，而是着重于外部展示出来的效果。打个比方就是家里每天都在使用的电饭煲，你了解它工作的时候内部是怎么运行的吗？我相信大部分人肯定都不了解，但是我们都会使用它去做出美味的饭。</p><p>学习也是一样的道理，大部分人的学习方法是从第一章开始看，一路看下去的线性的学习方法。这种方法很容易让人觉得枯燥，看着看着就看不下去了。而且很多时候我们都会遇到这么一种情况，一开始遇到某个概念难以理解，只能带着疑问往后学习。但是学到后面再回过头来看的时候就会发现原来它是那么简单。</p><p>所以在学习上我比较习惯“不求甚解”，遇到较难理解的概念，如果没必要深究下去，我会把它进行抽象。等到下次要用到这个概念的时候我只需要考虑它对外的效果即可。</p><p>总结，很多知识并不需要我们深入学习，会用就行了。用庄子的说就是“吾生也有涯，而知也无涯。以有涯随无涯，殆已！”</p><p>By the way，开头提到的<a href="https://www.bilibili.com/video/BV1EW411u7th" target="_blank" rel="noopener">计算机科学速成课</a>很不错，值得一看。</p>]]></content>
      
      
      <categories>
          
          <category> 超学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 超学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>惠院学子如何申请学生邮箱</title>
      <link href="/2020/05/14/%E6%83%A0%E9%99%A2%E5%AD%A6%E5%AD%90%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1/"/>
      <url>/2020/05/14/%E6%83%A0%E9%99%A2%E5%AD%A6%E5%AD%90%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<p>利用学生身份我们可以享受到许多学生优惠权益，这里面有很多实用资源，详情可以看这个<a href="https://github.com/ivmm/Student-resources" target="_blank" rel="noopener">链接</a></p><p>要申请学生优惠权益最常见的途径就是学生邮箱了，但是很多人不知道我们惠院的学生邮箱要怎么申请，所以接下来我将介绍如何申请惠院的学生邮箱。</p><p>首先登陆<a href="https://ehall.hzu.edu.cn/new/index.html" target="_blank" rel="noopener">惠州学院网上办事大厅</a>，然后在上方搜索框搜索<strong>惠州学院学生邮箱申请</strong>：</p><p><img src="https://i.loli.net/2020/05/14/sRr5SEvzUaVyWCi.png" alt="20200514搜索学生邮箱.png"></p><p>点击<strong>惠州学院学生邮箱申请</strong>即可进入邮箱申请页面，按照要求填写即可：</p><p><img src="https://i.loli.net/2020/05/14/jhmlQCtxubgvPBD.png" alt="20200514申请表.png"></p><p>邮箱申请似乎是电脑审核的，一般过了24小时后就可以打开<a href="http://mail.stu.hzu.edu.cn/coremail/" target="_blank" rel="noopener">惠院学生邮箱网址</a>，登陆你的账号（应该还要激活，这个我忘了要不要）使用啦~</p><p><img src="https://i.loli.net/2020/05/14/1tmCQRnJTwsIvVe.png" alt="20200514登录邮箱.png"></p><p>好好珍惜学生时光呀~</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 惠州学院 </tag>
            
            <tag> 学生 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于HZUCS_Course</title>
      <link href="/2020/05/14/%E5%85%B3%E4%BA%8EHZUCS-Course/"/>
      <url>/2020/05/14/%E5%85%B3%E4%BA%8EHZUCS-Course/</url>
      
        <content type="html"><![CDATA[<p>github上新开了一个仓库，主要用来分享一些课程资料、作业等学生原创内容。</p><p>缘由：<br>一、前段时间电脑坏了，虽然之前有备份部分资料到移动硬盘，但很不幸移动硬盘落在学校了。所以这学期的一些资料都丢失了，幸运地是也有部分资料被我上传到github上了（数据备份的重要性T_T）。<br>二、个人觉得，学习这件事情，虽然强调独立思考，但有人指点一下或许会走得更快更远。另，大部分人遇到问题就去百度，搜出一大堆乱七八糟的答案。这是不对的，有能力请尽量使用google。</p><p>所以在github上开了这个仓库，既可以与大家互相交流学习，也可以为师弟师妹们指点迷津。最重要的是开源精神，参与一个项目并能影响他人的成就感是很棒的！</p><p><img src="https://i.loli.net/2020/05/14/DzRbf8UT7VFhv9y.png" alt="影响我的人"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 惠州学院 </tag>
            
            <tag> CS </tag>
            
            <tag> github </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回归Hexo</title>
      <link href="/2020/05/11/%E5%9B%9E%E5%BD%92Hexo/"/>
      <url>/2020/05/11/%E5%9B%9E%E5%BD%92Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="技术是为人服务的"><a href="#技术是为人服务的" class="headerlink" title="技术是为人服务的"></a>技术是为人服务的</h1><p>为什么说回归Hexo？其实早在大二就已经搭建过网站，一开始用的是WordPress，后来嫌弃太臃肿，改投Hexo的怀抱。期间写了一些小文章，也折腾了几次把Hexo部署到个人服务器上。接着学习了Vue，了解到Vuepress，又开始萌生转换到Vuepress的想法。但是自己对Vuepress并不是特别熟悉，也没有太多时间去学习，折腾了一半就不了了之了。</p><p>现在回过头来发现初衷仅仅是为了有个地方给我写写文章，文章倒没写多少，技术却学得乱七八糟。何必折腾来折腾去呢？对于Hexo，使用的时间是最长的，也是最熟悉的。所以现在要回归Hexo，先把写作坚持下来再说，就这样。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
